<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/13/2014 4:11:55 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NLLT005553"
  DTS:CreatorName="NL\PBaljon"
  DTS:DelayValidation="True"
  DTS:DTSID="{0AC73B8A-C29A-4E1B-8B15-2C061E916B59}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.98"
  DTS:LocaleID="1043"
  DTS:ObjectName="ScoreLandscapeNodes"
  DTS:PackageType="5"
  DTS:VersionBuild="333"
  DTS:VersionGUID="{3DE86F12-61FA-45EA-B4BB-AF494FA2CA58}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DatahandlerDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0A1FEEBE-E051-4411-9883-3CC2F010C010}"
      DTS:ObjectName="DatahandlerDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_DatahandlerCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_DatahandlerDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_app_dth;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{C2C11EDF-CB42-44C0-811F-A8DC1BAD7331}"
      DTS:ObjectName="DatahandlerDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_DatahandlerCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_DatahandlerDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_app_dth;Integrated Security=True;Application Name=SSIS-PackageTemplate-{C2C11EDF-CB42-44C0-811F-A8DC1BAD7331}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PlatformDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
      DTS:ObjectName="PlatformDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_PlatformCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_PlatformDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_app_inh;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{0CDA5E8A-B50C-4284-B5FD-42771A644CAC}"
      DTS:ObjectName="PlatformDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_PlatformCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_PlatformDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_app_inh;Integrated Security=True;Application Name=SSIS-PackageTemplate-{0CDA5E8A-B50C-4284-B5FD-42771A644CAC}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProjectDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{ABBB3C9F-CCF4-424B-9A3A-71C858DEFA1F}"
      DTS:ObjectName="ProjectDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_ProjectCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_ProjectDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_prj_deploytest;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProjectDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{3D6E06D6-0AAE-4AFC-A6A9-9BCE9A13C770}"
      DTS:ObjectName="ProjectDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_ProjectCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_ProjectDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_prj_deploytest;Integrated Security=True;Application Name=SSIS-PackageTemplate-{3D6E06D6-0AAE-4AFC-A6A9-9BCE9A13C770}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{92FEF4D6-A681-4711-945D-EB9F69A70CF9}"
      DTS:ObjectName="CONFIG_SOURCE">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">PlatformDatabase</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{5B8A9818-AC1E-43B1-B350-1656EABFBCA4}"
      DTS:ObjectName="IN_DEBUG_MODE">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B3C67C54-F227-4B18-90C7-E0758B3BFF27}"
      DTS:ObjectName="JSON_CONFIG">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">{"ComponentParams":[{"PackageName":"ScoreLandscapeNodes","ScoreLandscapeNodesParams" :[{ 		"ScoringType" : "BagOfWords" 		, "ScoringLabel" : "SLS" 		, "ScoreGroup" : "Relevance" 		, "SeriesGroup" : "Strategic area" 		, "Normalize" : "None" 		, "BagOfWords" : "selective~laser~sinter*" 		},{ 		"ScoringType" : "BagOfWords" 		, "ScoringLabel" : "SLS" 		, "ScoreGroup" : "Weight" 		, "SeriesGroup" : "Strategic area" 		, "Normalize" : "Portfolio" 		, "BagOfWords" : "selective~laser~sinter*" 		},{ 		"ScoringType" : "CompanyPortfolio" 		, "ScoreGroup" : "Relevance" 		, "SeriesGroup" : "Relevant Companies" 		, "Normalize" : "None" 		, "CompanyId" : "USD896789851D|DE2010000581|US140689340" 		},{ 		"ScoringType" : "CompanyPortfolio" 		, "ScoreGroup" : "Weight" 		, "SeriesGroup" : "Relevant Companies" 		, "Normalize" : "Portfolio" 		, "CompanyId" : "USD896789851D|DE2010000581|US140689340" 		},{ 		"ScoringType" : "BagOfWords" 		, "ScoringLabel" : "Software" 		, "ScoreGroup" : "Relevance" 		, "SeriesGroup" : "Strategic area" 		, "Normalize" : "None" 		, "BagOfWords" : "software" 		},{ 		"ScoringType" : "BagOfWords" 		, "ScoringLabel" : "Software" 		, "ScoreGroup" : "Weight" 		, "SeriesGroup" : "Strategic area" 		, "Normalize" : "Portfolio" 		, "BagOfWords" : "software" 		},{ 		"ScoringType" : "BagOfWords" 		, "ScoringLabel" : "Fused Deposition Modeling" 		, "ScoreGroup" : "Relevance" 		, "SeriesGroup" : "Strategic area" 		, "Normalize" : "None" 		, "BagOfWords" : "fused~deposition~model*" 		},{ 		"ScoringType" : "BagOfWords" 		, "ScoringLabel" : "Fused Deposition Modeling" 		, "ScoreGroup" : "Weight" 		, "SeriesGroup" : "Strategic area" 		, "Normalize" : "Portfolio" 		, "BagOfWords" : "fused~deposition~model*" 		}] 		}]}</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{42D4B765-A3F8-42B4-AC68-CFD31E6C7FEF}"
      DTS:ObjectName="JSON_SLA">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">{"ComponentID": "D0E4F952-663C-42CA-89E8-318C931D42A9" , "RunID": "-1" , "PollEvery": "00:00:10" , "TimeOutAfter": "3600" , "PlatformDataSource": "nlagpdatacore" , "PlatformCatalog": "prv_dev_inh" , "DatahandlerDataSource": "nlagpdatacore" , "DatahandlerCatalog": "prv_dev_dth" , "DatahandlerVersion": "latest" , "ProjectDataSource":"nlagpdatacore" , "ProjectCatalog":"prv_prj_deploytest" }</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{493B4BA1-1BE7-46D3-ACB4-571D89FD3119}"
      DTS:ObjectName="RUN_ID">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{41DA1B6F-1915-479F-892A-4EE969657699}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_ComponentJSON">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E58DEEDA-280C-4422-9B17-5E5079D776DB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_ScoreLandscapeNodesParams">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CFE883B0-315D-48DF-A854-D391898246A7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ComponentID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02FE2C7F-93ED-401B-B365-8858FF5D16AB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_app_dth</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{82F9D99F-9379-4652-AEDE-AF4ACC6439B3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{25A1E080-71F0-4AFC-B860-33D0E8434957}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerVersion">
      <DTS:VariableValue
        DTS:DataType="8">dbo</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E9F3EE18-1D21-43B7-AC37-777BCD813692}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_JsonVersion">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4B9D445F-1F25-4522-B98A-57B2C23A16B7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PlatformCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_app_inh</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ADD27BAC-681D-4182-8A96-6398F80A5403}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PlatformDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{796145E7-2585-4E59-B1DE-3FD1F35E0BED}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PollEvery">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0DF6E6B7-E37C-4080-BCEB-A3CD35FF5262}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ProjectCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_prj_deploytest</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D42288CF-DA69-4F44-8776-EDFD1FD1F2D2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ProjectDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{661D290E-790F-47B9-9BC3-10D83936FBD9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_RunID">
      <DTS:VariableValue
        DTS:DataType="3">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{43E55E0F-25B2-41F9-8B37-592FCFE71F65}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_TimeOutAfter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7F30876B-40DD-4E05-AE99-BC321D4A5BDC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMDatahandlerDB">
      <DTS:VariableValue
        DTS:DataType="8">DatahandlerDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BEF419E4-C2DF-4FDC-AF25-80E8C50D4866}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMPlatformDB">
      <DTS:VariableValue
        DTS:DataType="8">PlatformDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{668E4037-AFF0-4373-9973-19E4AD378AD0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMProjectDB">
      <DTS:VariableValue
        DTS:DataType="8">ProjectDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{00390B04-E452-4E77-97AF-F1EA1D32B388}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_DBName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{681D81B1-3C02-4CB4-BA5B-A2C37EC8FCAA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_DBServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D9769863-F082-4B61-9DC2-D2FFB0A2AF00}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_depenciesChecked">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38DAF49E-A0F0-4431-B7F0-B037CF2C48DF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_EventLog">
      <DTS:VariableValue
        DTS:DataType="8">Application</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E7BA948E-FEAC-4491-8E38-AAF3518038C0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_Feature">
      <DTS:VariableValue
        DTS:DataType="8">InvocationHandler</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2527B566-AD09-4DC5-847E-B55C46C56252}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_IsPackageSlaInitialized">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C82C5923-2A19-409E-9723-674BD0D2B0F5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_jsonConfiguration">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D7C788C9-8798-4E79-9BA6-17507798AE4D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::JSON_SLA]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_jsonSLA">
      <DTS:VariableValue
        DTS:DataType="8">{"ComponentID": "D0E4F952-663C-42CA-89E8-318C931D42A9" , "RunID": "-1" , "PollEvery": "00:00:10" , "TimeOutAfter": "3600" , "PlatformDataSource": "nlagpdatacore" , "PlatformCatalog": "prv_dev_inh" , "DatahandlerDataSource": "nlagpdatacore" , "DatahandlerCatalog": "prv_dev_dth" , "DatahandlerVersion": "latest" , "ProjectDataSource":"nlagpdatacore" , "ProjectCatalog":"prv_prj_deploytest" }</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D898EB03-BFB9-4B0A-9D24-870324B52D88}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_Pipeline">
      <DTS:VariableValue
        DTS:DataType="8">ApplicationPlatform</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9DB3C71D-7F89-4FEB-862B-E1DB6F6CE866}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT nlh.checkEvents(ivh.getDependencies('&quot; + @[User::cfg_sla_ComponentID]  + &quot;'), 'complete') AS depenciesChecked&#xA; IF ( SELECT nlh.checkEvents(ivh.getDependencies('&quot; + @[User::cfg_sla_ComponentID]  + &quot;'), 'complete')) = 0&#xA;&#x9;WAITFOR DELAY '&quot;+ @[User::cfg_sla_PollEvery]   +&quot;'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlDependencies">
      <DTS:VariableValue
        DTS:DataType="8">SELECT nlh.checkEvents(ivh.getDependencies(''), 'complete') AS depenciesChecked
 IF ( SELECT nlh.checkEvents(ivh.getDependencies(''), 'complete')) = 0
	WAITFOR DELAY ''</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2EA6E20A-FB4F-4EF8-8511-072B38F3CAF6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="this_Aggregate">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{21AC0B30-505A-43E5-A986-85B3B5923772}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_BagOfClasses">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{222B80F8-7368-43FA-9FDA-72B5C6244EA6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_BagOfWords">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{85C8396F-8B5D-4106-A66C-B5F2C58AA53C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_CompanyId">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E2D5784A-870E-40A8-A03C-D6DB7D8A21B8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_Normalize">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0DDDAB7F-3685-439C-84EA-24BBF218B411}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_ScoreGroup">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E10D4257-7F48-43B4-9E74-72B849CAAD2D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_ScoreLandscapeNodesParams">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B06EE848-E30B-474E-AF97-09CACF2B5C36}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_ScoringLabel">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3174F943-1AB1-49C7-97D8-7BAAAAEE31E1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_ScoringType">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E4E004AC-A54D-4DC2-8AE6-957A74CF9C92}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_SeriesGroup">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{97CC7BA9-7EC5-4143-81B1-FBEEEC15C9A8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_TopicName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{977D1FBD-D2FE-4EDE-8B23-7D13AC33F188}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1D6782CA-70C0-49E5-8DE0-B393B71D9A2B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::RUN_ID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varRunId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check POST-conditions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{6938C9BE-4E9B-4C20-9C58-407CC47D2C8D}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check POST-conditions">
      <DTS:Variables />
      <DTS:Executables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Check POST-conditions.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{856F64A1-B897-4E83-8D12-DD5C41C9725D}"
          DTS:EventID="631204784"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{3A629A18-C984-465C-98EC-761A468F3674}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check POST-conditions.EventHandlers[OnPostExecute]\Event - End executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6E1E1C24-9F47-4B66-8C8F-08F458C7FEE2}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - End executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='complete',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Information'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='complete',@source_id='', @level='Information'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Check PRE-conditions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{B6105F71-5E50-4223-8006-9476AD5AE2CE}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check PRE-conditions">
      <DTS:Variables />
      <DTS:Executables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Check PRE-conditions.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{74003801-8BC9-41A6-83CD-912B0A822CF2}"
          DTS:EventID="631219344"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{DE18D010-765F-4796-9A9D-785EF4D5F6F6}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check PRE-conditions.EventHandlers[OnPostExecute]\Event - Start executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{F1F1981F-244A-4BC1-91FA-4D828A768E24}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - Start executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='start',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Information'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='start',@source_id='', @level='Information'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute Feature"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{E195F473-CDC2-4C54-B99B-95E692C3279F}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute Feature">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{265FD959-EFD5-44F6-AF84-7491BFAACC2B}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
            DTS:DTSID="{D4CAD988-C6AD-4859-82CF-FEA42E970C8C}"
            DTS:ObjectName="{D4CAD988-C6AD-4859-82CF-FEA42E970C8C}">
            <DTS:ObjectData>
              <FEEFVE
                VariableName="User::cfg_pkg_ScoreLandscapeNodesParams" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{411b7a17-5e91-4fcd-a520-462f602d7dc2}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Bag Of Classes (cofiling)"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Outputs[No normalization]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="No normalization"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">@[User::this_Normalize] == "None"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::this_Normalize] == "None"</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Inputs[Derived Column Input].Columns[fraction_of_word_in_node]"
                              cachedDataType="r8"
                              cachedName="fraction_of_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_word_in_node]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Inputs[Derived Column Input].Columns[fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Inputs[Derived Column Input].Columns[families_with_word_in_node]"
                              cachedDataType="i4"
                              cachedName="families_with_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[families_with_word_in_node]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Inputs[Derived Column Input].Columns[sum_fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="sum_fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[score_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[score_group]"
                              name="score_group"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_ScoreGroup]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_ScoreGroup]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[series_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[series_group]"
                              name="series_group"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_SeriesGroup]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_SeriesGroup]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[series_key]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[series_key]"
                              name="series_key"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_ScoringLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_ScoringLabel]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[score_view]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[score_view]"
                              name="score_view"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">1</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">1</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[score_value]"
                              dataType="numeric"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[score_value]"
                              name="score_value"
                              precision="30"
                              scale="10"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_NUMERIC,30,10)(@[User::this_Normalize] == "None" ? #{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[families_with_word_in_node]} : (@[User::this_Normalize] == "Class" ? #{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]} : (@[User::this_Normalize] == "Series" ? #{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_word_in_node]} : (@[User::this_Normalize] == "ClassSeries" ? #{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]} / (#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]} &gt; 0 ? #{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]} : 1.0) : 1.0))))</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_NUMERIC,30,10)(@[User::this_Normalize] == "None" ? families_with_word_in_node : (@[User::this_Normalize] == "Class" ? fraction_of_node_with_word : (@[User::this_Normalize] == "Series" ? fraction_of_word_in_node : (@[User::this_Normalize] == "ClassSeries" ? fraction_of_node_with_word / (sum_fraction_of_node_with_word &gt; 0 ? sum_fraction_of_node_with_word : 1.0) : 1.0))))</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[string_series_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="5"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[string_series_group]"
                              name="string_series_group"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"Prose"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"Prose"</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[string_series_value]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="500"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[string_series_value]"
                              name="string_series_value"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,500)((DT_WSTR,10)#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[families_with_word_in_node]} + " patents co-filed with " + @[User::this_ScoringLabel] + " (" + [LEFT]((DT_WSTR,50)([ROUND](100 * #{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]},2)),5) + "%)")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,500)((DT_WSTR,10)families_with_word_in_node + " patents co-filed with " + @[User::this_ScoringLabel] + " (" + LEFT((DT_WSTR,50)(ROUND(100 * fraction_of_node_with_word,2)),5) + "%)")</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Landscape Node Score - Co-filing"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    IDTSConnectionManager100 myPlatformConnectionManager;
    IDTSConnectionManager100 myDatahandlerConnectionManager;
    IDTSConnectionManager100 myProjectConnectionManager;
    SqlConnection myPlatformConnection;
    SqlConnection myDatahandlerConnection;
    SqlConnection myProjectConnection;
    string componentid;
    string dthVersion;
    string prjSourceCatalog;
    double SumFractionOfClass;

    private void LogEntry(string sourceid, string status, string msg)
    {
        using (SqlCommand cmd = new SqlCommand("nlh.log_addEntry", myPlatformConnection))
        {
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("@component", "ScoreLandscapeNodes.dtsx");
            cmd.Parameters.AddWithValue("@source_type", "SCRIPT");
            cmd.Parameters.AddWithValue("@source_name", "Co-filing Node Scoring");
            cmd.Parameters.AddWithValue("@source_id", sourceid);
            cmd.Parameters.AddWithValue("@message", msg);
            cmd.Parameters.AddWithValue("@action", "EXECUTE");
            cmd.Parameters.AddWithValue("@status", status);

            cmd.ExecuteNonQuery();
        }
    }


    public override void PreExecute()
    {
        base.PreExecute();

        /* Connections used for data, and for logging. */
        myPlatformConnectionManager = this.Connections.PlatformDB;
        myProjectConnectionManager = this.Connections.ProjectDB;
        myDatahandlerConnectionManager = this.Connections.DatahandlerDB;
        myPlatformConnection = (SqlConnection)myPlatformConnectionManager.AcquireConnection(null);
        myProjectConnection = (SqlConnection)myProjectConnectionManager.AcquireConnection(null);
        myDatahandlerConnection = (SqlConnection)myDatahandlerConnectionManager.AcquireConnection(null);

        /* Decision whether the queries are or aren't run in cross server mode. This is needed as the latter is a functional requirement but performs poorly */
        componentid = (string)Variables.cfgslaComponentID;
        dthVersion = Variables.cfgslaDatahandlerVersion;
        if (Variables.cfgslaDatahandlerDataSource == Variables.cfgslaProjectDataSource)
        {
            LogEntry(componentid, "WARNING", "Using local data mode. Cross-server switched off.");
            prjSourceCatalog = Variables.cfgslaProjectCatalog;
        }
        else
        {
            LogEntry(componentid, "WARNING", "Using cross-server data mode. Cross-server switched on.");
            prjSourceCatalog = Variables.cfgslaProjectDataSource + "." + Variables.cfgslaProjectCatalog;
        }

        /* The sum of fractions is maintained, to allow for normalizing by it afterwards. */
        SumFractionOfClass = 0.0;
    }

    public override void PostExecute()
    {
        base.PostExecute();
        myPlatformConnectionManager.ReleaseConnection(myPlatformConnection);
        myDatahandlerConnectionManager.ReleaseConnection(myDatahandlerConnection);
        myProjectConnectionManager.ReleaseConnection(myProjectConnection);
    }

    public override void CreateNewOutputRows()
    {
        /* Prepare the variables */
        SqlDataReader reader;
        string BagOfWords = Variables.thisBagOfWords;

        string[] bow = BagOfWords.Split('|');
        string profileSql = "";
        string commandString;

        /* Prepare the first part of the SQL code */
        if (bow.Length > 0)
        {
            profileSql = String.Format("select class_id from {0}.patent_class where class_code='{1}' ", dthVersion, bow[0]);
        }
        for (int i = 1; i < bow.Length; i++)
        {
            if (bow[i].Length > 0)
            {
                profileSql = profileSql + String.Format(" union all select class_id from {0}.patent_class where class_code='{1}' ", dthVersion, bow[i]);
            }
        }

        /* The aggregation join is optional, and will include also documents in the count that reside in lower-positioned CPC classes. */
        LogEntry(componentid, "WARNING", String.Format("Set aggregation to [{0}].", Variables.thisAggregate));
        string aggregateJoin;
        string nFamFieldName;
        if (Variables.thisAggregate)
        {

            aggregateJoin = String.Format(" {0}.patent_class_lineage cl2 ON cl2.child_class_id=af2.class_id ", dthVersion);
            nFamFieldName = "aggregate_n_fam";
        }
        else
        {
            aggregateJoin = String.Format(" {0}.patent_class_lineage cl2 ON cl2.child_class_id=af2.class_id AND cl2.parent_class_id=af2.class_id ", dthVersion);
            nFamFieldName = "n_fam";
        }

        /* Final construction of the SQL */
        commandString = String.Format(@"WITH af (patent_family_id, class_id) AS (
	                select distinct
		                af2.patent_family_id
		                , cl2.parent_class_id
	                from
		                ({0}) a JOIN
		                {1}.patent_class_lineage cl1 ON a.class_id=cl1.parent_class_id JOIN
                        {1}.appln_family_class_date af1 ON af1.class_id=cl1.child_class_id JOIN
                        {1}.appln_family_class_date af2 ON af2.patent_family_id=af1.patent_family_id and af2.class_id <> af1.class_id JOIN
                        {3}
	                where
		                cl2.parent_class_id in (select node_key from {2}.dbo.ls_node)
		                and
		                year(af1.priority_date) > ( year(getdate()) - 20 )
        ) 
                SELECT
	                f.class_id
	                , total_families_with_word
	                , c.{4} as total_families_in_class
	                , count(distinct patent_family_id) as families_with_word_in_class
	                , cast(count(distinct patent_family_id) as real) / cast(c.{4} as real) as fraction_of_class_with_word
	                , cast(count(distinct patent_family_id) as real) / cast(tf.total_families_with_word as real) as fraction_of_keyword_in_class
                    , cast(1.0 as real) as dummy
                FROM
	                af f JOIN
	                {1}.patent_class c ON c.class_id=f.class_id CROSS JOIN
	                (select count(distinct patent_family_id) as total_families_with_word from af) tf
                GROUP BY
	                f.class_id
	                , tf.total_families_with_word
	                , c.{4}", profileSql, dthVersion, prjSourceCatalog, aggregateJoin, nFamFieldName);

        LogEntry(componentid, "SUCCESS", commandString);

        SqlCommand sqlc = new SqlCommand(commandString, myDatahandlerConnection);
        sqlc.CommandTimeout = 0;

        try
        {
            int rowcount = 0;

            reader = sqlc.ExecuteReader();
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    /* Pass all the outputs, which ones to use for which normalization is determined in the data flow */
                    double fraction_of_class_with_word = (double)reader.GetSqlSingle(4);
                    SumFractionOfClass = SumFractionOfClass + fraction_of_class_with_word;

                    Output0Buffer.AddRow();
                    Output0Buffer.nodekey = reader.GetInt32(0);
                    Output0Buffer.totalfamilieswithword = reader.GetInt32(1);
                    Output0Buffer.totalfamiliesinnode = reader.GetInt32(2);
                    Output0Buffer.familieswithwordinnode = reader.GetInt32(3);
                    Output0Buffer.fractionofnodewithword = fraction_of_class_with_word;
                    Output0Buffer.fractionofwordinnode = (double)reader.GetSqlSingle(5);
                    Output0Buffer.dummykey = 1;

                    rowcount += 1;
                }

                string msg = String.Format("Successfully read {0} number of rows", rowcount);

                /* Output one row with the total sum of weights; this is used for an optional normalization. */
                SumofFractionBuffer.AddRow();
                SumofFractionBuffer.sumfractionofnodewithword = SumFractionOfClass;
                SumofFractionBuffer.dummykey = 1;
                LogEntry(componentid, "SUCCESS", msg);
            }
            else
            {
                LogEntry(componentid, "WARNING", "No rows were added");
            }
        }
        catch (Exception e)
        {
            LogEntry(componentid, "FAILURE", e.Message);
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_7493ba6a0fb64c449d4f61b9a239bc71.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4d52ed47-55e0-4fd2-bd9d-7157fcf110fc}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7493ba6a0fb64c449d4f61b9a239bc71</RootNamespace>
    <AssemblyName>SC_7493ba6a0fb64c449d4f61b9a239bc71</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_7493ba6a0fb64c449d4f61b9a239bc71" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 nodekey
    {
        set
        {
            this[0] = value;
        }
    }
    public bool nodekey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double fractionofwordinnode
    {
        set
        {
            this[1] = value;
        }
    }
    public bool fractionofwordinnode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double fractionofnodewithword
    {
        set
        {
            this[2] = value;
        }
    }
    public bool fractionofnodewithword_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 familieswithwordinnode
    {
        set
        {
            this[3] = value;
        }
    }
    public bool familieswithwordinnode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 totalfamiliesinnode
    {
        set
        {
            this[4] = value;
        }
    }
    public bool totalfamiliesinnode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 totalfamilieswithword
    {
        set
        {
            this[5] = value;
        }
    }
    public bool totalfamilieswithword_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 dummykey
    {
        set
        {
            this[6] = value;
        }
    }
    public bool dummykey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class SumofFractionBuffer: ScriptBuffer

{
    public SumofFractionBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Double sumfractionofnodewithword
    {
        set
        {
            this[0] = value;
        }
    }
    public bool sumfractionofnodewithword_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 dummykey
    {
        set
        {
            this[1] = value;
        }
    }
    public bool dummykey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7493ba6a0fb64c449d4f61b9a239bc71.Properties.Settings.get_Default():SC_7493ba6a0fb64c449d4f61b9a239bc71.Properties.Sett" +
    "ings")]

namespace SC_7493ba6a0fb64c449d4f61b9a239bc71.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public SumofFractionBuffer SumofFractionBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

        if (null != SumofFractionBuffer)
        {
            SumofFractionBuffer.SetEndOfRowset();
            SumofFractionBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Sum of Fraction"))
            {
                SumofFractionBuffer = new SumofFractionBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PlatformDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PlatformDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ProjectDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ProjectDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 DatahandlerDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"DatahandlerDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String cfgslaComponentID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ComponentID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerCatalog
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerCatalog"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerDataSource
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerDataSource"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerVersion
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerVersion"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaProjectCatalog
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ProjectCatalog"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaProjectDataSource
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ProjectDataSource"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean thisAggregate
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["this_Aggregate"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisBagOfWords
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_BagOfWords"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisNormalize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_Normalize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7493ba6a0fb64c449d4f61b9a239bc71</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_7493ba6a0fb64c449d4f61b9a239bc71</msb:DisplayName>
		<msb:ProjectId>{7DDBB394-33F6-4EC7-B2DE-3DD109510E91}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7493ba6a0fb64c449d4f61b9a239bc71.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7493ba6a0fb64c449d4f61b9a239bc71")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7493ba6a0fb64c449d4f61b9a239bc71")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7493ba6a0fb64c449d4f61b9a239bc71.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7493ba6a0fb64c449d4f61b9a239bc71.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7493ba6a0fb64c449d4f61b9a239bc71.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7493ba6a0fb64c449d4f61b9a239bc71.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7493ba6a0fb64c449d4f61b9a239bc71.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_7493ba6a0fb64c449d4f61b9a239bc71.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAO6D0lgAAAAAAAAAAOAAIiALATAAADwAAAAIAAAAAAAARlsA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPRaAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAATDsAAAAgAAAAPAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAA+AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAARAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAo
WwAAAAAAAEgAAAACAAUAvCkAAIAwAAABAAAAAAAAADxaAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwC6AAAAAQAAEXIBAABwAnsEAAAEcxAAAAoKBhpvEQAA
CgZvEgAACnIjAABwcjkAAHBvEwAACiYGbxIAAApyawAAcHKFAABwbxMAAAomBm8SAAAKcpMAAHBy
rQAAcG8TAAAKJgZvEgAACnLbAABwA28TAAAKJgZvEgAACnLxAABwBW8TAAAKJgZvEgAACnIDAQBw
chMBAHBvEwAACiYGbxIAAApyIwEAcARvEwAACiYGbxQAAAom3goGLAYGbxUAAArcKgAAARAAAAIA
EQCerwAKAAAAABMwBAAyAQAAAAAAAAIoFgAACgICewsAAARvJgAABn0BAAAEAgJ7CwAABG8nAAAG
fQMAAAQCAnsLAAAEbygAAAZ9AgAABAICewEAAAQUbxcAAAp0DwAAAX0EAAAEAgJ7AwAABBRvFwAA
CnQPAAABfQYAAAQCAnsCAAAEFG8XAAAKdA8AAAF9BQAABAICewwAAARvKgAABn0HAAAEAgJ7DAAA
BG8tAAAGfQgAAAQCewwAAARvLAAABgJ7DAAABG8vAAAGKBgAAAosKQICewcAAARyMwEAcHJDAQBw
KAEAAAYCAnsMAAAEby4AAAZ9CQAABCs8AgJ7BwAABHIzAQBwcqcBAHAoAQAABgICewwAAARvLwAA
BnIXAgBwAnsMAAAEby4AAAYoGQAACn0JAAAEAiMAAAAAAAAAAH0KAAAEKuoCKBoAAAoCewEAAAQC
ewQAAARvGwAACgJ7AgAABAJ7BQAABG8bAAAKAnsDAAAEAnsGAAAEbxsAAAoqAAAAGzAFAI0CAAAC
AAARAnsMAAAEbzEAAAYXjSUAAAElFh98nW8cAAAKC3IbAgBwDAeOLBRyHQIAcAJ7CAAABAcWmigd
AAAKDBcTBystBxEHmm8eAAAKFjEbCHKZAgBwAnsIAAAEBxEHmigdAAAKKB8AAAoMEQcXWBMHEQcH
jmkyzAICewcAAARyMwEAcHIsAwBwAnsMAAAEbzAAAAaMJgAAASggAAAKKAEAAAYCewwAAARvMAAA
BiwbcmADAHACewgAAAQoIAAAChMEcuUDAHATBSsZcgUEAHACewgAAAQoIAAAChMEctQEAHATBXLg
BABwG40XAAABJRYIoiUXAnsIAAAEoiUYAnsJAAAEoiUZEQSiJRoRBaIoIQAACg0CAnsHAAAEcrkR
AHAJKAEAAAYJAnsFAAAEcxAAAAoTBhEGFm8iAAAKFhMIEQZvIwAACgoGbyQAAAo5CgEAADiqAAAA
BhpvJQAACigmAAAKa2wTCgICewoAAAQRClh9CgAABAJ7DQAABG8VAAAGAnsNAAAEBhZvJwAACm8H
AAAGAnsNAAAEBhdvJwAACm8RAAAGAnsNAAAEBhhvJwAACm8PAAAGAnsNAAAEBhlvJwAACm8NAAAG
AnsNAAAEEQpvCwAABgJ7DQAABAYbbyUAAAooJgAACmtsbwkAAAYCew0AAAQXbxMAAAYRCBdYEwgG
bygAAAo6S////3LJEQBwEQiMKQAAASggAAAKEwkCew4AAARvHQAABgJ7DgAABAJ7CgAABG8ZAAAG
AnsOAAAEF28bAAAGAgJ7BwAABHK5EQBwEQkoAQAABisWAgJ7BwAABHIzAQBwchMSAHAoAQAABt4c
EwsCAnsHAAAEcjkSAHARC28pAAAKKAEAAAbeACoAAABBHAAAAAAAADgBAAA4AQAAcAIAABwAAAAS
AAABHgIoIAAABioqAgMEBSgqAAAKKjoCFgOMKQAAASgrAAAKKloDLAgCFigsAAAKKnJJEgBwcy0A
AAp6OgIXA4wrAAABKCsAAAoqWgMsCAIXKCwAAAoqckkSAHBzLQAACno6AhgDjCsAAAEoKwAACipa
AywIAhgoLAAACipySRIAcHMtAAAKejoCGQOMKQAAASgrAAAKKloDLAgCGSgsAAAKKnJJEgBwcy0A
AAp6OgIaA4wpAAABKCsAAAoqWgMsCAIaKCwAAAoqckkSAHBzLQAACno6AhsDjCkAAAEoKwAACipa
AywIAhsoLAAACipySRIAcHMtAAAKejoCHAOMKQAAASgrAAAKKloDLAgCHCgsAAAKKnJJEgBwcy0A
AAp6HgIoLgAACioeAigvAAAKKh4CKDAAAAoqOgIWA4wrAAABKCsAAAoqOgIXA4wpAAABKCsAAAoq
fgIoMQAACgICcyUAAAZ9CwAABAICcykAAAZ9DAAABCoGKtYCew0AAAQsEgJ7DQAABG8WAAAGAhR9
DQAABAJ7DgAABCwSAnsOAAAEbx4AAAYCFH0OAAAEKgATMAUAcwAAAAMAABEWCitYBAaUDgRy5hIA
cCgyAAAKMxkCBQaaAgQGlCgzAAAKDgRzBgAABn0NAAAEBAaUDgRy+BIAcCgyAAAKMxkCBQaaAgQG
lCgzAAAKDgRzGAAABn0OAAAEBhdYCgYDMqQCbyQAAAYCbyEAAAYCKCIAAAYqOgIoNAAACgIDfQ8A
AAQqggJ7DwAABG81AAAKbzYAAApyGBMAcG83AAAKbzgAAAoqggJ7DwAABG81AAAKbzYAAApyLhMA
cG83AAAKbzgAAAoqggJ7DwAABG81AAAKbzYAAApyQhMAcG83AAAKbzgAAAoqOgIoNAAACgIDfRAA
AAQqlgJ7EAAABG85AAAKcl4TAHBvOgAACig7AAAKbzwAAAp0JAAAASqWAnsQAAAEbzkAAApyhhMA
cG86AAAKKDsAAApvPAAACnQkAAABKpYCexAAAARvOQAACnK8EwBwbzoAAAooOwAACm88AAAKdCQA
AAEqlgJ7EAAABG85AAAKcvgTAHBvOgAACig7AAAKbzwAAAp0JAAAASqWAnsQAAAEbzkAAApyLhQA
cG86AAAKKDsAAApvPAAACnQkAAABKpYCexAAAARvOQAACnJcFABwbzoAAAooOwAACm88AAAKdCQA
AAEqlgJ7EAAABG85AAAKcpAUAHBvOgAACig7AAAKbzwAAAqlJgAAASqWAnsQAAAEbzkAAApyrhQA
cG86AAAKKDsAAApvPAAACnQkAAABKpYCexAAAARvOQAACnLOFABwbzoAAAooOwAACm88AAAKdCQA
AAEqHgIoNAAACiqufhEAAAQtHnLsFABw0AgAAAIoPQAACm8+AAAKcz8AAAqAEQAABH4RAAAEKhp+
EgAABCoeAoASAAAEKhp+EwAABCoeAihAAAAKKi5zOAAABoATAAAEKkJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAALgKAAAjfgAAJAsAAHANAAAjU3RyaW5ncwAAAACUGAAAYBUAACNV
UwD0LQAAEAAAACNHVUlEAAAABC4AAHwCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYA
AAEAAAA1AAAACQAAABMAAAA5AAAAIgAAAEAAAAAQAAAAAwAAAAYAAAAhAAAAIgAAAAEAAAAHAAAA
AQAAAAAA+gUBAAAAAAAGAH8EfwoGABMFfwoGAMsDWQoPAPMKAAAGAPgDpAcGAGIEpAcGAEMEpAcG
APoEpAcGAJ8EpAcGALgEpAcGAA8EpAcGACoEbQUKANME8wIOAGYA5AkSABEINwwSAJIBNwwSAAoJ
NwwGAHAILAcKAFcJ8wIWADQJ8wIKAJkI8wIKAGsM8wIGAAMMLAcGAK4DWQoGAGgJnwoGAI0Ijwca
AH4D5AUaAN8D5AUaAEwDegcGAJMDfwoSAIgBeggSABgDLwESANYHNwwSADUKNwwGAJQCLAcGAIcF
LAcGAPgILAcGAD8HLAcSAP0IeggSAM4CRwsGAM8ALAcGAGAILAcGAKACLAceAAEADAoeACoADAoe
AE0ADAoOAH8A5AkOABoA5AlbAOwMAAAOAJAA5AkGAB8DLAcGAKcCLAcGAEANpAcAAAAA1QAAAAAA
AQABAAEAEABHBwAAFAABAAEAAQAQACYJAABNAAsABgABABAAQwkAAE0ACwAYAAEAEABNDAAAWQAL
ACAAAQAQAIoLAABdAA8AJQABABAAPQsAAF0AEAApAAAAEACmCgILXQARADMAAAEQAIELAgt1ABMA
NwABAI4JJwEBAKoJJwEBAMkJJwEBAB8IKwEBADQIKwEBAEwIKwEBAHwBLwEBAFIHLwEBAI4FLwEB
AK0LMgEGAIoLNQEGAD0LOQEGACYJPQEGAEMJQQEBAFsMRQEBAFsMRQERADMHSQERADwDTQERAPAB
UQFQIAAAAACBAFkNVQEBACghAAAAAMYAMQUGAAQAZiIAAAAAxgA8BQYABACkIgAAAADGAOELBgAE
AFwlAAAAAIYYQgoGAAQAZCUAAAAAhhhCCqsABABvJQAAAACGCCMNAQAHAH4lAAAAAIYI6wZcAQgA
lSUAAAAAhgg8AmEBCQCkJQAAAACGCIoGXAEKALslAAAAAIYInQFhAQsAyiUAAAAAhggiBlwBDADh
JQAAAACGCFUCAQANAPAlAAAAAIYIqgZcAQ4AByYAAAAAhghwAgEADwAWJgAAAACGCMwGXAEQAC0m
AAAAAIYI1gEBABEAPCYAAAAAhghpBlwBEgBTJgAAAACGCC8NAQATAGImAAAAAIYI/gZcARQAeSYA
AAAAhgAcDQYAFQCBJgAAAACGAAoMBgAVAIkmAAAAAIYADQyQABUAZCUAAAAAhhhCCqsAFQCRJgAA
AACGCLgBYQEYAH4lAAAAAIYIRAZcARkAoCYAAAAAhggvDQEAGgCkJQAAAACGCP4GXAEbAHkmAAAA
AIYAHA0GABwAgSYAAAAAhgAKDAYAHACJJgAAAACGAA0MkAAcAK8mAAAAAIYYQgoGABwAzyYAAAAA
xgHACwYAHADRJgAAAACBAF8BBgAcAAgnAAAAAMYAzAxmARwAzyYAAAAAxgHhCwYAIACHJwAAAACG
GEIKcgEgAJYnAAAAAIYI3gDfACEAtycAAAAAhgj/AN8AIQDYJwAAAACGCO0A3wAhAPknAAAAAIYY
QgpyASEACCgAAAAAhggNAacAIgAuKAAAAACGCJ8FpwAiAFQoAAAAAIYIAAKnACIAeigAAAAAhghd
B6cAIgCgKAAAAACGCLwFpwAiAMYoAAAAAIYIIAKnACIA7CgAAAAAhghsA5AAIgASKQAAAACGCGwK
pwAiADgpAAAAAIYIWwWnACIAXikAAAAAgxhCCgYAIgBmKQAAAACTCGQJeAEiAJIpAAAAAJMIJAN9
ASIAmSkAAAAAkwgwA4IBIgChKQAAAACWCCsMiAEjAKgpAAAAAIYYQgoGACMAsCkAAAAAkRhICo0B
IwAAAAEAcwEAAAIAzgsAAAMA1QUAAAEAXQkAAAIAXAsAAAMApwgAAAEAVQUAAAEAVQUAAAEAVQUA
AAEAVQUAAAEAVQUAAAEAVQUAAAEAVQUAAAEAVQUAAAEAVQUAAAEAVQUAAAEAVQUAAAEAVQUAAAEA
VQUAAAEAVQUAAAEAXQkAAAIAXAsAAAMApwgAAAEAVQUAAAEAVQUAAAEAVQUAAAEAVQUAAAEAxgsA
AAIATwoAAAMAlgsAAAQApwgAAAEAcQwAAAEAcQwAAAEAVQUJAEIKAQARAEIKBgAZAEIKCgApAEIK
EAAxAEIKEAA5AEIKEABBAEIKEABJAEIKEABRAEIKEABZAEIKEABhAEIKEABpAEIKBgDBAEIKBgDh
AEIKFQDxAEIKBgCBAEIKIAD5ABQDJwCBAJ4LLgAJAUgFNAD5AEkNPAAZAWQDBgCxADEFBgBxAO0H
QAAhAWINRQAhAfULSwCxADwFBgBxAP8HUgAhASUMagAhAfwLcQAhAdkFPAAhAfULeAAhAfwLfgAh
AfwLhAD5ALkMAQCBABgJiwA5AdULkACJAMsClABBARkMmwA5AcwAogA5AVoBkACRAIgCpwCZAEIK
qwCZACMHtQCZABIHAQBRAUIKEACZABwNBgCZAAoMBgCZAA0MkACxAEIKBgCxACMBvwCxAHALxgC5
AEIKBgCxADsBzABhAbYH0gBpAdgC2ABxAXgJ3wCxADEL5AB5ARoH6gCxAAcN8QCBAdgM9wCZAbkC
/gCZATwNBwHJAEIKDQHpAEIKBgAuAAsAtQEuABMAvgEuABsA3QEuACMA5gEuACsADwIuADMADwIu
ADsADwIuAEMA5gEuAEsAFQIuAFMADwIuAFsALAJDAGMAdAIDAWsAdAJhAnsAdALpA3MA3QEJBHMA
3QEbAFcAuwADAAEABAAPAAYAEwAHABYACAAfAAkAIQAAACcNkQEAAO8GlQEAAEACmQEAAI4GlQEA
AL8BmQEAAEsGlQEAAFkCkQEAAK4GlQEAAHQCkQEAANAGlQEAANoBkQEAAG0GlQEAADMNkQEAAAIH
lQEAALwBmQEAAEgGlQEAADMNkQEAAAIHlQEAAOIAnQEAAAMBnQEAAPEAnQEAABEBogEAAKMFogEA
AAQCogEAAGEHogEAAMAFogEAACQCogEAAHADlQEAAHAKogEAAF8FogEAAGgJpgEAAEQDqwEAAC8M
sAEBAAcAAwABAAgABQABAAkABwABAAoACQABAAsACwABAAwADQABAA0ADwABAA4AEQABAA8AEwAB
ABAAFQABABEAFwABABIAGQABABMAGwABABQAHQABABkAHwABABoAIQABABsAIwABABwAJQACACYA
JwACACcAKQACACgAKwACACoALQACACsALwACACwAMQACAC0AMwACAC4ANQACAC8ANwACADAAOQAC
ADEAOwACADIAPQACADQAPwACADUAQQABADYAQQACADcAQwAEgAAAAQAAAJIYv2kAAAAAAACoAAAA
BAAAAAAAAAAAAAAAFQFRAQAAAAALAAAAAAAAAAAAAAAeAXsMAAAAAAsAAAAAAAAAAAAAAB4BsQgA
AAAABAAAAAAAAAAAAAAAFQEvAQAAAAALAAAAAAAAAAAAAAAeAZgMAAAAAAQAAAAAAAAAAAAAABUB
LAcAAAAACwAAAAAAAAAAAAAAHgHUCAAAAAAAAAAAAQAAALAKAAAAAAAAAElEVFNDb21wb25lbnRN
ZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlv
bjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElE
VFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAU0NfNzQ5M2JhNmEwZmI2NGM0
NDlkNGY2MWI5YTIzOWJjNzEAR2V0SW50MzIAPE1vZHVsZT4AZ2V0X1BsYXRmb3JtREIAZ2V0X0Rh
dGFoYW5kbGVyREIAZ2V0X1Byb2plY3REQgBnZXRfY2Znc2xhQ29tcG9uZW50SUQAR2V0T3V0cHV0
SUQAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFJlYWQATWFya091
dHB1dHNGaW5pc2hlZABzb3VyY2VpZABjb21wb25lbnRpZABEYkNvbW1hbmQAU3FsQ29tbWFuZABz
ZXRfZnJhY3Rpb25vZm5vZGV3aXRod29yZABzZXRfc3VtZnJhY3Rpb25vZm5vZGV3aXRod29yZABz
ZXRfdG90YWxmYW1pbGllc3dpdGh3b3JkAGRlZmF1bHRJbnN0YW5jZQBnZXRfY2Znc2xhRGF0YWhh
bmRsZXJEYXRhU291cmNlAGdldF9jZmdzbGFQcm9qZWN0RGF0YVNvdXJjZQBzZXRfZnJhY3Rpb25v
ZndvcmRpbm5vZGUAc2V0X2ZhbWlsaWVzd2l0aHdvcmRpbm5vZGUAc2V0X3RvdGFsZmFtaWxpZXNp
bm5vZGUAZ2V0X01lc3NhZ2UASURpc3Bvc2FibGUARG91YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEdldFNxbFNpbmdsZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBzZXRfQ29tbWFuZFR5cGUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERp
c3Bvc2UAZ2V0X3RoaXNBZ2dyZWdhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUAZ2V0X3RoaXNOb3Jt
YWxpemUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAcHJqU291cmNlQ2F0YWxvZwBn
ZXRfY2Znc2xhRGF0YWhhbmRsZXJDYXRhbG9nAGdldF9jZmdzbGFQcm9qZWN0Q2F0YWxvZwBtc2cA
Z2V0X0xlbmd0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfNzQ5M2JhNmEwZmI2NGM0NDlkNGY2
MWI5YTIzOWJjNzEuZGxsAHNldF9mcmFjdGlvbm9mbm9kZXdpdGh3b3JkX0lzTnVsbABzZXRfc3Vt
ZnJhY3Rpb25vZm5vZGV3aXRod29yZF9Jc051bGwAc2V0X3RvdGFsZmFtaWxpZXN3aXRod29yZF9J
c051bGwAc2V0X2ZyYWN0aW9ub2Z3b3JkaW5ub2RlX0lzTnVsbABzZXRfZmFtaWxpZXN3aXRod29y
ZGlubm9kZV9Jc051bGwAc2V0X3RvdGFsZmFtaWxpZXNpbm5vZGVfSXNOdWxsAHNldF9ub2Rla2V5
X0lzTnVsbABzZXRfZHVtbXlrZXlfSXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lz
dGVtAHJlc291cmNlTWFuAEJvb2xlYW4AU2NyaXB0TWFpbgBkdGhWZXJzaW9uAGdldF9jZmdzbGFE
YXRhaGFuZGxlclZlcnNpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRp
b24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBTcWxQ
YXJhbWV0ZXJDb2xsZWN0aW9uAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFNx
bENvbm5lY3Rpb24AbXlQbGF0Zm9ybUNvbm5lY3Rpb24AbXlEYXRhaGFuZGxlckNvbm5lY3Rpb24A
bXlQcm9qZWN0Q29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN5c3RlbS5EYXRh
LkNvbW1vbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3Fs
U2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFw
AENoYXIARGJEYXRhUmVhZGVyAFNxbERhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBPdXRwdXQwQnVm
ZmVyAFBpcGVsaW5lQnVmZmVyAFN1bW9mRnJhY3Rpb25CdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9S
ZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAG15UGxhdGZvcm1Db25uZWN0aW9u
TWFuYWdlcgBteURhdGFoYW5kbGVyQ29ubmVjdGlvbk1hbmFnZXIAbXlQcm9qZWN0Q29ubmVjdGlv
bk1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIAU3FsUGFyYW1ldGVyAC5jdG9yAC5jY3Rv
cgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAGdldF90aGlzQmFnT2ZXb3JkcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfNzQ5M2JhNmEwZmI2
NGM0NDlkNGY2MWI5YTIzOWJjNzEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNDXzc0OTNiYTZhMGZiNjRjNDQ5ZDRmNjFiOWEyMzliYzcxLlByb3BlcnRpZXMA
Z2V0X1JlYWRPbmx5VmFyaWFibGVzAFN5c3RlbS5EYXRhLlNxbFR5cGVzAEJ1ZmZlckNvbHVtbklu
ZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBDb25uZWN0aW9ucwBCdWZmZXJzAGdldF9Q
YXJhbWV0ZXJzAFN1bUZyYWN0aW9uT2ZDbGFzcwBGaW5pc2hPdXRwdXRzAHN0YXR1cwBnZXRfSGFz
Um93cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABGb3JtYXQAT2JqZWN0AFNldEVuZE9mUm93
c2V0AG9wX0V4cGxpY2l0AFNwbGl0AGdldF9EZWZhdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABV
c2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNx
bFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABzZXRfQ29t
bWFuZFRpbWVvdXQAUHJpbWVPdXRwdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25l
bnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABBZGRSb3cAc2V0X25vZGVrZXkAc2V0
X2R1bW15a2V5AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkATG9nRW50cnkAb3BfRXF1YWxp
dHkAAAAAIW4AbABoAC4AbABvAGcAXwBhAGQAZABFAG4AdAByAHkAABVAAGMAbwBtAHAAbwBuAGUA
bgB0AAAxUwBjAG8AcgBlAEwAYQBuAGQAcwBjAGEAcABlAE4AbwBkAGUAcwAuAGQAdABzAHgAABlA
AHMAbwB1AHIAYwBlAF8AdAB5AHAAZQAADVMAQwBSAEkAUABUAAAZQABzAG8AdQByAGMAZQBfAG4A
YQBtAGUAAC1DAG8ALQBmAGkAbABpAG4AZwAgAE4AbwBkAGUAIABTAGMAbwByAGkAbgBnAAEVQABz
AG8AdQByAGMAZQBfAGkAZAAAEUAAbQBlAHMAcwBhAGcAZQAAD0AAYQBjAHQAaQBvAG4AAA9FAFgA
RQBDAFUAVABFAAAPQABzAHQAYQB0AHUAcwAAD1cAQQBSAE4ASQBOAEcAAGNVAHMAaQBuAGcAIABs
AG8AYwBhAGwAIABkAGEAdABhACAAbQBvAGQAZQAuACAAQwByAG8AcwBzAC0AcwBlAHIAdgBlAHIA
IABzAHcAaQB0AGMAaABlAGQAIABvAGYAZgAuAAFvVQBzAGkAbgBnACAAYwByAG8AcwBzAC0AcwBl
AHIAdgBlAHIAIABkAGEAdABhACAAbQBvAGQAZQAuACAAQwByAG8AcwBzAC0AcwBlAHIAdgBlAHIA
IABzAHcAaQB0AGMAaABlAGQAIABvAG4ALgABAy4AAAEAe3MAZQBsAGUAYwB0ACAAYwBsAGEAcwBz
AF8AaQBkACAAZgByAG8AbQAgAHsAMAB9AC4AcABhAHQAZQBuAHQAXwBjAGwAYQBzAHMAIAB3AGgA
ZQByAGUAIABjAGwAYQBzAHMAXwBjAG8AZABlAD0AJwB7ADEAfQAnACAAAYCRIAB1AG4AaQBvAG4A
IABhAGwAbAAgAHMAZQBsAGUAYwB0ACAAYwBsAGEAcwBzAF8AaQBkACAAZgByAG8AbQAgAHsAMAB9
AC4AcABhAHQAZQBuAHQAXwBjAGwAYQBzAHMAIAB3AGgAZQByAGUAIABjAGwAYQBzAHMAXwBjAG8A
ZABlAD0AJwB7ADEAfQAnACAAATNTAGUAdAAgAGEAZwBnAHIAZQBnAGEAdABpAG8AbgAgAHQAbwAg
AFsAewAwAH0AXQAuAACAgyAAewAwAH0ALgBwAGEAdABlAG4AdABfAGMAbABhAHMAcwBfAGwAaQBu
AGUAYQBnAGUAIABjAGwAMgAgAE8ATgAgAGMAbAAyAC4AYwBoAGkAbABkAF8AYwBsAGEAcwBzAF8A
aQBkAD0AYQBmADIALgBjAGwAYQBzAHMAXwBpAGQAIAAAH2EAZwBnAHIAZQBnAGEAdABlAF8AbgBf
AGYAYQBtAACAzSAAewAwAH0ALgBwAGEAdABlAG4AdABfAGMAbABhAHMAcwBfAGwAaQBuAGUAYQBn
AGUAIABjAGwAMgAgAE8ATgAgAGMAbAAyAC4AYwBoAGkAbABkAF8AYwBsAGEAcwBzAF8AaQBkAD0A
YQBmADIALgBjAGwAYQBzAHMAXwBpAGQAIABBAE4ARAAgAGMAbAAyAC4AcABhAHIAZQBuAHQAXwBj
AGwAYQBzAHMAXwBpAGQAPQBhAGYAMgAuAGMAbABhAHMAcwBfAGkAZAAgAAALbgBfAGYAYQBtAACM
11cASQBUAEgAIABhAGYAIAAoAHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQALAAgAGMA
bABhAHMAcwBfAGkAZAApACAAQQBTACAAKAAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIABzAGUAbABlAGMAdAAgAGQAaQBzAHQAaQBuAGMAdAAKAAkACQAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgAGEAZgAyAC4AcABhAHQAZQBuAHQAXwBmAGEAbQBpAGwAeQBfAGkAZAAK
AAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACwAIABjAGwAMgAuAHAAYQByAGUA
bgB0AF8AYwBsAGEAcwBzAF8AaQBkAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
AGYAcgBvAG0ACgAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAoAHsAMAB9ACkA
IABhACAASgBPAEkATgAKAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHsAMQB9
AC4AcABhAHQAZQBuAHQAXwBjAGwAYQBzAHMAXwBsAGkAbgBlAGEAZwBlACAAYwBsADEAIABPAE4A
IABhAC4AYwBsAGEAcwBzAF8AaQBkAD0AYwBsADEALgBwAGEAcgBlAG4AdABfAGMAbABhAHMAcwBf
AGkAZAAgAEoATwBJAE4ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAB7ADEAfQAuAGEAcABwAGwAbgBfAGYAYQBtAGkAbAB5AF8AYwBsAGEAcwBzAF8AZABh
AHQAZQAgAGEAZgAxACAATwBOACAAYQBmADEALgBjAGwAYQBzAHMAXwBpAGQAPQBjAGwAMQAuAGMA
aABpAGwAZABfAGMAbABhAHMAcwBfAGkAZAAgAEoATwBJAE4ACgAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB7ADEAfQAuAGEAcABwAGwAbgBfAGYAYQBtAGkA
bAB5AF8AYwBsAGEAcwBzAF8AZABhAHQAZQAgAGEAZgAyACAATwBOACAAYQBmADIALgBwAGEAdABl
AG4AdABfAGYAYQBtAGkAbAB5AF8AaQBkAD0AYQBmADEALgBwAGEAdABlAG4AdABfAGYAYQBtAGkA
bAB5AF8AaQBkACAAYQBuAGQAIABhAGYAMgAuAGMAbABhAHMAcwBfAGkAZAAgADwAPgAgAGEAZgAx
AC4AYwBsAGEAcwBzAF8AaQBkACAASgBPAEkATgAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgAHsAMwB9AAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgAHcAaABlAHIAZQAKAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMA
bAAyAC4AcABhAHIAZQBuAHQAXwBjAGwAYQBzAHMAXwBpAGQAIABpAG4AIAAoAHMAZQBsAGUAYwB0
ACAAbgBvAGQAZQBfAGsAZQB5ACAAZgByAG8AbQAgAHsAMgB9AC4AZABiAG8ALgBsAHMAXwBuAG8A
ZABlACkACgAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAG4AZAAKAAkACQAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHkAZQBhAHIAKABhAGYAMQAuAHAAcgBpAG8A
cgBpAHQAeQBfAGQAYQB0AGUAKQAgAD4AIAAoACAAeQBlAGEAcgAoAGcAZQB0AGQAYQB0AGUAKAAp
ACkAIAAtACAAMgAwACAAKQAKACAAIAAgACAAIAAgACAAIAApACAACgAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgAGYALgBjAGwAYQBzAHMAXwBpAGQACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAALAAgAHQAbwB0AGEAbABfAGYAYQBtAGkAbABpAGUAcwBfAHcAaQB0AGgAXwB3AG8AcgBk
AAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACwAIABjAC4AewA0AH0AIABhAHMA
IAB0AG8AdABhAGwAXwBmAGEAbQBpAGwAaQBlAHMAXwBpAG4AXwBjAGwAYQBzAHMACgAJACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALAAgAGMAbwB1AG4AdAAoAGQAaQBzAHQAaQBuAGMA
dAAgAHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQAKQAgAGEAcwAgAGYAYQBtAGkAbABp
AGUAcwBfAHcAaQB0AGgAXwB3AG8AcgBkAF8AaQBuAF8AYwBsAGEAcwBzAAoACQAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACwAIABjAGEAcwB0ACgAYwBvAHUAbgB0ACgAZABpAHMAdABp
AG4AYwB0ACAAcABhAHQAZQBuAHQAXwBmAGEAbQBpAGwAeQBfAGkAZAApACAAYQBzACAAcgBlAGEA
bAApACAALwAgAGMAYQBzAHQAKABjAC4AewA0AH0AIABhAHMAIAByAGUAYQBsACkAIABhAHMAIABm
AHIAYQBjAHQAaQBvAG4AXwBvAGYAXwBjAGwAYQBzAHMAXwB3AGkAdABoAF8AdwBvAHIAZAAKAAkA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAsACAAYwBhAHMAdAAoAGMAbwB1AG4AdAAo
AGQAaQBzAHQAaQBuAGMAdAAgAHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQAKQAgAGEA
cwAgAHIAZQBhAGwAKQAgAC8AIABjAGEAcwB0ACgAdABmAC4AdABvAHQAYQBsAF8AZgBhAG0AaQBs
AGkAZQBzAF8AdwBpAHQAaABfAHcAbwByAGQAIABhAHMAIAByAGUAYQBsACkAIABhAHMAIABmAHIA
YQBjAHQAaQBvAG4AXwBvAGYAXwBrAGUAeQB3AG8AcgBkAF8AaQBuAF8AYwBsAGEAcwBzAAoAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACwAIABjAGEAcwB0ACgAMQAuADAA
IABhAHMAIAByAGUAYQBsACkAIABhAHMAIABkAHUAbQBtAHkACgAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAEYAUgBPAE0ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
YQBmACAAZgAgAEoATwBJAE4ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAewAx
AH0ALgBwAGEAdABlAG4AdABfAGMAbABhAHMAcwAgAGMAIABPAE4AIABjAC4AYwBsAGEAcwBzAF8A
aQBkAD0AZgAuAGMAbABhAHMAcwBfAGkAZAAgAEMAUgBPAFMAUwAgAEoATwBJAE4ACgAJACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAKABzAGUAbABlAGMAdAAgAGMAbwB1AG4AdAAoAGQA
aQBzAHQAaQBuAGMAdAAgAHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQAKQAgAGEAcwAg
AHQAbwB0AGEAbABfAGYAYQBtAGkAbABpAGUAcwBfAHcAaQB0AGgAXwB3AG8AcgBkACAAZgByAG8A
bQAgAGEAZgApACAAdABmAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABHAFIATwBV
AFAAIABCAFkACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAZgAuAGMAbABhAHMA
cwBfAGkAZAAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAsACAAdABmAC4AdABv
AHQAYQBsAF8AZgBhAG0AaQBsAGkAZQBzAF8AdwBpAHQAaABfAHcAbwByAGQACgAJACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAALAAgAGMALgB7ADQAfQABD1MAVQBDAEMARQBTAFMAAElT
AHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAgAHIAZQBhAGQAIAB7ADAAfQAgAG4AdQBtAGIAZQByACAA
bwBmACAAcgBvAHcAcwAAJU4AbwAgAHIAbwB3AHMAIAB3AGUAcgBlACAAYQBkAGQAZQBkAAAPRgBB
AEkATABVAFIARQAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0
ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYA
YQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFP
AHUAdABwAHUAdAAgADAAAB9TAHUAbQAgAG8AZgAgAEYAcgBhAGMAdABpAG8AbgAAFVAAbABhAHQA
ZgBvAHIAbQBEAEIAABNQAHIAbwBqAGUAYwB0AEQAQgAAG0QAYQB0AGEAaABhAG4AZABsAGUAcgBE
AEIAACdjAGYAZwBfAHMAbABhAF8AQwBvAG0AcABvAG4AZQBuAHQASQBEAAA1YwBmAGcAXwBzAGwA
YQBfAEQAYQB0AGEAaABhAG4AZABsAGUAcgBDAGEAdABhAGwAbwBnAAA7YwBmAGcAXwBzAGwAYQBf
AEQAYQB0AGEAaABhAG4AZABsAGUAcgBEAGEAdABhAFMAbwB1AHIAYwBlAAA1YwBmAGcAXwBzAGwA
YQBfAEQAYQB0AGEAaABhAG4AZABsAGUAcgBWAGUAcgBzAGkAbwBuAAAtYwBmAGcAXwBzAGwAYQBf
AFAAcgBvAGoAZQBjAHQAQwBhAHQAYQBsAG8AZwAAM2MAZgBnAF8AcwBsAGEAXwBQAHIAbwBqAGUA
YwB0AEQAYQB0AGEAUwBvAHUAcgBjAGUAAB10AGgAaQBzAF8AQQBnAGcAcgBlAGcAYQB0AGUAAB90
AGgAaQBzAF8AQgBhAGcATwBmAFcAbwByAGQAcwAAHXQAaABpAHMAXwBOAG8AcgBtAGEAbABpAHoA
ZQAAcVMAQwBfADcANAA5ADMAYgBhADYAYQAwAGYAYgA2ADQAYwA0ADQAOQBkADQAZgA2ADEAYgA5
AGEAMgAzADkAYgBjADcAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAAAAXCFSQ/l8TSKaoaAAmHaOdAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFtBAcBEkEGIAIB
DhI9BiABARGAgQUgABKAhQcgAhKAiQ4cAyAACAQgARwcBQACAg4OBgADDg4ODgQgAQEcEgcMEkUd
Dg4ODg4SQQgIDg0SSQYgAR0OHQMGAAMODhwcBQACDg4OBQACDg4cBgACDg4dHAQgABJFAyAAAgYg
ARGAoQgGAAEMEYChBCABCAgDIAAOCSADARJRHQgSVQUgAgEIHAMHAQgGAAIIElUOBSABHQgIBSAA
EoCxBSAAEoC1BiABEoC5DgQgABI5BSAAEoC9BiABEoDBHAUAABKAxQYgARwSgMkIAAESgM0RgNEF
IAASgNUHIAIBDhKA1Qi3elxWGTTgiQiJhF3NgIDMkQMGEjkDBhI9AgYOAgYNAwYSGAMGEhwDBhIM
AwYSEAMGElkDBhJlAwYSaQMGEiQGIAMBDg4OBCABAQIEIAEBDQsgBAEIHQgdElESVQUgAQESWQQA
ABJlBAAAEmkFAAEBEmkEAAASJAMAAAEDKAAIAygAAgMoAA0EKAASOQMoAA4ECAASZQQIABJpBAgA
EiQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1ND
Xzc0OTNiYTZhMGZiNjRjNDQ5ZDRmNjFiOWEyMzliYzcxAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAg
IDIwMTYAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUQLk5FVCBGcmFtZXdvcmsgNAQBAAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVz
b3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJl
PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNl
cy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABxbAAAAAAAAAAAAADZb
AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoWwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAA
AAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQAAAAAAAAAAAAA
GgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAL9pkhgA
AAEAv2mSGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkA
bgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdABy
AGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMA
bwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABw
ACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANwA0ADkAMwBiAGEA
NgBhADAAZgBiADYANABjADQANAA5AGQANABmADYAMQBiADkAYQAyADMAOQBiAGMANwAxAAAAPgAP
AAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgA5ADAALgAyADcAMAA3ADEA
AAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANwA0ADkAMwBiAGEANgBh
ADAAZgBiADYANABjADQANAA5AGQANABmADYAMQBiADkAYQAyADMAOQBiAGMANwAxAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA3ADQAOQAz
AGIAYQA2AGEAMABmAGIANgA0AGMANAA0ADkAZAA0AGYANgAxAGIAOQBhADIAMwA5AGIAYwA3ADEA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANwA0ADkAMwBi
AGEANgBhADAAZgBiADYANABjADQANAA5AGQANABmADYAMQBiADkAYQAyADMAOQBiAGMANwAxAAAA
QgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADIAOQAwAC4AMgA3
ADAANwAxAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADIAOQAwAC4AMgA3ADAANwAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAEg7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_7493ba6a0fb64c449d4f61b9a239bc71</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerCatalog,User::cfg_sla_DatahandlerDataSource,User::cfg_sla_DatahandlerVersion,User::cfg_sla_ProjectCatalog,User::cfg_sla_ProjectDataSource,User::this_Aggregate,User::this_BagOfWords,User::this_Normalize</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">c05a29b2072bcc09a561f947eee7606f</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">f7da4e12f208e9b07da28313ae0f47ce77a77192</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Connections[PlatformDB]"
                          connectionManagerID="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          name="PlatformDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Connections[ProjectDB]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB - ADO.NET]"
                          name="ProjectDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Connections[DatahandlerDB]"
                          connectionManagerID="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          name="DatahandlerDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[node_key]"
                              name="node_key" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[fraction_of_word_in_node]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[fraction_of_word_in_node]"
                              name="fraction_of_word_in_node" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[fraction_of_node_with_word]"
                              name="fraction_of_node_with_word" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[families_with_word_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[families_with_word_in_node]"
                              name="families_with_word_in_node" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[total_families_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[total_families_in_node]"
                              name="total_families_in_node" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[total_families_with_word]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[total_families_with_word]"
                              name="total_families_with_word" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[dummy_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[dummy_key]"
                              name="dummy_key" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Sum of Fraction]"
                          hasSideEffects="true"
                          name="Sum of Fraction">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Sum of Fraction].Columns[sum_fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Sum of Fraction].Columns[sum_fraction_of_node_with_word]"
                              name="sum_fraction_of_node_with_word" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Sum of Fraction].Columns[dummy_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Sum of Fraction].Columns[dummy_key]"
                              name="dummy_key" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Left Input].Columns[dummy_key]"
                              cachedDataType="i4"
                              cachedName="dummy_key"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[dummy_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Left Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Left Input].Columns[fraction_of_word_in_node]"
                              cachedDataType="r8"
                              cachedName="fraction_of_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[fraction_of_word_in_node]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Left Input].Columns[fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[fraction_of_node_with_word]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Left Input].Columns[families_with_word_in_node]"
                              cachedDataType="i4"
                              cachedName="families_with_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[families_with_word_in_node]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Right Input].Columns[dummy_key]"
                              cachedDataType="i4"
                              cachedName="dummy_key"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum.Outputs[Sort Output].Columns[dummy_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Right Input].Columns[sum_fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="sum_fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum.Outputs[Sort Output].Columns[sum_fraction_of_node_with_word]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output]"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[node_key]"
                              name="node_key">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Left Input].Columns[node_key]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_word_in_node]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_word_in_node]"
                              name="fraction_of_word_in_node">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Left Input].Columns[fraction_of_word_in_node]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]"
                              name="fraction_of_node_with_word">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Left Input].Columns[fraction_of_node_with_word]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[families_with_word_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[families_with_word_in_node]"
                              name="families_with_word_in_node">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Left Input].Columns[families_with_word_in_node]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]"
                              name="sum_fraction_of_node_with_word">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Right Input].Columns[sum_fraction_of_node_with_word]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_score_numeric]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[score_value]"
                              cachedDataType="numeric"
                              cachedName="score_value"
                              cachedPrecision="30"
                              cachedScale="10"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[score_value]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[score_view]"
                              cachedDataType="i4"
                              cachedName="score_view"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[score_view]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[series_key]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="series_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[series_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[series_group]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="series_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[series_group]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[score_group]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="score_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[score_group]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              dataType="wstr"
                              length="100"
                              name="node_score_view" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              dataType="numeric"
                              name="node_score_value"
                              precision="30"
                              scale="10" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort Fraction Sum"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum.Inputs[Sort Input].Columns[sum_fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="sum_fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Sum of Fraction].Columns[sum_fraction_of_node_with_word]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum.Inputs[Sort Input].Columns[dummy_key]"
                              cachedDataType="i4"
                              cachedName="dummy_key"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Sum of Fraction].Columns[dummy_key]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum.Outputs[Sort Output].Columns[sum_fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum.Outputs[Sort Output].Columns[sum_fraction_of_node_with_word]"
                              name="sum_fraction_of_node_with_word">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Sum of Fraction].Columns[sum_fraction_of_node_with_word]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum.Outputs[Sort Output].Columns[dummy_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum.Outputs[Sort Output].Columns[dummy_key]"
                              name="dummy_key"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Sum of Fraction].Columns[dummy_key]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort Scores"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Inputs[Sort Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[node_key]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Inputs[Sort Input].Columns[fraction_of_word_in_node]"
                              cachedDataType="r8"
                              cachedName="fraction_of_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[fraction_of_word_in_node]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Inputs[Sort Input].Columns[fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[fraction_of_node_with_word]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Inputs[Sort Input].Columns[families_with_word_in_node]"
                              cachedDataType="i4"
                              cachedName="families_with_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[families_with_word_in_node]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Inputs[Sort Input].Columns[total_families_in_node]"
                              cachedDataType="i4"
                              cachedName="total_families_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[total_families_in_node]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Inputs[Sort Input].Columns[total_families_with_word]"
                              cachedDataType="i4"
                              cachedName="total_families_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[total_families_with_word]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Inputs[Sort Input].Columns[dummy_key]"
                              cachedDataType="i4"
                              cachedName="dummy_key"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[dummy_key]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[node_key]"
                              name="node_key">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[node_key]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[fraction_of_word_in_node]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[fraction_of_word_in_node]"
                              name="fraction_of_word_in_node">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[fraction_of_word_in_node]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[fraction_of_node_with_word]"
                              name="fraction_of_node_with_word">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[fraction_of_node_with_word]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[families_with_word_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[families_with_word_in_node]"
                              name="families_with_word_in_node">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[families_with_word_in_node]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[total_families_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[total_families_in_node]"
                              name="total_families_in_node">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[total_families_in_node]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[total_families_with_word]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[total_families_with_word]"
                              name="total_families_with_word">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[total_families_with_word]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[dummy_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output].Columns[dummy_key]"
                              name="dummy_key"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0].Columns[dummy_key]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="String score"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_score_str]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].Columns[score_group]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="score_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[score_group]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].Columns[string_series_group]"
                              cachedDataType="wstr"
                              cachedLength="5"
                              cachedName="string_series_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[string_series_group]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].Columns[series_key]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="series_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[series_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].Columns[score_view]"
                              cachedDataType="i4"
                              cachedName="score_view"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[score_view]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].Columns[string_series_value]"
                              cachedDataType="wstr"
                              cachedLength="500"
                              cachedName="string_series_value"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output].Columns[string_series_value]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              dataType="wstr"
                              length="100"
                              name="node_score_view" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              dataType="nText"
                              name="node_score_value" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Row Count.Inputs[Row Count Input 1]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Merge Join Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Multicast Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Multicast Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Multicast Output 2]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Inputs[Conditional Split Input]"
                      name="Multicast Output 2"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[No normalization]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score.Inputs[OLE DB Destination Input]"
                      name="No normalization"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split.Outputs[No normalization]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Output 0]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Inputs[Sort Input]"
                      name="Output 0"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Output 0]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Multicast.Inputs[Multicast Input 1]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Row Count.Outputs[Row Count Output 1]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Sort Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores.Outputs[Sort Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Sort Output1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum.Outputs[Sort Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Sum of Fraction]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum.Inputs[Sort Input]"
                      name="Sum of Fraction"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing.Outputs[Sum of Fraction]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{657D6BDC-AB52-41E3-80AD-7EF4A05342D0}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Bag Of Words (keyword profile)"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Outputs[No normalization]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="No normalization"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">@[User::this_Normalize] == "None"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::this_Normalize] == "None"</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Inputs[Derived Column Input].Columns[fraction_of_word_in_node]"
                              cachedDataType="r8"
                              cachedName="fraction_of_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_word_in_node]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Inputs[Derived Column Input].Columns[fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Inputs[Derived Column Input].Columns[families_with_word_in_node]"
                              cachedDataType="i4"
                              cachedName="families_with_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[families_with_word_in_node]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Inputs[Derived Column Input].Columns[sum_fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="sum_fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[score_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[score_group]"
                              name="score_group"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_ScoreGroup]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_ScoreGroup]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[series_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[series_group]"
                              name="series_group"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_SeriesGroup]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_SeriesGroup]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[series_key]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[series_key]"
                              name="series_key"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_ScoringLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_ScoringLabel]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[score_view]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[score_view]"
                              name="score_view"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">1</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">1</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[score_value]"
                              dataType="numeric"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[score_value]"
                              name="score_value"
                              precision="30"
                              scale="10"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_NUMERIC,30,10)(@[User::this_Normalize] == "None" ? #{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[families_with_word_in_node]} : (@[User::this_Normalize] == "Class" ? #{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]} : (@[User::this_Normalize] == "Series" ? #{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_word_in_node]} : (@[User::this_Normalize] == "ClassSeries" ? #{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]} / (#{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]} &gt; 0 ? #{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]} : 1.0) : 1.0))))</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_NUMERIC,30,10)(@[User::this_Normalize] == "None" ? families_with_word_in_node : (@[User::this_Normalize] == "Class" ? fraction_of_node_with_word : (@[User::this_Normalize] == "Series" ? fraction_of_word_in_node : (@[User::this_Normalize] == "ClassSeries" ? fraction_of_node_with_word / (sum_fraction_of_node_with_word &gt; 0 ? sum_fraction_of_node_with_word : 1.0) : 1.0))))</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[string_series_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="5"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[string_series_group]"
                              name="string_series_group"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"Prose"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"Prose"</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[string_series_value]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="500"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[string_series_value]"
                              name="string_series_value"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,500)("Mentioning " + @[User::this_ScoringLabel] + " in " + (DT_WSTR,10)#{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[families_with_word_in_node]} + " patents (" + [LEFT]((DT_WSTR,50)([ROUND](100 * #{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]},2)),5) + "%)")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,500)("Mentioning " + @[User::this_ScoringLabel] + " in " + (DT_WSTR,10)families_with_word_in_node + " patents (" + LEFT((DT_WSTR,50)(ROUND(100 * fraction_of_node_with_word,2)),5) + "%)")</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Join Fraction sum to individual scores"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[dummy_key]"
                              cachedDataType="i4"
                              cachedName="dummy_key"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[dummy_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[fraction_of_word_in_node]"
                              cachedDataType="r8"
                              cachedName="fraction_of_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[fraction_of_word_in_node]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[fraction_of_node_with_word]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[families_with_word_in_node]"
                              cachedDataType="i4"
                              cachedName="families_with_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[families_with_word_in_node]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Right Input].Columns[dummy_key]"
                              cachedDataType="i4"
                              cachedName="dummy_key"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Sum of Fraction].Columns[dummy_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Right Input].Columns[sum_fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="sum_fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Sum of Fraction].Columns[sum_fraction_of_node_with_word]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output]"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[node_key]"
                              name="node_key">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[node_key]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_word_in_node]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_word_in_node]"
                              name="fraction_of_word_in_node">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[fraction_of_word_in_node]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]"
                              name="fraction_of_node_with_word">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[fraction_of_node_with_word]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[families_with_word_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[families_with_word_in_node]"
                              name="families_with_word_in_node">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[families_with_word_in_node]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]"
                              name="sum_fraction_of_node_with_word">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Right Input].Columns[sum_fraction_of_node_with_word]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Landscape Node Score - Bag Of Words"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    IDTSConnectionManager100 myPlatformConnectionManager;
    IDTSConnectionManager100 myDatahandlerConnectionManager;
    IDTSConnectionManager100 myProjectConnectionManager;
    SqlConnection myPlatformConnection;
    SqlConnection myDatahandlerConnection;
    SqlConnection myProjectConnection;
    string componentid;
    string dthVersion;
    string dthSourceCatalog;
    string prjSourceCatalog;
    double SumFractionOfClass;

    private void LogEntry(string sourceid, string status, string msg)
    {
        using (SqlCommand cmd = new SqlCommand("nlh.log_addEntry", myPlatformConnection))
        {
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("@component", "ScoreLandscapeNodes.dtsx");
            cmd.Parameters.AddWithValue("@source_type", "SCRIPT");
            cmd.Parameters.AddWithValue("@source_name", "BoW Node Scoring");
            cmd.Parameters.AddWithValue("@source_id", sourceid);
            cmd.Parameters.AddWithValue("@message", msg);
            cmd.Parameters.AddWithValue("@action", "EXECUTE");
            cmd.Parameters.AddWithValue("@status", status);

            cmd.ExecuteNonQuery();
        }
    }


    public override void PreExecute()
    {
        base.PreExecute();
        /* Connections used for data, and for logging. */
        myPlatformConnectionManager = this.Connections.PlatformDB;
        myProjectConnectionManager = this.Connections.ProjectDB;
        myDatahandlerConnectionManager = this.Connections.DatahandlerDB;
        myPlatformConnection = (SqlConnection)myPlatformConnectionManager.AcquireConnection(null);
        myProjectConnection = (SqlConnection)myProjectConnectionManager.AcquireConnection(null);
        myDatahandlerConnection = (SqlConnection)myDatahandlerConnectionManager.AcquireConnection(null);

        /* Decision whether the queries are or aren't run in cross server mode. This is needed as the latter is a functional requirement but performs poorly */
        componentid = (string)Variables.cfgslaComponentID;
        dthVersion = Variables.cfgslaDatahandlerVersion;
        if (Variables.cfgslaDatahandlerDataSource == Variables.cfgslaProjectDataSource)
        {
            LogEntry(componentid, "WARNING", "Using local data mode. Cross-server switched off.");
            prjSourceCatalog = Variables.cfgslaProjectCatalog;
        }
        else
        {
            LogEntry(componentid, "WARNING", "Using cross-server data mode. Cross-server switched on.");
            prjSourceCatalog = Variables.cfgslaProjectDataSource + "." + Variables.cfgslaProjectCatalog;
        }


        /* The sum of fractions is maintained, to allow for normalizing by it afterwards. */
        //string Normalize = Variables.thisNormalize;
        SumFractionOfClass = 0.0;
    }

    public override void PostExecute()
    {
        base.PostExecute();
        myPlatformConnectionManager.ReleaseConnection(myPlatformConnection);
        myDatahandlerConnectionManager.ReleaseConnection(myDatahandlerConnection);
        myProjectConnectionManager.ReleaseConnection(myProjectConnection);
    }

    public int decideQuotes(string w)
    {
        /* Quotes/no-quotes are decided here and need to be added when 1) the content of the query requires it and 2) the quotes are not already there in the inside of the query */
        if (w.IndexOf('"') >= 0 || w.IndexOf('#') >= 0 || w.IndexOf("NEAR") >= 0 || w.IndexOf(" and ") >= 0 || w.IndexOf(" AND ") >= 0)
        {
            LogEntry(componentid, "WARNING", String.Format("Setting addQuotes=0 for contains clause [{0}].", w));
            return 0;
        }
        else
        {
            LogEntry(componentid, "WARNING", String.Format("Setting addQuotes=1 for contains clause [{0}].", w));
            return 1;
        }
    }

    public override void CreateNewOutputRows()
    {
        SqlDataReader reader;
        string BagOfWords = Variables.thisBagOfWords;

        /* Prepare the variables */
        string[] bow = BagOfWords.Split('|');
        string profileSql = "";
        string commandString;

        /* Prepare the first part of the SQL code */
        if (bow.Length > 0)
        {
            profileSql = String.Format("select patent_family_id from {0}.[ufn_patent_text]('{1}',{2}) ", dthVersion, bow[0].Replace('#', '"'), decideQuotes(bow[0]));
        }
        for (int i = 1; i < bow.Length; i++)
        {
            if (bow[i].Length > 0)
            {
                profileSql = profileSql + String.Format(" union all select patent_family_id from {0}.[ufn_patent_text]('{1}',{2}) ", dthVersion, bow[i].Replace('#', '"'), decideQuotes(bow[i]));
            }
        }

        /* The aggregation join is optional, and will include also documents in the count that reside in lower-positioned CPC classes. */
        LogEntry(componentid, "WARNING", String.Format("Set aggregation to [{0}].", Variables.thisAggregate));
        string aggregateJoin;
        string nFamFieldName;
        if (Variables.thisAggregate)
        {

            aggregateJoin = String.Format(" JOIN {0}.patent_class_lineage cl ON cl.child_class_id=af.class_id ", dthVersion);
            nFamFieldName = "aggregate_n_fam";
        }
        else
        {
            aggregateJoin = String.Format(" JOIN {0}.patent_class_lineage cl ON cl.child_class_id=af.class_id AND cl.parent_class_id=af.class_id ", dthVersion);
            nFamFieldName = "n_fam";
        }

        /* Final construction of the SQL */
        commandString = String.Format(@"WITH af (patent_family_id, class_id) AS (
	                select distinct
		                a.patent_family_id
		                , cl.parent_class_id
	                from
		                ({0}) a JOIN
		                {1}.appln_family_class_date af ON af.patent_family_id=a.patent_family_id
                        {3}
	                where
		                cl.parent_class_id in (select node_key from {2}.dbo.ls_node)
		                and
		                year(af.priority_date) > ( year(getdate()) - 20 )
        ) 
                SELECT
	                f.class_id
	                , total_families_with_word
	                , c.{4} as total_families_in_class
	                , count(distinct patent_family_id) as families_with_word_in_class
	                , cast(count(distinct patent_family_id) as real) / cast(c.{4} as real) as fraction_of_class_with_word
	                , cast(count(distinct patent_family_id) as real) / cast(tf.total_families_with_word as real) as fraction_of_keyword_in_class
                    , cast(1.0 as real) as dummy
                FROM
	                af f JOIN
	                {1}.patent_class c ON c.class_id=f.class_id CROSS JOIN
	                (select count(distinct patent_family_id) as total_families_with_word from af) tf
                GROUP BY
	                f.class_id
	                , tf.total_families_with_word
	                , c.{4}", profileSql, dthVersion, prjSourceCatalog, aggregateJoin, nFamFieldName);

        LogEntry(componentid, "SUCCESS", commandString);

        SqlCommand sqlc = new SqlCommand(commandString, myDatahandlerConnection);
        sqlc.CommandTimeout = 0;

        try
        {
            int rowcount = 0;

            reader = sqlc.ExecuteReader();
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    /* Pass all the outputs, which ones to use for which normalization is determined in the data flow */
                    double fraction_of_class_with_word = (double)reader.GetSqlSingle(4);
                    SumFractionOfClass = SumFractionOfClass + fraction_of_class_with_word;

                    Output0Buffer.AddRow();
                    Output0Buffer.nodekey = reader.GetInt32(0);
                    Output0Buffer.totalfamilieswithword = reader.GetInt32(1);
                    Output0Buffer.totalfamiliesinnode = reader.GetInt32(2);
                    Output0Buffer.familieswithwordinnode = reader.GetInt32(3);
                    Output0Buffer.fractionofnodewithword = fraction_of_class_with_word;
                    Output0Buffer.fractionofwordinnode = (double)reader.GetSqlSingle(5);
                    Output0Buffer.dummykey = 1; // This value is used for joining (an artificial cross-join). This is the sort key.

                    rowcount += 1;
                }

                string msg = String.Format("Successfully read {0} number of rows", rowcount);

                /* Output one row with the total sum of weights; this is used for an optional normalization. */
                SumofFractionBuffer.AddRow();
                SumofFractionBuffer.sumfractionofnodewithword = SumFractionOfClass;
                SumofFractionBuffer.dummykey = 1;
                LogEntry(componentid, "SUCCESS", msg);
            }
            else
            {
                LogEntry(componentid, "WARNING", "No rows were added");
            }
        }
        catch (Exception e)
        {
            LogEntry(componentid, "FAILURE", e.Message);
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 nodekey
    {
        set
        {
            this[0] = value;
        }
    }
    public bool nodekey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double fractionofwordinnode
    {
        set
        {
            this[1] = value;
        }
    }
    public bool fractionofwordinnode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double fractionofnodewithword
    {
        set
        {
            this[2] = value;
        }
    }
    public bool fractionofnodewithword_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 familieswithwordinnode
    {
        set
        {
            this[3] = value;
        }
    }
    public bool familieswithwordinnode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 totalfamiliesinnode
    {
        set
        {
            this[4] = value;
        }
    }
    public bool totalfamiliesinnode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 totalfamilieswithword
    {
        set
        {
            this[5] = value;
        }
    }
    public bool totalfamilieswithword_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 dummykey
    {
        set
        {
            this[6] = value;
        }
    }
    public bool dummykey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class SumofFractionBuffer: ScriptBuffer

{
    public SumofFractionBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Double sumfractionofnodewithword
    {
        set
        {
            this[0] = value;
        }
    }
    public bool sumfractionofnodewithword_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 dummykey
    {
        set
        {
            this[1] = value;
        }
    }
    public bool dummykey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties.Settings.get_Default():SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties.Sett" +
    "ings")]

namespace SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public SumofFractionBuffer SumofFractionBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

        if (null != SumofFractionBuffer)
        {
            SumofFractionBuffer.SetEndOfRowset();
            SumofFractionBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Sum of Fraction"))
            {
                SumofFractionBuffer = new SumofFractionBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ProjectDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ProjectDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 PlatformDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PlatformDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 DatahandlerDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"DatahandlerDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String cfgslaComponentID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ComponentID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerDataSource
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerDataSource"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerVersion
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerVersion"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaProjectCatalog
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ProjectCatalog"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaProjectDataSource
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ProjectDataSource"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean thisAggregate
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["this_Aggregate"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisBagOfWords
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_BagOfWords"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisNormalize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_Normalize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_87b2fa7093f34d1ab7cd47fc528ae983</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_87b2fa7093f34d1ab7cd47fc528ae983</msb:DisplayName>
		<msb:ProjectId>{3E9FD46F-A5F0-4772-AB71-086368AAE1E6}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_87b2fa7093f34d1ab7cd47fc528ae983.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_87b2fa7093f34d1ab7cd47fc528ae983.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d477c11d-2bc1-4293-aabe-bceeb11cfe1a}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_87b2fa7093f34d1ab7cd47fc528ae983</RootNamespace>
    <AssemblyName>SC_87b2fa7093f34d1ab7cd47fc528ae983</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_87b2fa7093f34d1ab7cd47fc528ae983" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_87b2fa7093f34d1ab7cd47fc528ae983")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_87b2fa7093f34d1ab7cd47fc528ae983")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_87b2fa7093f34d1ab7cd47fc528ae983.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOPy3FgAAAAAAAAAAOAAIiALATAAADwAAAAIAAAAAAAA0loA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIBaAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA2DoAAAAgAAAAPAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAA+AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAARAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC0
WgAAAAAAAEgAAAACAAUATCoAAHwvAAABAAAAAAAAAMhZAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwC6AAAAAQAAEXIBAABwAnsEAAAEcxAAAAoKBhpvEQAA
CgZvEgAACnIjAABwcjkAAHBvEwAACiYGbxIAAApyawAAcHKFAABwbxMAAAomBm8SAAAKcpMAAHBy
rQAAcG8TAAAKJgZvEgAACnLPAABwA28TAAAKJgZvEgAACnLlAABwBW8TAAAKJgZvEgAACnL3AABw
cgcBAHBvEwAACiYGbxIAAApyFwEAcARvEwAACiYGbxQAAAom3goGLAYGbxUAAArcKgAAARAAAAIA
EQCerwAKAAAAABMwBAAyAQAAAAAAAAIoFgAACgICewwAAARvKAAABn0BAAAEAgJ7DAAABG8nAAAG
fQMAAAQCAnsMAAAEbykAAAZ9AgAABAICewEAAAQUbxcAAAp0DwAAAX0EAAAEAgJ7AwAABBRvFwAA
CnQPAAABfQYAAAQCAnsCAAAEFG8XAAAKdA8AAAF9BQAABAICew0AAARvKwAABn0HAAAEAgJ7DQAA
BG8tAAAGfQgAAAQCew0AAARvLAAABgJ7DQAABG8vAAAGKBgAAAosKQICewcAAARyJwEAcHI3AQBw
KAEAAAYCAnsNAAAEby4AAAZ9CgAABCs8AgJ7BwAABHInAQBwcpsBAHAoAQAABgICew0AAARvLwAA
BnILAgBwAnsNAAAEby4AAAYoGQAACn0KAAAEAiMAAAAAAAAAAH0LAAAEKuoCKBoAAAoCewEAAAQC
ewQAAARvGwAACgJ7AgAABAJ7BQAABG8bAAAKAnsDAAAEAnsGAAAEbxsAAAoqAAAAEzAFAHwAAAAA
AAAAAx8ibxwAAAoWLzUDHyNvHAAAChYvKgNyDwIAcG8dAAAKFi8cA3IZAgBwbx0AAAoWLw4DciUC
AHBvHQAAChYyHgICewcAAARyJwEAcHIxAgBwAygeAAAKKAEAAAYWKgICewcAAARyJwEAcHKPAgBw
AygeAAAKKAEAAAYXKhswBwC8AgAAAgAAEQJ7DQAABG8xAAAGF40lAAABJRYffJ1vHwAACgty7QIA
cAwHjiwrcu8CAHACewgAAAQHFpofIx8ibyAAAAoCBxaaKAQAAAaMJgAAASghAAAKDBcTBytFBxEH
mm8iAAAKFjEzCHJtAwBwAnsIAAAEBxEHmh8jHyJvIAAACgIHEQeaKAQAAAaMJgAAASghAAAKKCMA
AAoMEQcXWBMHEQcHjmkytAICewcAAARyJwEAcHICBABwAnsNAAAEbzAAAAaMJwAAASgeAAAKKAEA
AAYCew0AAARvMAAABiwbcjYEAHACewgAAAQoHgAAChMEcr8EAHATBSsZct8EAHACewgAAAQoHgAA
ChMEcq4FAHATBXK6BQBwG40XAAABJRYIoiUXAnsIAAAEoiUYAnsKAAAEoiUZEQSiJRoRBaIoJAAA
Cg0CAnsHAAAEcr0QAHAJKAEAAAYJAnsFAAAEcxAAAAoTBhEGFm8lAAAKFhMIEQZvJgAACgoGbycA
AAo5CgEAADiqAAAABhpvKAAACigpAAAKa2wTCgICewsAAAQRClh9CwAABAJ7DgAABG8WAAAGAnsO
AAAEBhZvKgAACm8IAAAGAnsOAAAEBhdvKgAACm8SAAAGAnsOAAAEBhhvKgAACm8QAAAGAnsOAAAE
BhlvKgAACm8OAAAGAnsOAAAEEQpvDAAABgJ7DgAABAYbbygAAAooKQAACmtsbwoAAAYCew4AAAQX
bxQAAAYRCBdYEwgGbysAAAo6S////3LNEABwEQiMJgAAASgeAAAKEwkCew8AAARvHgAABgJ7DwAA
BAJ7CwAABG8aAAAGAnsPAAAEF28cAAAGAgJ7BwAABHK9EABwEQkoAQAABisWAgJ7BwAABHInAQBw
chcRAHAoAQAABt4cEwsCAnsHAAAEcj0RAHARC28sAAAKKAEAAAbeACpBHAAAAAAAAGcBAAA4AQAA
nwIAABwAAAASAAABHgIoIQAABioqAgMEBSgtAAAKKjoCFgOMJgAAASguAAAKKloDLAgCFigvAAAK
KnJNEQBwczAAAAp6OgIXA4wrAAABKC4AAAoqWgMsCAIXKC8AAAoqck0RAHBzMAAACno6AhgDjCsA
AAEoLgAACipaAywIAhgoLwAACipyTREAcHMwAAAKejoCGQOMJgAAASguAAAKKloDLAgCGSgvAAAK
KnJNEQBwczAAAAp6OgIaA4wmAAABKC4AAAoqWgMsCAIaKC8AAAoqck0RAHBzMAAACno6AhsDjCYA
AAEoLgAACipaAywIAhsoLwAACipyTREAcHMwAAAKejoCHAOMJgAAASguAAAKKloDLAgCHCgvAAAK
KnJNEQBwczAAAAp6HgIoMQAACioeAigyAAAKKh4CKDMAAAoqOgIWA4wrAAABKC4AAAoqOgIXA4wm
AAABKC4AAAoqfgIoNAAACgICcyYAAAZ9DAAABAICcyoAAAZ9DQAABCoGKtYCew4AAAQsEgJ7DgAA
BG8XAAAGAhR9DgAABAJ7DwAABCwSAnsPAAAEbx8AAAYCFH0PAAAEKgATMAUAcwAAAAMAABEWCitY
BAaUDgRy6hEAcCg1AAAKMxkCBQaaAgQGlCg2AAAKDgRzBwAABn0OAAAEBAaUDgRy/BEAcCg1AAAK
MxkCBQaaAgQGlCg2AAAKDgRzGQAABn0PAAAEBhdYCgYDMqQCbyUAAAYCbyIAAAYCKCMAAAYqOgIo
NwAACgIDfRAAAAQqggJ7EAAABG84AAAKbzkAAApyHBIAcG86AAAKbzsAAAoqggJ7EAAABG84AAAK
bzkAAApyMBIAcG86AAAKbzsAAAoqggJ7EAAABG84AAAKbzkAAApyRhIAcG86AAAKbzsAAAoqOgIo
NwAACgIDfREAAAQqlgJ7EQAABG88AAAKcmISAHBvPQAACig+AAAKbz8AAAp0JAAAASqWAnsRAAAE
bzwAAApyihIAcG89AAAKKD4AAApvPwAACnQkAAABKpYCexEAAARvPAAACnLGEgBwbz0AAAooPgAA
Cm8/AAAKdCQAAAEqlgJ7EQAABG88AAAKcvwSAHBvPQAACig+AAAKbz8AAAp0JAAAASqWAnsRAAAE
bzwAAApyKhMAcG89AAAKKD4AAApvPwAACnQkAAABKpYCexEAAARvPAAACnJeEwBwbz0AAAooPgAA
Cm8/AAAKpScAAAEqlgJ7EQAABG88AAAKcnwTAHBvPQAACig+AAAKbz8AAAp0JAAAASqWAnsRAAAE
bzwAAApynBMAcG89AAAKKD4AAApvPwAACnQkAAABKh4CKDcAAAoqrn4SAAAELR5yuhMAcNAIAAAC
KEAAAApvQQAACnNCAAAKgBIAAAR+EgAABCoafhMAAAQqHgKAEwAABCoafhQAAAQqHgIoQwAACiou
czgAAAaAFAAABCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMgKAAAjfgAA
NAsAAIANAAAjU3RyaW5ncwAAAAC0GAAALBQAACNVUwDgLAAAEAAAACNHVUlEAAAA8CwAAIwCAAAj
QmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAA1AAAACQAAABQAAAA5AAAAIwAAAEMA
AAAQAAAAAwAAAAYAAAAgAAAAIQAAAAEAAAAHAAAAAQAAAAAA/gUBAAAAAAAGAIcEgwoGABsFgwoG
ANMDXQoPAPcKAAAGAAAEqAcGAGoEqAcGAEsEqAcGAAIFqAcGAKcEqAcGAMAEqAcGABcEqAcGADIE
fQUKANsE+wIOAGYA6AkSABUISAwSAJIBSAwSAA4JSAwGAHQIMAcKAFsJ+wIWADgJ+wIKAJ0I+wIK
AHwM+wIGABQMMAcGALYDXQoGAGwJowoGAJEIkwcaAIYD6AUaAOcD6AUaAFQDfgcGAJsDgwoSAIgB
fggSACADLwESANoHSAwSADkKSAwGAJwCMAcGAJcFMAcGAPwIMAcGAKsAMAcGAEMHMAcSAAEJfggS
ANYCSwsGAGQIMAcGAKgCMAceAAEAEAoeACoAEAoeAE0AEAoOAH8A6AkOABoA6AlbAP0MAAAOAJAA
6AkGACcDMAcGAK8CMAcGAFENqAcAAAAA1QAAAAAAAQABAAEAEABLBwAAFAABAAEAAQAQACoJAABN
AAwABwABABAARwkAAE0ADAAZAAEAEABeDAAAWQAMACEAAQAQAJsLAABdABAAJgABABAAQQsAAF0A
EQAqAAAAEACqCgYLXQASADMAAAEQAJILBgt1ABQANwABAJIJOAEBAK4JOAEBAM0JOAEBACMIPAEB
ADgIPAEBAFAIPAEBAHwBQAEBAFYHQAEBAJ4FQAEBAK8FQAEBAL4LQwEGAJsLRgEGAEELSgEGACoJ
TgEGAEcJUgEBAGwMVgEBAGwMVgERADcHWgERAEQDXgERAPgBYgFQIAAAAACBAGoNZgEBACghAAAA
AMYAOQUGAAQAZiIAAAAAxgBEBQYABACkIgAAAACGAGALXAAEACwjAAAAAMYA8gsGAAUAECYAAAAA
hhhGCgYABQAYJgAAAACGGEYKvAAFACMmAAAAAIYINA0BAAgAMiYAAAAAhgjvBm0BCQBJJgAAAACG
CEQCcgEKAFgmAAAAAIYIjgZtAQsAbyYAAAAAhgidAXIBDAB+JgAAAACGCCYGbQENAJUmAAAAAIYI
XQIBAA4ApCYAAAAAhgiuBm0BDwC7JgAAAACGCHgCAQAQAMomAAAAAIYI0AZtAREA4SYAAAAAhgjW
AQEAEgDwJgAAAACGCG0GbQETAAcnAAAAAIYIQA0BABQAFicAAAAAhggCB20BFQAtJwAAAACGAC0N
BgAWADUnAAAAAIYAGwwGABYAPScAAAAAhgAeDKEAFgAYJgAAAACGGEYKvAAWAEUnAAAAAIYIuAFy
ARkAMiYAAAAAhghIBm0BGgBUJwAAAACGCEANAQAbAFgmAAAAAIYIAgdtARwALScAAAAAhgAtDQYA
HQA1JwAAAACGABsMBgAdAD0nAAAAAIYAHgyhAB0AYycAAAAAhhhGCgYAHQCDJwAAAADGAdELBgAd
AIUnAAAAAIEAXwEGAB0AvCcAAAAAxgDdDHcBHQCDJwAAAADGAfILBgAhADsoAAAAAIYYRgqDASEA
SigAAAAAhgj/APAAIgBrKAAAAACGCN4A8AAiAIwoAAAAAIYI7QDwACIArSgAAAAAhhhGCoMBIgC8
KAAAAACGCA0BuAAjAOIoAAAAAIYICAK4ACMACCkAAAAAhghhB7gAIwAuKQAAAACGCMAFuAAjAFQp
AAAAAIYIKAK4ACMAeikAAAAAhgh0A6EAIwCgKQAAAACGCHAKuAAjAMYpAAAAAIYIYwW4ACMA7CkA
AAAAgxhGCgYAIwD0KQAAAACTCGgJiQEjACAqAAAAAJMILAOOASMAJyoAAAAAkwg4A5MBIwAvKgAA
AACWCDwMmQEkADYqAAAAAIYYRgoGACQAPioAAAAAkRhMCp4BJAAAAAEAcwEAAAIA3wsAAAMA2QUA
AAEAMg0AAAEAYQkAAAIAbQsAAAMAqwgAAAEAXQUAAAEAXQUAAAEAXQUAAAEAXQUAAAEAXQUAAAEA
XQUAAAEAXQUAAAEAXQUAAAEAXQUAAAEAXQUAAAEAXQUAAAEAXQUAAAEAXQUAAAEAXQUAAAEAYQkA
AAIAbQsAAAMAqwgAAAEAXQUAAAEAXQUAAAEAXQUAAAEAXQUAAAEA1wsAAAIAUwoAAAMApwsAAAQA
qwgAAAEAggwAAAEAggwAAAEAXQUJAEYKAQARAEYKBgAZAEYKCgApAEYKEAAxAEYKEAA5AEYKEABB
AEYKEABJAEYKEABRAEYKEABZAEYKEABhAEYKEABpAEYKBgDBAEYKBgDhAEYKFQDxAEYKBgCBAEYK
IAD5ABwDJwCBAK8LLgAJAVAFNAD5AFoNPAAZAWwDBgCxADkFBgBxAPEHQAAhAXMNRQAhAQYMSwCx
AEQFBgBxAAMIUgAhAXUFVwAhAXUFXAAhAQ0MYQAhATYMegAhAfABgQAhAQ0MhwAhAd0FPAAhAQYM
jwAhAQ0MlQD5AMoMAQCBABwJnABBAeYLoQCJANMCpQBJASoMrABBAagAswBBAVoBoQCRAJACuACZ
AEYKvACZACcHxgCZABYHAQBRAUYKEACZAC0NBgCZABsMBgCZAB4MoQCxAEYKBgCxACMB0ACxAIEL
1wC5AEYKBgCxADsB3QBhAboH4wBpAeAC6QBxAXwJ8ACxADUL9QB5AR4H+wCxABgNAgGBAekMCAGZ
AcECDwGZAU0NGAHJAEYKHgHpAEYKBgAuAAsAxgEuABMAzwEuABsA7gEuACMA9wEuACsAIAIuADMA
IAIuADsAIAIuAEMA9wEuAEsAJgIuAFMAIAIuAFsAPQJDAGMAhQIDAWsAhQKBAnsAhQLJA3MA7gHp
A3MA7gEbAGcAzAADAAEABAAPAAYAEwAHABYACAAeAAkAIAAAADgNogEAAPMGpgEAAEgCqgEAAJIG
pgEAAL8BqgEAAE8GpgEAAGECogEAALIGpgEAAHwCogEAANQGpgEAANoBogEAAHEGpgEAAEQNogEA
AAYHpgEAALwBqgEAAEwGpgEAAEQNogEAAAYHpgEAAAMBrgEAAOIArgEAAPEArgEAABEBswEAAAwC
swEAAGUHswEAAMQFswEAACwCswEAAHgDpgEAAHQKswEAAGcFswEAAGwJtwEAAEwDvAEAAEAMwQEB
AAgAAwABAAkABQABAAoABwABAAsACQABAAwACwABAA0ADQABAA4ADwABAA8AEQABABAAEwABABEA
FQABABIAFwABABMAGQABABQAGwABABUAHQABABoAHwABABsAIQABABwAIwABAB0AJQACACcAJwAC
ACgAKQACACkAKwACACsALQACACwALwACAC0AMQACAC4AMwACAC8ANQACADAANwACADEAOQACADIA
OwACADQAPQACADUAPwABADYAPwACADcAQQAEgAAAAQAAAJoYQWIAAAAAAACxAAAABAAAAAAAAAAA
AAAAJgFRAQAAAAALAAAAAAAAAAAAAAAvAYwMAAAAAAsAAAAAAAAAAAAAAC8BtQgAAAAABAAAAAAA
AAAAAAAAJgEvAQAAAAALAAAAAAAAAAAAAAAvAakMAAAAAAQAAAAAAAAAAAAAACYBMAcAAAAACwAA
AAAAAAAAAAAALwHYCAAAAAAAAAAAAQAAALQKAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAA
SURUU1ZhcmlhYmxlMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1
bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABJRFRTVmFyaWFibGVz
MTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAEdldEludDMyAFNDXzg3YjJmYTcwOTNmMzRkMWFi
N2NkNDdmYzUyOGFlOTgzADxNb2R1bGU+AGdldF9QbGF0Zm9ybURCAGdldF9EYXRhaGFuZGxlckRC
AGdldF9Qcm9qZWN0REIAZ2V0X2NmZ3NsYUNvbXBvbmVudElEAEdldE91dHB1dElEAFN5c3RlbS5E
YXRhAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBSZWFkAE1hcmtPdXRwdXRzRmluaXNo
ZWQAc291cmNlaWQAY29tcG9uZW50aWQARGJDb21tYW5kAFNxbENvbW1hbmQAc2V0X2ZyYWN0aW9u
b2Zub2Rld2l0aHdvcmQAc2V0X3N1bWZyYWN0aW9ub2Zub2Rld2l0aHdvcmQAc2V0X3RvdGFsZmFt
aWxpZXN3aXRod29yZABSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfY2Znc2xhRGF0YWhhbmRs
ZXJEYXRhU291cmNlAGdldF9jZmdzbGFQcm9qZWN0RGF0YVNvdXJjZQBzZXRfZnJhY3Rpb25vZndv
cmRpbm5vZGUAc2V0X2ZhbWlsaWVzd2l0aHdvcmRpbm5vZGUAc2V0X3RvdGFsZmFtaWxpZXNpbm5v
ZGUAZ2V0X01lc3NhZ2UASURpc3Bvc2FibGUARG91YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAEdldFNxbFNpbmdsZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBzZXRfQ29tbWFuZFR5cGUAZ2V0X0N1bHR1cmUA
c2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bv
c2UAZ2V0X3RoaXNBZ2dyZWdhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0
ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2Vt
Ymx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNv
bmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxh
dGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
UHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUAZ2V0X3RoaXNOb3JtYWxp
emUASW5kZXhPZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBkdGhTb3VyY2VDYXRh
bG9nAHByalNvdXJjZUNhdGFsb2cAZ2V0X2NmZ3NsYVByb2plY3RDYXRhbG9nAG1zZwBnZXRfTGVu
Z3RoAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ184N2IyZmE3MDkzZjM0ZDFhYjdjZDQ3ZmM1Mjhh
ZTk4My5kbGwAc2V0X2ZyYWN0aW9ub2Zub2Rld2l0aHdvcmRfSXNOdWxsAHNldF9zdW1mcmFjdGlv
bm9mbm9kZXdpdGh3b3JkX0lzTnVsbABzZXRfdG90YWxmYW1pbGllc3dpdGh3b3JkX0lzTnVsbABz
ZXRfZnJhY3Rpb25vZndvcmRpbm5vZGVfSXNOdWxsAHNldF9mYW1pbGllc3dpdGh3b3JkaW5ub2Rl
X0lzTnVsbABzZXRfdG90YWxmYW1pbGllc2lubm9kZV9Jc051bGwAc2V0X25vZGVrZXlfSXNOdWxs
AHNldF9kdW1teWtleV9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVz
b3VyY2VNYW4AQm9vbGVhbgBTY3JpcHRNYWluAGR0aFZlcnNpb24AZ2V0X2NmZ3NsYURhdGFoYW5k
bGVyVmVyc2lvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAFNxbFBhcmFtZXRl
ckNvbGxlY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AUmVsZWFzZUNvbm5lY3Rpb24AU3FsQ29ubmVj
dGlvbgBteVBsYXRmb3JtQ29ubmVjdGlvbgBteURhdGFoYW5kbGVyQ29ubmVjdGlvbgBteVByb2pl
Y3RDb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9u
AEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAAQ2hhcgBE
YkRhdGFSZWFkZXIAU3FsRGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAE91dHB1dDBCdWZmZXIAUGlw
ZWxpbmVCdWZmZXIAU3Vtb2ZGcmFjdGlvbkJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNl
TWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFnZXIAbXlQbGF0Zm9ybUNvbm5lY3Rpb25NYW5hZ2Vy
AG15RGF0YWhhbmRsZXJDb25uZWN0aW9uTWFuYWdlcgBteVByb2plY3RDb25uZWN0aW9uTWFuYWdl
cgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBTcWxQYXJhbWV0ZXIALmN0b3IALmNjdG9yAE91dHB1
dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAZ2V0X3RoaXNCYWdPZldvcmRzAFN5c3RlbS5SdW50aW1l
LkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ184N2IyZmE3MDkzZjM0ZDFhYjdj
ZDQ3ZmM1MjhhZTk4My5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9k
ZXMAU0NfODdiMmZhNzA5M2YzNGQxYWI3Y2Q0N2ZjNTI4YWU5ODMuUHJvcGVydGllcwBnZXRfUmVh
ZE9ubHlWYXJpYWJsZXMAU3lzdGVtLkRhdGEuU3FsVHlwZXMAZGVjaWRlUXVvdGVzAEJ1ZmZlckNv
bHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBDb25uZWN0aW9ucwBCdWZmZXJz
AGdldF9QYXJhbWV0ZXJzAFN1bUZyYWN0aW9uT2ZDbGFzcwBGaW5pc2hPdXRwdXRzAHN0YXR1cwBn
ZXRfSGFzUm93cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABGb3JtYXQAT2JqZWN0AFNldEVu
ZE9mUm93c2V0AG9wX0V4cGxpY2l0AFNwbGl0AGdldF9EZWZhdWx0AFN5c3RlbS5EYXRhLlNxbENs
aWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9z
b2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABz
ZXRfQ29tbWFuZFRpbWVvdXQAUHJpbWVPdXRwdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRD
b21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABBZGRSb3cAc2V0X25vZGVr
ZXkAc2V0X2R1bW15a2V5AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkATG9nRW50cnkAb3Bf
RXF1YWxpdHkAAAAhbgBsAGgALgBsAG8AZwBfAGEAZABkAEUAbgB0AHIAeQAAFUAAYwBvAG0AcABv
AG4AZQBuAHQAADFTAGMAbwByAGUATABhAG4AZABzAGMAYQBwAGUATgBvAGQAZQBzAC4AZAB0AHMA
eAAAGUAAcwBvAHUAcgBjAGUAXwB0AHkAcABlAAANUwBDAFIASQBQAFQAABlAAHMAbwB1AHIAYwBl
AF8AbgBhAG0AZQAAIUIAbwBXACAATgBvAGQAZQAgAFMAYwBvAHIAaQBuAGcAABVAAHMAbwB1AHIA
YwBlAF8AaQBkAAARQABtAGUAcwBzAGEAZwBlAAAPQABhAGMAdABpAG8AbgAAD0UAWABFAEMAVQBU
AEUAAA9AAHMAdABhAHQAdQBzAAAPVwBBAFIATgBJAE4ARwAAY1UAcwBpAG4AZwAgAGwAbwBjAGEA
bAAgAGQAYQB0AGEAIABtAG8AZABlAC4AIABDAHIAbwBzAHMALQBzAGUAcgB2AGUAcgAgAHMAdwBp
AHQAYwBoAGUAZAAgAG8AZgBmAC4AAW9VAHMAaQBuAGcAIABjAHIAbwBzAHMALQBzAGUAcgB2AGUA
cgAgAGQAYQB0AGEAIABtAG8AZABlAC4AIABDAHIAbwBzAHMALQBzAGUAcgB2AGUAcgAgAHMAdwBp
AHQAYwBoAGUAZAAgAG8AbgAuAAEDLgAACU4ARQBBAFIAAAsgAGEAbgBkACAAAAsgAEEATgBEACAA
AF1TAGUAdAB0AGkAbgBnACAAYQBkAGQAUQB1AG8AdABlAHMAPQAwACAAZgBvAHIAIABjAG8AbgB0
AGEAaQBuAHMAIABjAGwAYQB1AHMAZQAgAFsAewAwAH0AXQAuAABdUwBlAHQAdABpAG4AZwAgAGEA
ZABkAFEAdQBvAHQAZQBzAD0AMQAgAGYAbwByACAAYwBvAG4AdABhAGkAbgBzACAAYwBsAGEAdQBz
AGUAIABbAHsAMAB9AF0ALgAAAQB9cwBlAGwAZQBjAHQAIABwAGEAdABlAG4AdABfAGYAYQBtAGkA
bAB5AF8AaQBkACAAZgByAG8AbQAgAHsAMAB9AC4AWwB1AGYAbgBfAHAAYQB0AGUAbgB0AF8AdABl
AHgAdABdACgAJwB7ADEAfQAnACwAewAyAH0AKQAgAAGAkyAAdQBuAGkAbwBuACAAYQBsAGwAIABz
AGUAbABlAGMAdAAgAHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQAIABmAHIAbwBtACAA
ewAwAH0ALgBbAHUAZgBuAF8AcABhAHQAZQBuAHQAXwB0AGUAeAB0AF0AKAAnAHsAMQB9ACcALAB7
ADIAfQApACAAATNTAGUAdAAgAGEAZwBnAHIAZQBnAGEAdABpAG8AbgAgAHQAbwAgAFsAewAwAH0A
XQAuAACAhyAASgBPAEkATgAgAHsAMAB9AC4AcABhAHQAZQBuAHQAXwBjAGwAYQBzAHMAXwBsAGkA
bgBlAGEAZwBlACAAYwBsACAATwBOACAAYwBsAC4AYwBoAGkAbABkAF8AYwBsAGEAcwBzAF8AaQBk
AD0AYQBmAC4AYwBsAGEAcwBzAF8AaQBkACAAAB9hAGcAZwByAGUAZwBhAHQAZQBfAG4AXwBmAGEA
bQAAgM0gAEoATwBJAE4AIAB7ADAAfQAuAHAAYQB0AGUAbgB0AF8AYwBsAGEAcwBzAF8AbABpAG4A
ZQBhAGcAZQAgAGMAbAAgAE8ATgAgAGMAbAAuAGMAaABpAGwAZABfAGMAbABhAHMAcwBfAGkAZAA9
AGEAZgAuAGMAbABhAHMAcwBfAGkAZAAgAEEATgBEACAAYwBsAC4AcABhAHIAZQBuAHQAXwBjAGwA
YQBzAHMAXwBpAGQAPQBhAGYALgBjAGwAYQBzAHMAXwBpAGQAIAAAC24AXwBmAGEAbQAAiwFXAEkA
VABIACAAYQBmACAAKABwAGEAdABlAG4AdABfAGYAYQBtAGkAbAB5AF8AaQBkACwAIABjAGwAYQBz
AHMAXwBpAGQAKQAgAEEAUwAgACgACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
cwBlAGwAZQBjAHQAIABkAGkAcwB0AGkAbgBjAHQACgAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIABhAC4AcABhAHQAZQBuAHQAXwBmAGEAbQBpAGwAeQBfAGkAZAAKAAkACQAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACwAIABjAGwALgBwAGEAcgBlAG4AdABfAGMAbABh
AHMAcwBfAGkAZAAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABmAHIAbwBtAAoA
CQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAKAB7ADAAfQApACAAYQAgAEoATwBJ
AE4ACgAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB7ADEAfQAuAGEAcABwAGwA
bgBfAGYAYQBtAGkAbAB5AF8AYwBsAGEAcwBzAF8AZABhAHQAZQAgAGEAZgAgAE8ATgAgAGEAZgAu
AHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQAPQBhAC4AcABhAHQAZQBuAHQAXwBmAGEA
bQBpAGwAeQBfAGkAZAAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgAHsAMwB9AAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHcAaABlAHIA
ZQAKAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMAbAAuAHAAYQByAGUAbgB0
AF8AYwBsAGEAcwBzAF8AaQBkACAAaQBuACAAKABzAGUAbABlAGMAdAAgAG4AbwBkAGUAXwBrAGUA
eQAgAGYAcgBvAG0AIAB7ADIAfQAuAGQAYgBvAC4AbABzAF8AbgBvAGQAZQApAAoACQAJACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQBuAGQACgAJAAkAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAB5AGUAYQByACgAYQBmAC4AcAByAGkAbwByAGkAdAB5AF8AZABhAHQAZQAp
ACAAPgAgACgAIAB5AGUAYQByACgAZwBlAHQAZABhAHQAZQAoACkAKQAgAC0AIAAyADAAIAApAAoA
IAAgACAAIAAgACAAIAAgACkAIAAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBF
AEwARQBDAFQACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAZgAuAGMAbABhAHMA
cwBfAGkAZAAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAsACAAdABvAHQAYQBs
AF8AZgBhAG0AaQBsAGkAZQBzAF8AdwBpAHQAaABfAHcAbwByAGQACgAJACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAALAAgAGMALgB7ADQAfQAgAGEAcwAgAHQAbwB0AGEAbABfAGYAYQBt
AGkAbABpAGUAcwBfAGkAbgBfAGMAbABhAHMAcwAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAsACAAYwBvAHUAbgB0ACgAZABpAHMAdABpAG4AYwB0ACAAcABhAHQAZQBuAHQAXwBm
AGEAbQBpAGwAeQBfAGkAZAApACAAYQBzACAAZgBhAG0AaQBsAGkAZQBzAF8AdwBpAHQAaABfAHcA
bwByAGQAXwBpAG4AXwBjAGwAYQBzAHMACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAALAAgAGMAYQBzAHQAKABjAG8AdQBuAHQAKABkAGkAcwB0AGkAbgBjAHQAIABwAGEAdABlAG4A
dABfAGYAYQBtAGkAbAB5AF8AaQBkACkAIABhAHMAIAByAGUAYQBsACkAIAAvACAAYwBhAHMAdAAo
AGMALgB7ADQAfQAgAGEAcwAgAHIAZQBhAGwAKQAgAGEAcwAgAGYAcgBhAGMAdABpAG8AbgBfAG8A
ZgBfAGMAbABhAHMAcwBfAHcAaQB0AGgAXwB3AG8AcgBkAAoACQAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACwAIABjAGEAcwB0ACgAYwBvAHUAbgB0ACgAZABpAHMAdABpAG4AYwB0ACAA
cABhAHQAZQBuAHQAXwBmAGEAbQBpAGwAeQBfAGkAZAApACAAYQBzACAAcgBlAGEAbAApACAALwAg
AGMAYQBzAHQAKAB0AGYALgB0AG8AdABhAGwAXwBmAGEAbQBpAGwAaQBlAHMAXwB3AGkAdABoAF8A
dwBvAHIAZAAgAGEAcwAgAHIAZQBhAGwAKQAgAGEAcwAgAGYAcgBhAGMAdABpAG8AbgBfAG8AZgBf
AGsAZQB5AHcAbwByAGQAXwBpAG4AXwBjAGwAYQBzAHMACgAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAALAAgAGMAYQBzAHQAKAAxAC4AMAAgAGEAcwAgAHIAZQBhAGwAKQAg
AGEAcwAgAGQAdQBtAG0AeQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8A
TQAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAGYAIABmACAASgBPAEkATgAK
AAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB7ADEAfQAuAHAAYQB0AGUAbgB0AF8A
YwBsAGEAcwBzACAAYwAgAE8ATgAgAGMALgBjAGwAYQBzAHMAXwBpAGQAPQBmAC4AYwBsAGEAcwBz
AF8AaQBkACAAQwBSAE8AUwBTACAASgBPAEkATgAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAoAHMAZQBsAGUAYwB0ACAAYwBvAHUAbgB0ACgAZABpAHMAdABpAG4AYwB0ACAAcABh
AHQAZQBuAHQAXwBmAGEAbQBpAGwAeQBfAGkAZAApACAAYQBzACAAdABvAHQAYQBsAF8AZgBhAG0A
aQBsAGkAZQBzAF8AdwBpAHQAaABfAHcAbwByAGQAIABmAHIAbwBtACAAYQBmACkAIAB0AGYACgAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEcAUgBPAFUAUAAgAEIAWQAKAAkAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIABmAC4AYwBsAGEAcwBzAF8AaQBkAAoACQAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACwAIAB0AGYALgB0AG8AdABhAGwAXwBmAGEAbQBpAGwA
aQBlAHMAXwB3AGkAdABoAF8AdwBvAHIAZAAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAsACAAYwAuAHsANAB9AAEPUwBVAEMAQwBFAFMAUwAASVMAdQBjAGMAZQBzAHMAZgB1AGwA
bAB5ACAAcgBlAGEAZAAgAHsAMAB9ACAAbgB1AG0AYgBlAHIAIABvAGYAIAByAG8AdwBzAAAlTgBv
ACAAcgBvAHcAcwAgAHcAZQByAGUAIABhAGQAZABlAGQAAA9GAEEASQBMAFUAUgBFAACAm0kAcwBO
AHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQA
bwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABo
AGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAAH1MA
dQBtACAAbwBmACAARgByAGEAYwB0AGkAbwBuAAATUAByAG8AagBlAGMAdABEAEIAABVQAGwAYQB0
AGYAbwByAG0ARABCAAAbRABhAHQAYQBoAGEAbgBkAGwAZQByAEQAQgAAJ2MAZgBnAF8AcwBsAGEA
XwBDAG8AbQBwAG8AbgBlAG4AdABJAEQAADtjAGYAZwBfAHMAbABhAF8ARABhAHQAYQBoAGEAbgBk
AGwAZQByAEQAYQB0AGEAUwBvAHUAcgBjAGUAADVjAGYAZwBfAHMAbABhAF8ARABhAHQAYQBoAGEA
bgBkAGwAZQByAFYAZQByAHMAaQBvAG4AAC1jAGYAZwBfAHMAbABhAF8AUAByAG8AagBlAGMAdABD
AGEAdABhAGwAbwBnAAAzYwBmAGcAXwBzAGwAYQBfAFAAcgBvAGoAZQBjAHQARABhAHQAYQBTAG8A
dQByAGMAZQAAHXQAaABpAHMAXwBBAGcAZwByAGUAZwBhAHQAZQAAH3QAaABpAHMAXwBCAGEAZwBP
AGYAVwBvAHIAZABzAAAddABoAGkAcwBfAE4AbwByAG0AYQBsAGkAegBlAABxUwBDAF8AOAA3AGIA
MgBmAGEANwAwADkAMwBmADMANABkADEAYQBiADcAYwBkADQANwBmAGMANQAyADgAYQBlADkAOAAz
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAlOokO/atBTLgtwPZB
/1xPAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFtBAcBEkEGIAIBDhI9BiABARGAgQUgABKAhQcg
AhKAiQ4cAyAACAQgARwcBQACAg4OBgADDg4ODgQgAQEcBCABCAMEIAEIDgUAAg4OHBIHDBJFHQ4O
Dg4OEkEICA4NEkkGIAEdDh0DBSACDgMDBwAEDg4cHBwFAAIODg4GAAIODh0cBCAAEkUDIAACBiAB
EYClCAYAAQwRgKUEIAEICAMgAA4JIAMBElEdCBJVBSACAQgcAwcBCAYAAggSVQ4FIAEdCAgFIAAS
gLEFIAASgLUGIAESgLkOBCAAEjkFIAASgL0GIAESgMEcBQAAEoDFBiABHBKAyQgAARKAzRGA0QUg
ABKA1QcgAgEOEoDVCLd6XFYZNOCJCImEXc2AgMyRAwYSOQMGEj0CBg4CBg0DBhIYAwYSHAMGEgwD
BhIQAwYSWQMGEmUDBhJpAwYSJAYgAwEODg4EIAEBAgQgAQENCyAEAQgdCB0SURJVBSABARJZBAAA
EmUEAAASaQUAAQESaQQAABIkAwAAAQMoAAgDKAACAygADQQoABI5AygADgQIABJlBAgAEmkECAAS
JAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0Nf
ODdiMmZhNzA5M2YzNGQxYWI3Y2Q0N2ZjNTI4YWU5ODMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAxNgAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRAuTkVUIEZyYW1ld29yayA0BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACoWgAAAAAAAAAAAADCWgAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtFoAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAA
AAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQAAAAAAAAAAAAA
GgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAEFimhgA
AAEAQWKaGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkA
bgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdABy
AGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMA
bwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABw
ACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AOAA3AGIAMgBmAGEA
NwAwADkAMwBmADMANABkADEAYQBiADcAYwBkADQANwBmAGMANQAyADgAYQBlADkAOAAzAAAAPgAP
AAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgA5ADgALgAyADUAMQA1ADMA
AAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOAA3AGIAMgBmAGEANwAw
ADkAMwBmADMANABkADEAYQBiADcAYwBkADQANwBmAGMANQAyADgAYQBlADkAOAAzAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA4ADcAYgAy
AGYAYQA3ADAAOQAzAGYAMwA0AGQAMQBhAGIANwBjAGQANAA3AGYAYwA1ADIAOABhAGUAOQA4ADMA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOAA3AGIAMgBm
AGEANwAwADkAMwBmADMANABkADEAYQBiADcAYwBkADQANwBmAGMANQAyADgAYQBlADkAOAAzAAAA
QgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADIAOQA4AC4AMgA1
ADEANQAzAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADIAOQA4AC4AMgA1ADEANQAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAANQ6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_87b2fa7093f34d1ab7cd47fc528ae983</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerDataSource,User::cfg_sla_DatahandlerVersion,User::cfg_sla_ProjectCatalog,User::cfg_sla_ProjectDataSource,User::this_Aggregate,User::this_BagOfWords,User::this_Normalize</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">550948097f82b7e33b31fa90d9310d09</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">54a0b128b229afbcd5c4f257b962214cd95388eb</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Connections[ProjectDB]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB - ADO.NET]"
                          name="ProjectDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Connections[PlatformDB]"
                          connectionManagerID="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          name="PlatformDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Connections[DatahandlerDB]"
                          connectionManagerID="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          name="DatahandlerDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0]"
                          hasSideEffects="true"
                          isSorted="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[node_key]"
                              name="node_key" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[fraction_of_word_in_node]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[fraction_of_word_in_node]"
                              name="fraction_of_word_in_node" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[fraction_of_node_with_word]"
                              name="fraction_of_node_with_word" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[families_with_word_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[families_with_word_in_node]"
                              name="families_with_word_in_node" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[total_families_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[total_families_in_node]"
                              name="total_families_in_node" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[total_families_with_word]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[total_families_with_word]"
                              name="total_families_with_word" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[dummy_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0].Columns[dummy_key]"
                              name="dummy_key"
                              sortKeyPosition="1" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Sum of Fraction]"
                          hasSideEffects="true"
                          isSorted="true"
                          name="Sum of Fraction">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Sum of Fraction].Columns[sum_fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Sum of Fraction].Columns[sum_fraction_of_node_with_word]"
                              name="sum_fraction_of_node_with_word" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Sum of Fraction].Columns[dummy_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Sum of Fraction].Columns[dummy_key]"
                              name="dummy_key"
                              sortKeyPosition="1" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_score_numeric]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[score_value]"
                              cachedDataType="numeric"
                              cachedName="score_value"
                              cachedPrecision="30"
                              cachedScale="10"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[score_value]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[score_view]"
                              cachedDataType="i4"
                              cachedName="score_view"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[score_view]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[series_key]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="series_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[series_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[series_group]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="series_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[series_group]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[score_group]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="score_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[score_group]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              dataType="wstr"
                              length="100"
                              name="node_score_view" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              dataType="numeric"
                              name="node_score_value"
                              precision="30"
                              scale="10" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="String score"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_score_str]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].Columns[score_group]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="score_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[score_group]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].Columns[string_series_group]"
                              cachedDataType="wstr"
                              cachedLength="5"
                              cachedName="string_series_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[string_series_group]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].Columns[series_key]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="series_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[series_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].Columns[score_view]"
                              cachedDataType="i4"
                              cachedName="score_view"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[score_view]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].Columns[string_series_value]"
                              cachedDataType="wstr"
                              cachedLength="500"
                              cachedName="string_series_value"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output].Columns[string_series_value]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              dataType="wstr"
                              length="100"
                              name="node_score_view" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              dataType="nText"
                              name="node_score_value" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Row Count.Inputs[Row Count Input 1]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Merge Join Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Multicast Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Multicast Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Multicast Output 2]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Inputs[Conditional Split Input]"
                      name="Multicast Output 2"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[No normalization]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score.Inputs[OLE DB Destination Input]"
                      name="No normalization"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split.Outputs[No normalization]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Output 0]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Left Input]"
                      name="Output 0"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Output 0]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Multicast.Inputs[Multicast Input 1]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Row Count.Outputs[Row Count Output 1]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Sum of Fraction]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores.Inputs[Merge Join Right Input]"
                      name="Sum of Fraction"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words.Outputs[Sum of Fraction]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Company portfolio"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{484E83D7-A3E7-4FC7-85BE-C2B24C5A1A91}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Company portfolio"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Outputs[No normalization]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="No normalization"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">@[User::this_Normalize] == "None"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::this_Normalize] == "None"</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Inputs[Derived Column Input].Columns[company_name]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="company_name"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[company_name]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Inputs[Derived Column Input].Columns[fraction_of_company_in_node]"
                              cachedDataType="r8"
                              cachedName="fraction_of_company_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_company_in_node]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Inputs[Derived Column Input].Columns[fraction_of_node_by_company]"
                              cachedDataType="r8"
                              cachedName="fraction_of_node_by_company"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_node_by_company]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Inputs[Derived Column Input].Columns[company_families_in_node]"
                              cachedDataType="i4"
                              cachedName="company_families_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[company_families_in_node]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Inputs[Derived Column Input].Columns[sum_fraction_of_node_by_company]"
                              cachedDataType="r8"
                              cachedName="sum_fraction_of_node_by_company"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[sum_fraction_of_node_by_company]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[score_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[score_group]"
                              name="score_group"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_ScoreGroup]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_ScoreGroup]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[series_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[series_group]"
                              name="series_group"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_SeriesGroup]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_SeriesGroup]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[series_key]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[series_key]"
                              name="series_key"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)#{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[company_name]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)company_name</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[score_view]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[score_view]"
                              name="score_view"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">1</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">1</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[score_value]"
                              dataType="numeric"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[score_value]"
                              name="score_value"
                              precision="30"
                              scale="10"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_NUMERIC,30,10)(@[User::this_Normalize] == "None" ? #{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[company_families_in_node]} : (@[User::this_Normalize] == "Class" ? #{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_node_by_company]} : (@[User::this_Normalize] == "Series" ? #{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_company_in_node]} : (@[User::this_Normalize] == "ClassSeries" ? #{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_node_by_company]} / (#{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[sum_fraction_of_node_by_company]} &gt; 0 ? #{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[sum_fraction_of_node_by_company]} : 1.0) : 1.0))))</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_NUMERIC,30,10)(@[User::this_Normalize] == "None" ? company_families_in_node : (@[User::this_Normalize] == "Class" ? fraction_of_node_by_company : (@[User::this_Normalize] == "Series" ? fraction_of_company_in_node : (@[User::this_Normalize] == "ClassSeries" ? fraction_of_node_by_company / (sum_fraction_of_node_by_company &gt; 0 ? sum_fraction_of_node_by_company : 1.0) : 1.0))))</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[string_series_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="5"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[string_series_group]"
                              name="string_series_group"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"Prose"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"Prose"</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[string_series_value]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="500"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[string_series_value]"
                              name="string_series_value"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,500)(#{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[company_name]} + " applied for " + (DT_WSTR,50)#{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[company_families_in_node]} + " patents (" + [LEFT]((DT_WSTR,50)([ROUND](100 * #{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_node_by_company]},2)),5) + "%)")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,500)(company_name + " applied for " + (DT_WSTR,50)company_families_in_node + " patents (" + LEFT((DT_WSTR,50)(ROUND(100 * fraction_of_node_by_company,2)),5) + "%)")</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Landscape Node Score - Company Profile"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public SumOfFractionBuffer SumOfFractionBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

        if (null != SumOfFractionBuffer)
        {
            SumOfFractionBuffer.SetEndOfRowset();
            SumOfFractionBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"SumOfFraction"))
            {
                SumOfFractionBuffer = new SumOfFractionBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ProjectDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ProjectDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 PlatformDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PlatformDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 DatahandlerDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"DatahandlerDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String cfgslaComponentID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ComponentID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerDataSource
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerDataSource"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerVersion
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerVersion"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaProjectCatalog
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ProjectCatalog"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaProjectDataSource
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ProjectDataSource"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgtplCMDatahandlerDB
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_tpl_CMDatahandlerDB"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgtplCMPlatformDB
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_tpl_CMPlatformDB"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean thisAggregate
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["this_Aggregate"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisCompanyId
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_CompanyId"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisNormalize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_Normalize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Collections.Generic;
using System.Linq;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    IDTSConnectionManager100 myPlatformConnectionManager;
    IDTSConnectionManager100 myDatahandlerConnectionManager;
    IDTSConnectionManager100 myProjectConnectionManager;
    SqlConnection myPlatformConnection;
    SqlConnection myDatahandlerConnection;
    SqlConnection myProjectConnection;
    string componentid;
    string dthVersion;
    string prjSourceCatalog;

    private void LogEntry(string sourceid, string status, string msg)
    {
        using (SqlCommand cmd = new SqlCommand("nlh.log_addEntry", myPlatformConnection))
        {
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("@component", "ScoreLandscapeNodes.dtsx");
            cmd.Parameters.AddWithValue("@source_type", "SCRIPT");
            cmd.Parameters.AddWithValue("@source_name", "Company Node Scoring");
            cmd.Parameters.AddWithValue("@source_id", sourceid);
            cmd.Parameters.AddWithValue("@message", msg);
            cmd.Parameters.AddWithValue("@action", "EXECUTE");
            cmd.Parameters.AddWithValue("@status", status);

            cmd.ExecuteNonQuery();
        }
    }


    public override void PreExecute()
    {
        base.PreExecute();

        /* Connections used for data, and for logging. */
        myPlatformConnectionManager = this.Connections.PlatformDB;
        myProjectConnectionManager = this.Connections.ProjectDB;
        myDatahandlerConnectionManager = this.Connections.DatahandlerDB;
        myPlatformConnection = (SqlConnection)myPlatformConnectionManager.AcquireConnection(null);
        myProjectConnection = (SqlConnection)myProjectConnectionManager.AcquireConnection(null);
        myDatahandlerConnection = (SqlConnection)myDatahandlerConnectionManager.AcquireConnection(null);

        /* Decision whether the queries are or aren't run in cross server mode. This is needed as the latter is a functional requirement but performs poorly */
        componentid = (string)Variables.cfgslaComponentID;
        dthVersion = Variables.cfgslaDatahandlerVersion;
        if (Variables.cfgslaDatahandlerDataSource == Variables.cfgslaProjectDataSource)
        {
            LogEntry(componentid, "WARNING", "Using local data mode. Cross-server switched off.");
            prjSourceCatalog = Variables.cfgslaProjectCatalog;
        }
        else
        {
            LogEntry(componentid, "WARNING", "Using cross-server data mode. Cross-server switched on.");
            prjSourceCatalog = Variables.cfgslaProjectDataSource + "." + Variables.cfgslaProjectCatalog;
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        myPlatformConnectionManager.ReleaseConnection(myPlatformConnection);
        myDatahandlerConnectionManager.ReleaseConnection(myDatahandlerConnection);
        myProjectConnectionManager.ReleaseConnection(myProjectConnection);
    }

    public override void CreateNewOutputRows()
    {
        /* Prepare the variables */
        SqlDataReader reader;
        string companyId = Variables.thisCompanyId;
        string dthVersion = Variables.cfgslaDatahandlerVersion;

        Dictionary<string, double> CompanyTotals = new Dictionary<string, double>();

        string[] company = companyId.Split('|');
        string profileSql = "";
        string commandString;

        /* Prepare the first part of the SQL code */
        if (company.Length > 0)
        {
            profileSql = String.Format("'{0}'", company[0]);
        }
        for (int i = 1; i < company.Length; i++)
        {
            if (company[i].Length > 0)
            {
                profileSql = profileSql + String.Format(", '{0}'", company[i]);
            }
        }

        /* The aggregation join is optional, and will include also documents in the count that reside in lower-positioned CPC classes. */
        string aggregateJoin;
        string nFamFieldName;
        if (Variables.thisAggregate)
        {
            aggregateJoin = String.Format(" JOIN {0}.patent_class_lineage cl ON cl.child_class_id=af.class_id ", dthVersion);
            nFamFieldName = "aggregate_n_fam";
        }
        else
        {
            aggregateJoin = String.Format(" JOIN {0}.patent_class_lineage cl ON cl.child_class_id=af.class_id AND cl.parent_class_id=af.class_id ", dthVersion);
            nFamFieldName = "n_fam";
        }

        /* Final construction of the SQL */
        commandString = String.Format(@"WITH af (company_name, patent_family_id, class_id) AS (
	                                    select distinct
		                                    cb.company_name
		                                    , af.patent_family_id
		                                    , cl.parent_class_id
	                                    from
		                                    {1}.company_basic cb JOIN
		                                    {1}.company_patent_family ab ON cb.bvd_id=ab.bvd_id JOIN
		                                    {1}.patent_family_class af ON af.patent_family_id=ab.patent_family_id
                                            {3}
	                                    where
		                                    cb.bvd_id IN ({0})
		                                    ) 
                                    SELECT
	                                    f.company_name
	                                    , f.class_id
	                                    , total_company_portfolio
	                                    , c.{4} as total_families_in_class
	                                    , count(distinct patent_family_id) as company_families_in_class
	                                    , cast(count(distinct patent_family_id) as real) / cast(c.{4} as real) as fraction_of_class_by_company
	                                    , cast(count(distinct patent_family_id) as real) / cast(tf.total_company_portfolio as real) as fraction_of_company_in_class
	                                    , cast(1.0 as real) as dummy
                                    FROM
	                                    af f JOIN
	                                    {1}.patent_class c ON c.class_id=f.class_id JOIN
	                                    (select company_name, count(distinct patent_family_id) as total_company_portfolio from af group by company_name) tf ON tf.company_name=f.company_name
                                    WHERE
	                                    f.class_id IN ( select node_key from {2}.dbo.ls_node  )
                                    GROUP BY
	                                    f.company_name
	                                    , f.class_id
	                                    , tf.total_company_portfolio
	                                    , c.{4}
                                    ORDER BY
                                        f.company_name
                                    ", profileSql, dthVersion, prjSourceCatalog, aggregateJoin, nFamFieldName);


        SqlCommand sqlc = new SqlCommand(commandString, myDatahandlerConnection);
        sqlc.CommandTimeout = 0;

        try
        {
            int rowcount = 0;

            reader = sqlc.ExecuteReader();
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    /* Pass all the outputs, which ones to use for which normalization is determined in the data flow */
                    string company_name = reader.GetString(0);
                    double fraction_of_class_by_company = (double)reader.GetSqlSingle(5);

                    if (CompanyTotals.ContainsKey(company_name))
                        CompanyTotals[company_name] = CompanyTotals[company_name] + fraction_of_class_by_company;
                    else
                        CompanyTotals.Add(company_name, fraction_of_class_by_company);

                    Output0Buffer.AddRow();
                    Output0Buffer.companyname = company_name;
                    Output0Buffer.nodekey = reader.GetInt32(1);
                    Output0Buffer.totalcompanyportfolio = reader.GetInt32(2);
                    Output0Buffer.totalfamiliesinnode = reader.GetInt32(3);
                    Output0Buffer.companyfamiliesinnode = reader.GetInt32(4);
                    Output0Buffer.fractionofnodebycompany = fraction_of_class_by_company;
                    Output0Buffer.fractionofcompanyinnode = (double)reader.GetSqlSingle(6);

                    rowcount += 1;
                }

                string msg = String.Format("Successfully read {0} number of rows", rowcount);

                /* Output one row per company with the total sum of weights; this is used for an optional normalization. */
                List<string> l = CompanyTotals.Keys.ToList();
                l.Sort();

                foreach (string c in l)
                {
                    SumOfFractionBuffer.AddRow();
                    if (c.Length > 100)
                        SumOfFractionBuffer.companyname = c.Substring(0, 100);
                    else
                        SumOfFractionBuffer.companyname = c;

                    SumOfFractionBuffer.sumfractionofnodebycompany = CompanyTotals[c];
                }
                /*foreach (KeyValuePair<string, double> cc in CompanyTotals)
                {
                    SumOfFractionBuffer.AddRow();
                    if (cc.Key.Length > 100)
                        SumOfFractionBuffer.companyname = cc.Key.Substring(0, 100);
                    else
                        SumOfFractionBuffer.companyname = cc.Key;

                    SumOfFractionBuffer.sumfractionofnodebycompany = cc.Value;
                }*/

                LogEntry(componentid, "SUCCESS", msg);
            }
            else
            {
                LogEntry(componentid, "WARNING", "No rows were added");
            }
        }
        catch (Exception e)
        {
            LogEntry(componentid, "FAILURE", e.Message);
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_2f75465290f44d598580d78dd16158e7.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{f004f715-7e5d-49f3-9be9-dac8d5cf9893}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2f75465290f44d598580d78dd16158e7</RootNamespace>
    <AssemblyName>SC_2f75465290f44d598580d78dd16158e7</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_2f75465290f44d598580d78dd16158e7" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2f75465290f44d598580d78dd16158e7.Properties.Settings.get_Default():SC_2f75465290f44d598580d78dd16158e7.Properties.Sett" +
    "ings")]

namespace SC_2f75465290f44d598580d78dd16158e7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Double nodescore
    {
        set
        {
            this[0] = value;
        }
    }
    public bool nodescore_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 nodekey
    {
        set
        {
            this[1] = value;
        }
    }
    public bool nodekey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String companyname
    {
        set
        {
            this[2] = value;
        }
    }
    public bool companyname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double fractionofcompanyinnode
    {
        set
        {
            this[3] = value;
        }
    }
    public bool fractionofcompanyinnode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double fractionofnodebycompany
    {
        set
        {
            this[4] = value;
        }
    }
    public bool fractionofnodebycompany_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 companyfamiliesinnode
    {
        set
        {
            this[5] = value;
        }
    }
    public bool companyfamiliesinnode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 totalfamiliesinnode
    {
        set
        {
            this[6] = value;
        }
    }
    public bool totalfamiliesinnode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 totalcompanyportfolio
    {
        set
        {
            this[7] = value;
        }
    }
    public bool totalcompanyportfolio_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class SumOfFractionBuffer: ScriptBuffer

{
    public SumOfFractionBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String companyname
    {
        set
        {
            this[0] = value;
        }
    }
    public bool companyname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double sumfractionofnodebycompany
    {
        set
        {
            this[1] = value;
        }
    }
    public bool sumfractionofnodebycompany_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_2f75465290f44d598580d78dd16158e7</msb:CodeName>
		<msb:DisplayName>SC_2f75465290f44d598580d78dd16158e7</msb:DisplayName>
		<msb:ProjectId>{D9599338-EF2B-4769-A7A7-39DFC39AF6E4}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_2f75465290f44d598580d78dd16158e7.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2f75465290f44d598580d78dd16158e7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_2f75465290f44d598580d78dd16158e7")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2f75465290f44d598580d78dd16158e7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2f75465290f44d598580d78dd16158e7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2f75465290f44d598580d78dd16158e7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2f75465290f44d598580d78dd16158e7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2f75465290f44d598580d78dd16158e7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_2f75465290f44d598580d78dd16158e7.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAF7z3FgAAAAAAAAAAOAAIiALATAAAEQAAAAIAAAAAAAAEmMA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAADAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMBiAABPAAAAAIAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAGEMAAAAgAAAARAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAgAAAAAYAAABGAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAATAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD0
YgAAAAAAAEgAAAACAAUASCoAAMA3AAABAAAAAAAAAAhiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwC6AAAAAQAAEXIBAABwAnsEAAAEcxAAAAoKBhpvEQAA
CgZvEgAACnIjAABwcjkAAHBvEwAACiYGbxIAAApyawAAcHKFAABwbxMAAAomBm8SAAAKcpMAAHBy
rQAAcG8TAAAKJgZvEgAACnLXAABwA28TAAAKJgZvEgAACnLtAABwBW8TAAAKJgZvEgAACnL/AABw
cg8BAHBvEwAACiYGbxIAAApyHwEAcARvEwAACiYGbxQAAAom3goGLAYGbxUAAArcKgAAARAAAAIA
EQCerwAKAAAAABMwBAAiAQAAAAAAAAIoFgAACgICewoAAARvKQAABn0BAAAEAgJ7CgAABG8oAAAG
fQMAAAQCAnsKAAAEbyoAAAZ9AgAABAICewEAAAQUbxcAAAp0DwAAAX0EAAAEAgJ7AwAABBRvFwAA
CnQPAAABfQYAAAQCAnsCAAAEFG8XAAAKdA8AAAF9BQAABAICewsAAARvLAAABn0HAAAEAgJ7CwAA
BG8uAAAGfQgAAAQCewsAAARvLQAABgJ7CwAABG8wAAAGKBgAAAosKAICewcAAARyLwEAcHI/AQBw
KAEAAAYCAnsLAAAEby8AAAZ9CQAABCoCAnsHAAAEci8BAHByowEAcCgBAAAGAgJ7CwAABG8wAAAG
chMCAHACewsAAARvLwAABigZAAAKfQkAAAQq6gIoGgAACgJ7AQAABAJ7BAAABG8bAAAKAnsCAAAE
AnsFAAAEbxsAAAoCewMAAAQCewYAAARvGwAACioAAAAbMAUAzwIAAAIAABECewsAAARvNAAABgJ7
CwAABG8uAAAGC3McAAAKDBeNKAAAASUWH3ydbx0AAAoNchcCAHATBAmOLA9yGQIAcAkWmigeAAAK
EwQXEwgrKQkRCJpvHwAAChYxFxEEciUCAHAJEQiaKB4AAAooIAAAChMEEQgXWBMIEQgJjmky0AJ7
CwAABG8zAAAGLBZyNQIAcAcoHgAAChMFcr4CAHATBisUct4CAHAHKB4AAAoTBXKtAwBwEwZyuQMA
cBuNGgAAASUWEQSiJRcHoiUYAnsJAAAEoiUZEQWiJRoRBqIoIQAACgJ7BQAABHMQAAAKEwcRBxZv
IgAAChYTCREHbyMAAAoKBm8kAAAKOY8BAAA4zgAAAAYWbyUAAAoTCwYbbyYAAAooJwAACmtsEwwI
EQtvKAAACiwVCBELCBELbykAAAoRDFhvKgAACisKCBELEQxvKwAACgJ7DAAABG8XAAAGAnsMAAAE
EQtvCwAABgJ7DAAABAYXbywAAApvCQAABgJ7DAAABAYYbywAAApvFQAABgJ7DAAABAYZbywAAApv
EwAABgJ7DAAABAYabywAAApvEQAABgJ7DAAABBEMbw8AAAYCewwAAAQGHG8mAAAKKCcAAAprbG8N
AAAGEQkXWBMJBm8tAAAKOif///9yoBYAcBEJjCsAAAEoHgAAChMKCG8uAAAKKAEAACslbzAAAApv
MQAAChMNK1YSDSgyAAAKEw4Cew0AAARvHwAABhEObx8AAAofZDEXAnsNAAAEEQ4WH2RvMwAACm8b
AAAGKw0Cew0AAAQRDm8bAAAGAnsNAAAECBEObykAAApvHQAABhINKDQAAAotod4OEg3+FgMAABtv
FQAACtwCAnsHAAAEcuoWAHARCigBAAAGKxYCAnsHAAAEci8BAHBy+hYAcCgBAAAG3hwTDwICewcA
AARyIBcAcBEPbzUAAAooAQAABt4AKgBBNAAAAgAAABQCAABjAAAAdwIAAA4AAAAAAAAAAAAAAPUA
AAC9AQAAsgIAABwAAAAVAAABHgIoIgAABioqAgMEBSg2AAAKKjoCFgOMLwAAASg3AAAKKloDLAgC
Fig4AAAKKnIwFwBwczkAAAp6OgIXA4wrAAABKDcAAAoqWgMsCAIXKDgAAAoqcjAXAHBzOQAACnom
AhgDKDcAAAoqWgMsCAIYKDgAAAoqcjAXAHBzOQAACno6AhkDjC8AAAEoNwAACipaAywIAhkoOAAA
CipyMBcAcHM5AAAKejoCGgOMLwAAASg3AAAKKloDLAgCGig4AAAKKnIwFwBwczkAAAp6OgIbA4wr
AAABKDcAAAoqWgMsCAIbKDgAAAoqcjAXAHBzOQAACno6AhwDjCsAAAEoNwAACipaAywIAhwoOAAA
CipyMBcAcHM5AAAKejoCHQOMKwAAASg3AAAKKloDLAgCHSg4AAAKKnIwFwBwczkAAAp6HgIoOgAA
CioeAig7AAAKKh4CKDwAAAoqJgIWAyg3AAAKKjoCFwOMLwAAASg3AAAKKn4CKD0AAAoCAnMnAAAG
fQoAAAQCAnMrAAAGfQsAAAQqBirWAnsMAAAELBICewwAAARvGAAABgIUfQwAAAQCew0AAAQsEgJ7
DQAABG8gAAAGAhR9DQAABCoAEzAFAHMAAAADAAARFgorWAQGlA4Ecs0XAHAoPgAACjMZAgUGmgIE
BpQoPwAACg4EcwYAAAZ9DAAABAQGlA4Ect8XAHAoPgAACjMZAgUGmgIEBpQoPwAACg4EcxoAAAZ9
DQAABAYXWAoGAzKkAm8mAAAGAm8jAAAGAigkAAAGKjoCKEAAAAoCA30OAAAEKoICew4AAARvQQAA
Cm9CAAAKcvsXAHBvQwAACm9EAAAKKoICew4AAARvQQAACm9CAAAKcg8YAHBvQwAACm9EAAAKKoIC
ew4AAARvQQAACm9CAAAKciUYAHBvQwAACm9EAAAKKjoCKEAAAAoCA30PAAAEKpYCew8AAARvRQAA
CnJBGABwb0YAAAooRwAACm9IAAAKdCcAAAEqlgJ7DwAABG9FAAAKcmkYAHBvRgAACihHAAAKb0gA
AAp0JwAAASqWAnsPAAAEb0UAAApypRgAcG9GAAAKKEcAAApvSAAACnQnAAABKpYCew8AAARvRQAA
CnLbGABwb0YAAAooRwAACm9IAAAKdCcAAAEqlgJ7DwAABG9FAAAKcgkZAHBvRgAACihHAAAKb0gA
AAp0JwAAASqWAnsPAAAEb0UAAApyPRkAcG9GAAAKKEcAAApvSAAACnQnAAABKpYCew8AAARvRQAA
CnJtGQBwb0YAAAooRwAACm9IAAAKdCcAAAEqlgJ7DwAABG9FAAAKcpcZAHBvRgAACihHAAAKb0gA
AAqlOAAAASqWAnsPAAAEb0UAAApytRkAcG9GAAAKKEcAAApvSAAACnQnAAABKpYCew8AAARvRQAA
CnLTGQBwb0YAAAooRwAACm9IAAAKdCcAAAEqHgIoQAAACiqufhAAAAQtHnLxGQBw0AgAAAIoSQAA
Cm9KAAAKc0sAAAqAEAAABH4QAAAEKhp+EQAABCoeAoARAAAEKhp+EgAABCoeAihMAAAKKi5zOwAA
BoASAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAnAsAACN+AAAIDAAA
ZA4AACNTdHJpbmdzAAAAAGwaAABkGgAAI1VTANA0AAAQAAAAI0dVSUQAAADgNAAA4AIAACNCbG9i
AAAAAAAAAAIAAAFXFaIJCQkAAAD6ATMAFgAAAQAAADsAAAAJAAAAEgAAADwAAAAkAAAATAAAABAA
AAADAAAABgAAACQAAAAlAAAAAwAAAAEAAAAIAAAAAQAAAAEAAAAAAFIGAQAAAAAABgDnBCILBgB7
BSILBgAzBA8LDwCWCwAABgBgBBgIBgDKBBgIBgCrBBgIBgBiBRgIBgAHBRgIBgAgBRgIBgB3BBgI
BgCSBNUFCgA7BUEDDgBmAIwKEgCTCNAMEgAWAtAMEgCyCdAMBgDGAK0BBgC2AK0BTwDtCgAABgDy
CKAHCgD/CUEDFgDcCUEDCgA1CUEDCgAEDUEDBgCcDKAHBgAWBA8LBgAQCkILBgAPCQMIGgDmAzwG
GgBHBDwGGgC0A+4HBgD7AyILEgAMAvwIEgBmA4IBEgBKCNAMEgDdCtAMBgDSAqAHBgDyBaAHBgCg
CaAHEgClCfwIEgAMA+oLBgDAAKAHSwBhCAAAHgDHApQJBgCoAK0BBgDeAqAHBgDiCKAHIgABALQK
IgAqALQKIgBNALQKDgB/AIwKDgAaAIwKZwCmDQAADgCQAIwKBgCzB6AHBgBtA6AHBgDlAqAHBgD5
DRgIAAAAAPcAAAAAAAEAAQABABAAuwcAABQAAQABAAEAEADOCQAAWQAKAAYAAQAQAOsJAABZAAoA
GgABABAA5gwAAGUACgAiAAEAEAAtDAAAaQAOACcAAQAQAOALAABpAA8AKwAAABAASQulC2kAEAA2
AAABEAAkDKULgQASADoAAQA2Co8BAQBSCo8BAQBxCo8BAQChCJMBAQC2CJMBAQDOCJMBAQAAApcB
AQDGB5cBAQADBpcBBgAtDJoBBgDgC54BBgDOCaIBBgDrCaYBAQD0DKoBAQD0DKoBEQCnB64BEQCk
A7IBEQAhArYBUCAAAAAAgQBNDroBAQAoIQAAAADGAJkFBgAEAFYiAAAAAMYApAUGAAQAlCIAAAAA
xgBxDAYABACkJQAAAACGGPgKBgAEAKwlAAAAAIYY+AoTAQQAtyUAAAAAhgh+A8EBBwDGJQAAAACG
CPQGxgEIAN0lAAAAAIYI6Q0BAAkA7CUAAAAAhggqB8YBCgADJgAAAACGCDEDEAALAA0mAAAAAIYI
3QbGAQwAJCYAAAAAhgifAsEBDQAzJgAAAACGCLoGxgEOAEomAAAAAIYIAg7BAQ8AWSYAAAAAhgg9
B8YBEABwJgAAAACGCIUCAQARAH8mAAAAAIYImQbGARIAliYAAAAAhghtAgEAEwClJgAAAACGCHoG
xgEUALwmAAAAAIYIGwkBABUAyyYAAAAAhggJB8YBFgDiJgAAAACGANYNBgAXAOomAAAAAIYAowwG
ABcA8iYAAAAAhgCmDJ0AFwCsJQAAAACGGPgKEwEXAPomAAAAAIYIMQMQABoAxiUAAAAAhgjdBsYB
GwAEJwAAAACGCB4OwQEcAOwlAAAAAIYIYAfGAR0A4iYAAAAAhgDWDQYAHgDqJgAAAACGAKMMBgAe
APImAAAAAIYApgydAB4AEycAAAAAhhj4CgYAHgAzJwAAAADGAVAMBgAeADUnAAAAAIEA4wEGAB4A
bCcAAAAAxgB9DcsBHgAzJwAAAADGAXEMBgAiAOsnAAAAAIYY+ArXASIA+icAAAAAhghSAUcBIwAb
KAAAAACGCBcBRwEjADwoAAAAAIYIQAFHASMAXSgAAAAAhhj4CtcBIwBsKAAAAACGCGABDwEkAJIo
AAAAAIYIMQIPASQAuCgAAAAAhgjRBw8BJADeKAAAAACGCBQGDwEkAAQpAAAAAIYIUQIPASQAKikA
AAAAhggmAQ8BJABQKQAAAACGCAABDwEkAHYpAAAAAIYI1AOdACQAnCkAAAAAhgjIAQ8BJADCKQAA
AACGCMMFDwEkAOgpAAAAAIMY+AoGACQA8CkAAAAAkwgMCt0BJAAcKgAAAACTCIwD4gEkACMqAAAA
AJMImAPnASQAKyoAAAAAlgjEDO0BJQAyKgAAAACGGPgKBgAlADoqAAAAAJEY/gryASUAAAABAPcB
AAACAF4MAAADAC0GAAABAAUKAAACAP8LAAADAEMJAAABAL0FAAABAL0FAAABAL0FAAABAL0FAAAB
AL0FAAABAL0FAAABAL0FAAABAL0FAAABAL0FAAABAL0FAAABAL0FAAABAL0FAAABAL0FAAABAL0F
AAABAL0FAAABAL0FAAABAAUKAAACAP8LAAADAEMJAAABAL0FAAABAL0FAAABAL0FAAABAL0FAAAB
AFYMAAACAAULAAADADkMAAAEAEMJAAABAAoNAAABAAoNAAABAL0FCQD4CgEAEQD4CgYAGQD4CgoA
KQD4ChAAMQD4ChAAOQD4ChAAQQD4ChAASQD4ChAAUQD4ChAAWQD4ChAAYQD4ChAAaQD4CgYA2QD4
CgYA+QD4ChUACQH4CgYAgQD4CiAAEQFiAycAgQBBDC4AIQGwBTQAEQE9DjwAMQHMAwYAyQCZBQYA
cQBvCEAAOQFWDkUAOQGODEsAyQCkBQYAcQCBCFIADAD4CgYAOQG+DH4AOQGVDIUAOQExBjwAOQGO
DIsAOQGVDJEAEQFqDQEAgQDACZgASQFlDJ0ASQHvBaEAiQAJA6YAUQGyDK0ADADdDbQADACOB7oA
DACXB8EADADfAcEASQG9AMkASQHaAZ0ADACFDM4AaQFCDdoAFAA9DQYAFADqCvUAHAAUDQQBOQH5
BQkBHACJDZ0AqQC7Ag8BsQD4ChMBsQCXBx0BsQCGBwEAgQH4ChAAsQDWDQYAsQCjDAYAsQCmDJ0A
yQD4CgYAyQB2AScByQATDC4B0QD4CgYAyQCOATQBiQEqCDoBkQEWA0ABmQEgCkcByQDUC0wBoQGO
B1IByQDBDVkBqQGSDV8ByQH3AmYByQH1DW8B4QD4CnUBAQH4CgYALgALABoCLgATACMCLgAbAEIC
LgAjAEsCLgArAHQCLgAzAHQCLgA7AHQCLgBDAEsCLgBLAHoCLgBTAHQCLgBbAJECQwBjANkCAwFr
ANkCQQJ7ANkCSQRzAEICaQRzAEICGwBXACMBAwABAAQAEQAGABUABwAYAAgAIgAJACQAAACCA/YB
AAD4BvoBAADtDf4BAAAuB/oBAAA1AwICAADhBvoBAACjAvYBAAC+BvoBAAAlDvYBAABnB/oBAACJ
Av4BAACdBvoBAABxAv4BAAB+BvoBAAAfCf4BAAANB/oBAAA1AwICAADhBvoBAAAiDvYBAABkB/oB
AABWAQYCAAAbAQYCAABEAQYCAABkAQICAAA1AgICAADVBwICAAAYBgICAABVAgICAAAqAQICAAAE
AQICAADYA/oBAADMAQICAADHBQICAAAQCgsCAACsAxACAADIDBUCAQAHAAMAAQAIAAUAAQAJAAcA
AQAKAAkAAQALAAsAAQAMAA0AAQANAA8AAQAOABEAAQAPABMAAQAQABUAAQARABcAAQASABkAAQAT
ABsAAQAUAB0AAQAVAB8AAQAWACEAAQAbACMAAQAcACUAAQAdACcAAQAeACkAAgAoACsAAgApAC0A
AgAqAC8AAgAsADEAAgAtADMAAgAuADUAAgAvADcAAgAwADkAAgAxADsAAgAyAD0AAgAzAD8AAgA0
AEEAAgA1AEMAAgA3AEUAAgA4AEcAAQA5AEcAAgA6AEkAdwDvAP4ABIAAAAEAAACaGH9iAAAAAAAA
0wAAAAQAAAAAAAAAAAAAAH0BpAEAAAAACwAAAAAAAAAAAAAAhgEgDQAAAAALAAAAAAAAAAAAAACG
AU0JAAAAAAQAAAAAAAAAAAAAAH0BggEAAAAACwAAAAAAAAAAAAAAhgFJDQAAAAAEAAAAAAAAAAAA
AAB9AaAHAAAAAAQAAAAAAAAAAAAAAH0BcgMAAAAACwAAAAAAAAAAAAAAhgFwCQAAAAAAAAAAAQAA
AFMLAABfAOsAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRT
UnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJ
RFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29u
dGV4dDEwMABJRW51bWVyYWJsZWAxAExpc3RgMQBHZXRJbnQzMgBEaWN0aW9uYXJ5YDIAU0NfMmY3
NTQ2NTI5MGY0NGQ1OTg1ODBkNzhkZDE2MTU4ZTcAPE1vZHVsZT4AZ2V0X2NmZ3RwbENNUGxhdGZv
cm1EQgBnZXRfUGxhdGZvcm1EQgBnZXRfY2ZndHBsQ01EYXRhaGFuZGxlckRCAGdldF9EYXRhaGFu
ZGxlckRCAGdldF9Qcm9qZWN0REIAZ2V0X2NmZ3NsYUNvbXBvbmVudElEAEdldE91dHB1dElEAFN5
c3RlbS5EYXRhAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlv
bnMuR2VuZXJpYwBnZXRfdGhpc0NvbXBhbnlJZABSZWFkAEFkZABNYXJrT3V0cHV0c0ZpbmlzaGVk
AHNvdXJjZWlkAGNvbXBvbmVudGlkAERiQ29tbWFuZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5j
ZQBnZXRfY2Znc2xhRGF0YWhhbmRsZXJEYXRhU291cmNlAGdldF9jZmdzbGFQcm9qZWN0RGF0YVNv
dXJjZQBzZXRfdG90YWxmYW1pbGllc2lubm9kZQBzZXRfY29tcGFueWZhbWlsaWVzaW5ub2RlAHNl
dF9mcmFjdGlvbm9mY29tcGFueWlubm9kZQBnZXRfTWVzc2FnZQBFbnVtZXJhYmxlAElEaXNwb3Nh
YmxlAERvdWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBHZXRTcWxTaW5n
bGUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAc2V0X2NvbXBhbnluYW1lAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAHNldF9Db21tYW5kVHlwZQBTeXN0ZW0uQ29yZQBzZXRfbm9k
ZXNjb3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBEaXNwb3NlAGdldF90aGlzQWdncmVnYXRlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1
Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVu
dEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAQWRkV2l0aFZhbHVlAHZh
bHVlAGdldF90aGlzTm9ybWFsaXplAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5n
AFN1YnN0cmluZwBwcmpTb3VyY2VDYXRhbG9nAGdldF9jZmdzbGFQcm9qZWN0Q2F0YWxvZwBtc2cA
Z2V0X0xlbmd0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMmY3NTQ2NTI5MGY0NGQ1OTg1ODBk
NzhkZDE2MTU4ZTcuZGxsAHNldF90b3RhbGZhbWlsaWVzaW5ub2RlX0lzTnVsbABzZXRfY29tcGFu
eWZhbWlsaWVzaW5ub2RlX0lzTnVsbABzZXRfZnJhY3Rpb25vZmNvbXBhbnlpbm5vZGVfSXNOdWxs
AHNldF9jb21wYW55bmFtZV9Jc051bGwAc2V0X25vZGVzY29yZV9Jc051bGwAc2V0X3RvdGFsY29t
cGFueXBvcnRmb2xpb19Jc051bGwAc2V0X25vZGVrZXlfSXNOdWxsAHNldF9mcmFjdGlvbm9mbm9k
ZWJ5Y29tcGFueV9Jc051bGwAc2V0X3N1bWZyYWN0aW9ub2Zub2RlYnljb21wYW55X0lzTnVsbABT
ZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBCb29sZWFuAFNjcmlw
dE1haW4AZHRoVmVyc2lvbgBnZXRfY2Znc2xhRGF0YWhhbmRsZXJWZXJzaW9uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50
aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBLZXlDb2xsZWN0
aW9uAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24AbXlQ
bGF0Zm9ybUNvbm5lY3Rpb24AbXlEYXRhaGFuZGxlckNvbm5lY3Rpb24AbXlQcm9qZWN0Q29ubmVj
dGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJl
SW5mbwBzZXRfdG90YWxjb21wYW55cG9ydGZvbGlvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQ
aXBlbGluZVdyYXAAU3lzdGVtLkxpbnEAQ2hhcgBEYkRhdGFSZWFkZXIAU3FsRGF0YVJlYWRlcgBF
eGVjdXRlUmVhZGVyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU3VtT2ZGcmFjdGlvbkJ1
ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFn
ZXIAbXlQbGF0Zm9ybUNvbm5lY3Rpb25NYW5hZ2VyAG15RGF0YWhhbmRsZXJDb25uZWN0aW9uTWFu
YWdlcgBteVByb2plY3RDb25uZWN0aW9uTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5S
dW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBT
cWxQYXJhbWV0ZXIAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5E
aWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJj
ZXMAU0NfMmY3NTQ2NTI5MGY0NGQ1OTg1ODBkNzhkZDE2MTU4ZTcuUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzJmNzU0NjUyOTBmNDRkNTk4NTgwZDc4ZGQx
NjE1OGU3LlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAFN5c3RlbS5EYXRhLlNxbFR5
cGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBDb25uZWN0
aW9ucwBCdWZmZXJzAGdldF9QYXJhbWV0ZXJzAEZpbmlzaE91dHB1dHMAc3RhdHVzAGdldF9IYXNS
b3dzAENyZWF0ZU5ld091dHB1dFJvd3MAZ2V0X0tleXMAQ29uY2F0AEZvcm1hdABPYmplY3QAU2V0
RW5kT2ZSb3dzZXQAb3BfRXhwbGljaXQAU3BsaXQAZ2V0X0RlZmF1bHQAU3lzdGVtLkRhdGEuU3Fs
Q2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRf
Q3VycmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AFNvcnQAVG9MaXN0AE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AHNldF9Db21tYW5kVGltZW91dABQcmltZU91dHB1dABN
b3ZlTmV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdl
dF9FdmFsdWF0b3JDb250ZXh0AEFkZFJvdwBDb250YWluc0tleQBzZXRfbm9kZWtleQBnZXRfQXNz
ZW1ibHkAc2V0X2ZyYWN0aW9ub2Zub2RlYnljb21wYW55AHNldF9zdW1mcmFjdGlvbm9mbm9kZWJ5
Y29tcGFueQBFeGVjdXRlTm9uUXVlcnkATG9nRW50cnkAb3BfRXF1YWxpdHkAAAAAIW4AbABoAC4A
bABvAGcAXwBhAGQAZABFAG4AdAByAHkAABVAAGMAbwBtAHAAbwBuAGUAbgB0AAAxUwBjAG8AcgBl
AEwAYQBuAGQAcwBjAGEAcABlAE4AbwBkAGUAcwAuAGQAdABzAHgAABlAAHMAbwB1AHIAYwBlAF8A
dAB5AHAAZQAADVMAQwBSAEkAUABUAAAZQABzAG8AdQByAGMAZQBfAG4AYQBtAGUAAClDAG8AbQBw
AGEAbgB5ACAATgBvAGQAZQAgAFMAYwBvAHIAaQBuAGcAABVAAHMAbwB1AHIAYwBlAF8AaQBkAAAR
QABtAGUAcwBzAGEAZwBlAAAPQABhAGMAdABpAG8AbgAAD0UAWABFAEMAVQBUAEUAAA9AAHMAdABh
AHQAdQBzAAAPVwBBAFIATgBJAE4ARwAAY1UAcwBpAG4AZwAgAGwAbwBjAGEAbAAgAGQAYQB0AGEA
IABtAG8AZABlAC4AIABDAHIAbwBzAHMALQBzAGUAcgB2AGUAcgAgAHMAdwBpAHQAYwBoAGUAZAAg
AG8AZgBmAC4AAW9VAHMAaQBuAGcAIABjAHIAbwBzAHMALQBzAGUAcgB2AGUAcgAgAGQAYQB0AGEA
IABtAG8AZABlAC4AIABDAHIAbwBzAHMALQBzAGUAcgB2AGUAcgAgAHMAdwBpAHQAYwBoAGUAZAAg
AG8AbgAuAAEDLgAAAQALJwB7ADAAfQAnAAEPLAAgACcAewAwAH0AJwABgIcgAEoATwBJAE4AIAB7
ADAAfQAuAHAAYQB0AGUAbgB0AF8AYwBsAGEAcwBzAF8AbABpAG4AZQBhAGcAZQAgAGMAbAAgAE8A
TgAgAGMAbAAuAGMAaABpAGwAZABfAGMAbABhAHMAcwBfAGkAZAA9AGEAZgAuAGMAbABhAHMAcwBf
AGkAZAAgAAAfYQBnAGcAcgBlAGcAYQB0AGUAXwBuAF8AZgBhAG0AAIDNIABKAE8ASQBOACAAewAw
AH0ALgBwAGEAdABlAG4AdABfAGMAbABhAHMAcwBfAGwAaQBuAGUAYQBnAGUAIABjAGwAIABPAE4A
IABjAGwALgBjAGgAaQBsAGQAXwBjAGwAYQBzAHMAXwBpAGQAPQBhAGYALgBjAGwAYQBzAHMAXwBp
AGQAIABBAE4ARAAgAGMAbAAuAHAAYQByAGUAbgB0AF8AYwBsAGEAcwBzAF8AaQBkAD0AYQBmAC4A
YwBsAGEAcwBzAF8AaQBkACAAAAtuAF8AZgBhAG0AAJLlVwBJAFQASAAgAGEAZgAgACgAYwBvAG0A
cABhAG4AeQBfAG4AYQBtAGUALAAgAHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQALAAg
AGMAbABhAHMAcwBfAGkAZAApACAAQQBTACAAKAAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwBlAGwAZQBj
AHQAIABkAGkAcwB0AGkAbgBjAHQACgAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYwBiAC4AYwBvAG0AcABh
AG4AeQBfAG4AYQBtAGUACgAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALAAgAGEAZgAuAHAAYQB0AGUAbgB0
AF8AZgBhAG0AaQBsAHkAXwBpAGQACgAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALAAgAGMAbAAuAHAAYQBy
AGUAbgB0AF8AYwBsAGEAcwBzAF8AaQBkAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABmAHIAbwBtAAoACQAJ
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgAHsAMQB9AC4AYwBvAG0AcABhAG4AeQBfAGIAYQBzAGkAYwAgAGMAYgAg
AEoATwBJAE4ACgAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAewAxAH0ALgBjAG8AbQBwAGEAbgB5AF8AcABh
AHQAZQBuAHQAXwBmAGEAbQBpAGwAeQAgAGEAYgAgAE8ATgAgAGMAYgAuAGIAdgBkAF8AaQBkAD0A
YQBiAC4AYgB2AGQAXwBpAGQAIABKAE8ASQBOAAoACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHsAMQB9AC4A
cABhAHQAZQBuAHQAXwBmAGEAbQBpAGwAeQBfAGMAbABhAHMAcwAgAGEAZgAgAE8ATgAgAGEAZgAu
AHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQAPQBhAGIALgBwAGEAdABlAG4AdABfAGYA
YQBtAGkAbAB5AF8AaQBkAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHsAMwB9AAoA
CQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAB3AGgAZQByAGUACgAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYwBiAC4AYgB2
AGQAXwBpAGQAIABJAE4AIAAoAHsAMAB9ACkACgAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAKQAgAAoAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAUwBFAEwARQBDAFQACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGYALgBjAG8AbQBwAGEA
bgB5AF8AbgBhAG0AZQAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALAAgAGYALgBjAGwAYQBzAHMAXwBpAGQA
CgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACwAIAB0AG8AdABhAGwAXwBjAG8AbQBwAGEAbgB5AF8AcABvAHIA
dABmAG8AbABpAG8ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACwAIABjAC4AewA0AH0AIABhAHMAIAB0AG8A
dABhAGwAXwBmAGEAbQBpAGwAaQBlAHMAXwBpAG4AXwBjAGwAYQBzAHMACgAJACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACwAIABjAG8AdQBuAHQAKABkAGkAcwB0AGkAbgBjAHQAIABwAGEAdABlAG4AdABfAGYAYQBt
AGkAbAB5AF8AaQBkACkAIABhAHMAIABjAG8AbQBwAGEAbgB5AF8AZgBhAG0AaQBsAGkAZQBzAF8A
aQBuAF8AYwBsAGEAcwBzAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAsACAAYwBhAHMAdAAoAGMAbwB1AG4A
dAAoAGQAaQBzAHQAaQBuAGMAdAAgAHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQAKQAg
AGEAcwAgAHIAZQBhAGwAKQAgAC8AIABjAGEAcwB0ACgAYwAuAHsANAB9ACAAYQBzACAAcgBlAGEA
bAApACAAYQBzACAAZgByAGEAYwB0AGkAbwBuAF8AbwBmAF8AYwBsAGEAcwBzAF8AYgB5AF8AYwBv
AG0AcABhAG4AeQAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALAAgAGMAYQBzAHQAKABjAG8AdQBuAHQAKABk
AGkAcwB0AGkAbgBjAHQAIABwAGEAdABlAG4AdABfAGYAYQBtAGkAbAB5AF8AaQBkACkAIABhAHMA
IAByAGUAYQBsACkAIAAvACAAYwBhAHMAdAAoAHQAZgAuAHQAbwB0AGEAbABfAGMAbwBtAHAAYQBu
AHkAXwBwAG8AcgB0AGYAbwBsAGkAbwAgAGEAcwAgAHIAZQBhAGwAKQAgAGEAcwAgAGYAcgBhAGMA
dABpAG8AbgBfAG8AZgBfAGMAbwBtAHAAYQBuAHkAXwBpAG4AXwBjAGwAYQBzAHMACgAJACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACwAIABjAGEAcwB0ACgAMQAuADAAIABhAHMAIAByAGUAYQBsACkAIABhAHMAIABk
AHUAbQBtAHkACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNAAoACQAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAGYA
IABmACAASgBPAEkATgAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAewAxAH0ALgBwAGEAdABlAG4AdABfAGMA
bABhAHMAcwAgAGMAIABPAE4AIABjAC4AYwBsAGEAcwBzAF8AaQBkAD0AZgAuAGMAbABhAHMAcwBf
AGkAZAAgAEoATwBJAE4ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACgAcwBlAGwAZQBjAHQAIABjAG8AbQBw
AGEAbgB5AF8AbgBhAG0AZQAsACAAYwBvAHUAbgB0ACgAZABpAHMAdABpAG4AYwB0ACAAcABhAHQA
ZQBuAHQAXwBmAGEAbQBpAGwAeQBfAGkAZAApACAAYQBzACAAdABvAHQAYQBsAF8AYwBvAG0AcABh
AG4AeQBfAHAAbwByAHQAZgBvAGwAaQBvACAAZgByAG8AbQAgAGEAZgAgAGcAcgBvAHUAcAAgAGIA
eQAgAGMAbwBtAHAAYQBuAHkAXwBuAGEAbQBlACkAIAB0AGYAIABPAE4AIAB0AGYALgBjAG8AbQBw
AGEAbgB5AF8AbgBhAG0AZQA9AGYALgBjAG8AbQBwAGEAbgB5AF8AbgBhAG0AZQAKACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgAFcASABFAFIARQAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAZgAuAGMAbABhAHMAcwBfAGkAZAAg
AEkATgAgACgAIABzAGUAbABlAGMAdAAgAG4AbwBkAGUAXwBrAGUAeQAgAGYAcgBvAG0AIAB7ADIA
fQAuAGQAYgBvAC4AbABzAF8AbgBvAGQAZQAgACAAKQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEcAUgBPAFUA
UAAgAEIAWQAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAZgAuAGMAbwBtAHAAYQBuAHkAXwBuAGEAbQBlAAoA
CQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAsACAAZgAuAGMAbABhAHMAcwBfAGkAZAAKAAkAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAALAAgAHQAZgAuAHQAbwB0AGEAbABfAGMAbwBtAHAAYQBuAHkAXwBwAG8AcgB0AGYAbwBsAGkA
bwAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAALAAgAGMALgB7ADQAfQAKACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8AUgBE
AEUAUgAgAEIAWQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAZgAuAGMAbwBtAHAAYQBuAHkAXwBu
AGEAbQBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAAElTAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAgAHIAZQBh
AGQAIAB7ADAAfQAgAG4AdQBtAGIAZQByACAAbwBmACAAcgBvAHcAcwAAD1MAVQBDAEMARQBTAFMA
ACVOAG8AIAByAG8AdwBzACAAdwBlAHIAZQAgAGEAZABkAGUAZAAAD0YAQQBJAEwAVQBSAEUAAICb
SQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0
ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8A
IAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAw
AAAbUwB1AG0ATwBmAEYAcgBhAGMAdABpAG8AbgAAE1AAcgBvAGoAZQBjAHQARABCAAAVUABsAGEA
dABmAG8AcgBtAEQAQgAAG0QAYQB0AGEAaABhAG4AZABsAGUAcgBEAEIAACdjAGYAZwBfAHMAbABh
AF8AQwBvAG0AcABvAG4AZQBuAHQASQBEAAA7YwBmAGcAXwBzAGwAYQBfAEQAYQB0AGEAaABhAG4A
ZABsAGUAcgBEAGEAdABhAFMAbwB1AHIAYwBlAAA1YwBmAGcAXwBzAGwAYQBfAEQAYQB0AGEAaABh
AG4AZABsAGUAcgBWAGUAcgBzAGkAbwBuAAAtYwBmAGcAXwBzAGwAYQBfAFAAcgBvAGoAZQBjAHQA
QwBhAHQAYQBsAG8AZwAAM2MAZgBnAF8AcwBsAGEAXwBQAHIAbwBqAGUAYwB0AEQAYQB0AGEAUwBv
AHUAcgBjAGUAAC9jAGYAZwBfAHQAcABsAF8AQwBNAEQAYQB0AGEAaABhAG4AZABsAGUAcgBEAEIA
ACljAGYAZwBfAHQAcABsAF8AQwBNAFAAbABhAHQAZgBvAHIAbQBEAEIAAB10AGgAaQBzAF8AQQBn
AGcAcgBlAGcAYQB0AGUAAB10AGgAaQBzAF8AQwBvAG0AcABhAG4AeQBJAGQAAB10AGgAaQBzAF8A
TgBvAHIAbQBhAGwAaQB6AGUAAHFTAEMAXwAyAGYANwA1ADQANgA1ADIAOQAwAGYANAA0AGQANQA5
ADgANQA4ADAAZAA3ADgAZABkADEANgAxADUAOABlADcALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAAAU3pVCizS9QpH8EEVAPAzTAAQgAQEIAyAAAQUgAQEREQQgAQEO
BSABARF5BAcBEkEGIAIBDhI9BiABARGAjQUgABKAkQcgAhKAlQ4cAyAACAQgARwcBQACAg4OBgAD
Dg4ODgQgAQEcHwcQEkUOFRJJAg4NHQ4ODg4SQQgIDg4NFRFRAQ4OElUGFRJJAg4NBiABHQ4dAwUA
Ag4OHAUAAg4ODgYAAg4OHRwEIAASRQMgAAIEIAEOCAYgARGAqQgGAAEMEYCpBSABAhMABiABEwET
AAcgAgETABMBBCABCAgLIAAVEoCxAhMAEwEQEAEBFRJNAR4AFRKAuQEeAAMKAQ4FFRJNAQ4IIAAV
EVEBEwAFFRFRAQ4EIAATAAUgAg4ICAMgAA4JIAMBEl0dCBJhBSACAQgcAwcBCAYAAggSYQ4FIAEd
CAgFIAASgMUFIAASgMkGIAESgM0OBCAAEjkFIAASgNEGIAESgNUcBQAAEoDZBiABHBKA3QgAARKA
5RGA6QUgABKA7QcgAgEOEoDtCLd6XFYZNOCJCImEXc2AgMyRAwYSOQMGEj0CBg4DBhIYAwYSHAMG
EgwDBhIQAwYSZQMGEnEDBhJ1AwYSJAYgAwEODg4EIAEBDQQgAQECCyAEAQgdCB0SXRJhBSABARJl
BAAAEnEEAAASdQUAAQESdQQAABIkAwAAAQMoAA0DKAACAygACAMoAA4EKAASOQQIABJxBAgAEnUE
CAASJAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U0NfMmY3NTQ2NTI5MGY0NGQ1OTg1ODBkNzhkZDE2MTU4ZTcAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAxNgAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRAuTkVUIEZyYW1ld29yayA0BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADoYgAAAAAAAAAAAAAC
YwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9GIAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAA
AAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAAAaBAAAAAAAAAAAAAAaBDQA
AABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAf2KaGAAAAQB/
YpoYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYA
bwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBu
AGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0A
bQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwAyAGYANwA1ADQANgA1ADIA
OQAwAGYANAA0AGQANQA5ADgANQA4ADAAZAA3ADgAZABkADEANgAxADUAOABlADcAAAA+AA8AAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAyADkAOAAuADIANQAyADEANQAAAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAyAGYANwA1ADQANgA1ADIAOQAw
AGYANAA0AGQANQA5ADgANQA4ADAAZAA3ADgAZABkADEANgAxADUAOABlADcALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADEANgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADIAZgA3ADUANAA2
ADUAMgA5ADAAZgA0ADQAZAA1ADkAOAA1ADgAMABkADcAOABkAGQAMQA2ADEANQA4AGUANwAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAyAGYANwA1ADQANgA1
ADIAOQAwAGYANAA0AGQANQA5ADgANQA4ADAAZAA3ADgAZABkADEANgAxADUAOABlADcAAABCAA8A
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMgA5ADgALgAyADUAMgAx
ADUAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYA
MgA5ADgALgAyADUAMgAxADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABgAAAMAAAAFDMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_2f75465290f44d598580d78dd16158e7</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerDataSource,User::cfg_sla_DatahandlerVersion,User::cfg_sla_ProjectCatalog,User::cfg_sla_ProjectDataSource,User::cfg_tpl_CMDatahandlerDB,User::cfg_tpl_CMPlatformDB,User::this_Aggregate,User::this_CompanyId,User::this_Normalize</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">93359d2f5932ec6013d036b3dbc73ae1</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">b0a140c8d82a145b70ee2f2d1ebc03f7cc2b0c9e</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Connections[ProjectDB]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB - ADO.NET]"
                          name="ProjectDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Connections[PlatformDB]"
                          connectionManagerID="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          name="PlatformDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Connections[DatahandlerDB]"
                          connectionManagerID="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          name="DatahandlerDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0]"
                          hasSideEffects="true"
                          isSorted="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[node_score]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[node_score]"
                              name="node_score" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[node_key]"
                              name="node_key" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[company_name]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[company_name]"
                              name="company_name"
                              sortKeyPosition="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[fraction_of_company_in_node]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[fraction_of_company_in_node]"
                              name="fraction_of_company_in_node" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[fraction_of_node_by_company]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[fraction_of_node_by_company]"
                              name="fraction_of_node_by_company" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[company_families_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[company_families_in_node]"
                              name="company_families_in_node" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[total_families_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[total_families_in_node]"
                              name="total_families_in_node" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[total_company_portfolio]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[total_company_portfolio]"
                              name="total_company_portfolio" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[SumOfFraction]"
                          hasSideEffects="true"
                          isSorted="true"
                          name="SumOfFraction">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[SumOfFraction].Columns[company_name]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[SumOfFraction].Columns[company_name]"
                              name="company_name"
                              sortKeyPosition="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[SumOfFraction].Columns[sum_fraction_of_node_by_company]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[SumOfFraction].Columns[sum_fraction_of_node_by_company]"
                              name="sum_fraction_of_node_by_company" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input].Columns[company_name]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="company_name"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[company_name]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input].Columns[node_score]"
                              cachedDataType="r8"
                              cachedName="node_score"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[node_score]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input].Columns[fraction_of_company_in_node]"
                              cachedDataType="r8"
                              cachedName="fraction_of_company_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[fraction_of_company_in_node]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input].Columns[fraction_of_node_by_company]"
                              cachedDataType="r8"
                              cachedName="fraction_of_node_by_company"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[fraction_of_node_by_company]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input].Columns[company_families_in_node]"
                              cachedDataType="i4"
                              cachedName="company_families_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0].Columns[company_families_in_node]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Right Input].Columns[company_name]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="company_name"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[SumOfFraction].Columns[company_name]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Right Input].Columns[sum_fraction_of_node_by_company]"
                              cachedDataType="r8"
                              cachedName="sum_fraction_of_node_by_company"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[SumOfFraction].Columns[sum_fraction_of_node_by_company]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[node_key]"
                              name="node_key">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input].Columns[node_key]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[company_name]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[company_name]"
                              name="company_name"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input].Columns[company_name]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[node_score]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[node_score]"
                              name="node_score">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input].Columns[node_score]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_company_in_node]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_company_in_node]"
                              name="fraction_of_company_in_node">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input].Columns[fraction_of_company_in_node]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_node_by_company]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[fraction_of_node_by_company]"
                              name="fraction_of_node_by_company">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input].Columns[fraction_of_node_by_company]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[company_families_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[company_families_in_node]"
                              name="company_families_in_node">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input].Columns[company_families_in_node]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[sum_fraction_of_node_by_company]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[sum_fraction_of_node_by_company]"
                              name="sum_fraction_of_node_by_company">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Right Input].Columns[sum_fraction_of_node_by_company]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Outputs[Multicast Output 4]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 4"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Outputs[Multicast Output 5]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 5"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_score_numeric]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[score_value]"
                              cachedDataType="numeric"
                              cachedName="score_value"
                              cachedPrecision="30"
                              cachedScale="10"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[score_value]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[score_view]"
                              cachedDataType="i4"
                              cachedName="score_view"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[score_view]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[series_key]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="series_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[series_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[series_group]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="series_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[series_group]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[score_group]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="score_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[score_group]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              dataType="wstr"
                              length="100"
                              name="node_score_view" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              dataType="numeric"
                              name="node_score_value"
                              precision="30"
                              scale="10" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="String score"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_score_str]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].Columns[score_group]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="score_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[score_group]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].Columns[string_series_group]"
                              cachedDataType="wstr"
                              cachedLength="5"
                              cachedName="string_series_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[string_series_group]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].Columns[series_key]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="series_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[series_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].Columns[score_view]"
                              cachedDataType="i4"
                              cachedName="score_view"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[score_view]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].Columns[string_series_value]"
                              cachedDataType="wstr"
                              cachedLength="500"
                              cachedName="string_series_value"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output].Columns[string_series_value]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              dataType="wstr"
                              length="100"
                              name="node_score_view" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              dataType="nText"
                              name="node_score_value" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Row Count.Inputs[Row Count Input 1]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[Merge Join Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[Multicast Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Multicast Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[Multicast Output 2]"
                      endId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Inputs[Conditional Split Input]"
                      name="Multicast Output 2"
                      startId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[No normalization]"
                      endId="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score.Inputs[OLE DB Destination Input]"
                      name="No normalization"
                      startId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split.Outputs[No normalization]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[Output 0]"
                      endId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Left Input]"
                      name="Output 0"
                      startId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[Output 0]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast.Inputs[Multicast Input 1]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Row Count.Outputs[Row Count Output 1]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[SumOfFraction]"
                      endId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join.Inputs[Merge Join Right Input]"
                      name="SumOfFraction"
                      startId="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile.Outputs[SumOfFraction]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Decode object"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{E2F723A4-D652-485B-A3EA-C2227FA2039B}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Decode object"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_a3bfeab8706d4f96a9dfa48a324b87cd"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMDatahandlerDB,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_CMProjectDB,User::cfg_tpl_jsonConfiguration,System::PackageName,User::this_ScoreLandscapeNodesParams"
                  ReadWriteVariables="User::this_Aggregate,User::this_BagOfWords,User::this_CompanyId,User::this_Normalize,User::this_ScoreGroup,User::this_ScoringLabel,User::this_ScoringType,User::this_SeriesGroup,User::this_TopicName">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Reflection;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig.Params;
#endregion

namespace ST_adb8bbf362354cf985607e70fb6e5c4a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion



        public void Main()
        {
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetupLogger();
                deloitte.SetNonNullUserVariablesFor<ScoreLandscapeNodesParam>("User::this_ScoreLandscapeNodesParams");
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_a3bfeab8706d4f96a9dfa48a324b87cd.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7E4E04AB-381B-468A-9906-8E6E771FB638}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a3bfeab8706d4f96a9dfa48a324b87cd</RootNamespace>
    <AssemblyName>ST_a3bfeab8706d4f96a9dfa48a324b87cd</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\pbaljon\Documents\source\PRV\packages\Newtonsoft.Json.7.0.1\lib\net40\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_a3bfeab8706d4f96a9dfa48a324b87cd</msb:CodeName>
		<msb:DisplayName>ST_a3bfeab8706d4f96a9dfa48a324b87cd</msb:DisplayName>
		<msb:ProjectId>{0377A197-55C2-4092-822E-51B411452CB0}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_a3bfeab8706d4f96a9dfa48a324b87cd.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3bfeab8706d4f96a9dfa48a324b87cd.Properties.Settings.get_Default():ST_a3bfeab8706d4f96a9dfa48a324b87cd.Properties.Sett" +
    "ings")]

namespace ST_a3bfeab8706d4f96a9dfa48a324b87cd.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a3bfeab8706d4f96a9dfa48a324b87cd")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a3bfeab8706d4f96a9dfa48a324b87cd")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3bfeab8706d4f96a9dfa48a324b87cd.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3bfeab8706d4f96a9dfa48a324b87cd.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3bfeab8706d4f96a9dfa48a324b87cd.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a3bfeab8706d4f96a9dfa48a324b87cd.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a3bfeab8706d4f96a9dfa48a324b87cd.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_a3bfeab8706d4f96a9dfa48a324b87cd.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOkyCFkAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAQi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPAtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAASA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAk
LgAAAAAAAEgAAAACAAUADCEAACwMAAABAAAAAAAAADgtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgA2AAAAAQAAEQIoEAAACnMRAAAKCgZvEgAACgZyAQAA
cG8BAAAr3goGLAYGbxQAAArcAigQAAAKFm8VAAAKKgAAARAAAAIADAATHwAKAAAAAB4CKBYAAAoq
HgIoFwAACiqufgEAAAQtHnJLAABw0AMAAAIoGAAACm8ZAAAKcxoAAAqAAQAABH4BAAAEKhp+AgAA
BCoeAoACAAAEKhp+AwAABCoeAigbAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAzAMAACN+AAA4BAAAvAUAACNTdHJpbmdzAAAAAPQJAADAAAAAI1VT
ALQKAAAQAAAAI0dVSUQAAADECgAAaAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQsAAAD6ATMAFgAA
AQAAAB4AAAAFAAAABgAAAAkAAAABAAAAGwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAE
AAAAAQAAAAEAAAABAAAAAABtAwEAAAAAAAYAFQJ0BAYApAJ0BAYAYQFhBA8A6AQAAAYAjgH7AwYA
+AH7AwYA2QH7AwYAiwL7AwYANQL7AwYATgL7AwYApQH7AwYAwAHIAgoAaQIcAwoA2AAcAw4AoAXi
AgYAtQOuAwYARAFhBAYAfgWuAwYAHQSUBAYADQTmAxIAFAFXAxIAdQFXAxIA9ADRAwYAKQF0BAoA
RQMcAw4AlQMvBQYAcwCuAwYAowCuAwYAfwCuAwYAswX7AwAAAAABAAAAAAABAAEAAQAQAMYDEgA5
AAEAAQAAABAAmwT3BEkAAQADAAABEAAmBfcEXQADAAcAAwEAAHAFAABBAAQACgARALoDbgARAMgA
cgARAGMAdgAGBgoAegBWgGAFfQBWgKgAfQBQIAAAAACGAMwDBgABAKQgAAAAAIYYVAQGAAEArCAA
AAAAgxhUBAYAAQC0IAAAAACTCBkEgQABAOAgAAAAAJMIsACGAAEA5yAAAAAAkwi8AIsAAQDvIAAA
AACWCIUFkQACAPYgAAAAAIYYVAQGAAIA/iAAAAAAkRhaBJYAAgAAAAEAwgIJAFQEAQARAFQEBgAZ
AFQECgApAFQEEAAxAFQEEAA5AFQEEABBAFQEEABJAFQEEABRAFQEEABZAFQEEABhAFQEEABpAFQE
BgCJAFQEBgCxAFQEFQDBAFQEBgBxAGgFIAB5AFQEJQB5AC0EBgB5ADkEKwDZAAwBBgDJAJEFAQBx
AFQEBgCRAFQEBgDhAJEANgDhAK8FPQCZAFQEQgC5AFQEBgAIABQAZAAIABgAaQApAHMA0QAuAAsA
qQAuABMAsgAuABsA0QAuACMA2gAuACsAAwEuADMAAwEuADsAAwEuAEMA2gAuAEsACQEuAFMAAwEu
AFsAIAFDAGMAaQBJAHMA0QBhAHsAaQBjAGsAaQAbAAMAAQAEAAMAAAAdBJoAAADQAJ8AAACJBaQA
AgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAAC7GIRBAAAAAAAAPwAAAAQAAAAAAAAAAAAA
AEkANgAAAAAACwAAAAAAAAAAAAAAUgD9AgAAAAADAAAAAAAAAAAAAABbAOICAAAAAAQAAAAAAAAA
AAAAAEkArgMAAAAAAAAAAAEAAAClBAAABQACACcAMQAAAAAAADxNb2R1bGU+AHZhbHVlX18AU1Rf
YWRiOGJiZjM2MjM1NGNmOTg1NjA3ZTcwZmI2ZTVjNGEAbXNjb3JsaWIAU1RfYTNiZmVhYjg3MDZk
NGY5NmE5ZGZhNDhhMzI0Yjg3Y2QAZGVmYXVsdEluc3RhbmNlAElEaXNwb3NhYmxlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARGVsb2l0dGUuUGlwZWxpbmVGcmFtZXdv
cmsATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFNUX2EzYmZlYWI4NzA2ZDRmOTZhOWRmYTQ4YTMyNGI4N2NkLmRsbABTY29yZUxhbmRzY2FwZU5v
ZGVzUGFyYW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmln
dXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5m
bwBnZXRfUmVzb3VyY2VNYW5hZ2VyAFNldHVwTG9nZ2VyAFNldE5vbk51bGxVc2VyVmFyaWFibGVz
Rm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2EzYmZlYWI4NzA2ZDRmOTZhOWRmYTQ4YTMy
NGI4N2NkLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9h
M2JmZWFiODcwNmQ0Zjk2YTlkZmE0OGEzMjRiODdjZC5Qcm9wZXJ0aWVzAFNldHRpbmdzAERlbG9p
dHRlLlBpcGVsaW5lRnJhbWV3b3JrLlBsYXRmb3JtQ29uZmlnLlBhcmFtcwBTdWNjZXNzAGdldF9E
dHMAU2NyaXB0UmVzdWx0cwBPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQARGVsb2l0
dGVTY3JpcHQAZ2V0X0Fzc2VtYmx5AABJVQBzAGUAcgA6ADoAdABoAGkAcwBfAFMAYwBvAHIAZQBM
AGEAbgBkAHMAYwBhAHAAZQBOAG8AZABlAHMAUABhAHIAYQBtAHMAAHFTAFQAXwBhADMAYgBmAGUA
YQBiADgANwAwADYAZAA0AGYAOQA2AGEAOQBkAGYAYQA0ADgAYQAzADIANABiADgANwBjAGQALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAIV9bs0mLShCkji0h1WK
gk4ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVUEBwESPQQgABJlBSABARJlBTABAQEOBAoBEmkG
AAEScRF1BCAAEnkGIAIBDhJ5CLd6XFYZNOCJCImEXc2AgMyRCPkCOjYN6EsMBAAAAAAEAQAAAAMG
Ek0DBhJRAwYSEAIGCAMGERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgAEk0ECAASUQQIABIQ
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9h
M2JmZWFiODcwNmQ0Zjk2YTlkZmE0OGEzMjRiODdjZAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDE2AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEC5ORVQgRnJhbWV3b3JrIDS0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAGC4AAAAAAAAAAAAAMi4AAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAACQuAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCEQbsYAAABAIRBuxg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGEAMwBiAGYAZQBhAGIAOAA3ADAANgBkADQAZgA5ADYAYQA5AGQAZgBhADQAOABh
ADMAMgA0AGIAOAA3AGMAZAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADMAMwAxAC4AMQA2ADcANwAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGEAMwBiAGYAZQBhAGIAOAA3ADAANgBkADQAZgA5ADYAYQA5AGQAZgBhADQAOABhADMA
MgA0AGIAOAA3AGMAZAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYQAzAGIAZgBlAGEAYgA4ADcAMAA2AGQANABmADkANgBhADkAZABmAGEA
NAA4AGEAMwAyADQAYgA4ADcAYwBkAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGEAMwBiAGYAZQBhAGIAOAA3ADAANgBkADQAZgA5ADYAYQA5AGQAZgBhADQA
OABhADMAMgA0AGIAOAA3AGMAZAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAzADMAMQAuADEANgA3ADcAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAzADMAMQAuADEANgA3ADcAMgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABEPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Topic"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{92f03266-daac-4be7-817b-02933723c1a8}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Topic"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Outputs[No normalization]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="No normalization"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">@[User::this_Normalize] == "None"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::this_Normalize] == "None"</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Inputs[Derived Column Input].Columns[fraction_of_word_in_node]"
                              cachedDataType="r8"
                              cachedName="fraction_of_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_word_in_node]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Inputs[Derived Column Input].Columns[fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Inputs[Derived Column Input].Columns[families_with_word_in_node]"
                              cachedDataType="i4"
                              cachedName="families_with_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[families_with_word_in_node]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Inputs[Derived Column Input].Columns[sum_fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="sum_fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[score_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[score_group]"
                              name="score_group"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_ScoreGroup]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_ScoreGroup]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[series_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[series_group]"
                              name="series_group"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_SeriesGroup]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_SeriesGroup]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[series_key]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[series_key]"
                              name="series_key"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_ScoringLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_ScoringLabel]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[score_view]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[score_view]"
                              name="score_view"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">1</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">1</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[score_value]"
                              dataType="numeric"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[score_value]"
                              name="score_value"
                              precision="30"
                              scale="10"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_NUMERIC,30,10)(@[User::this_Normalize] == "None" ? #{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[families_with_word_in_node]} : (@[User::this_Normalize] == "Class" ? #{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]} : (@[User::this_Normalize] == "Series" ? #{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_word_in_node]} : (@[User::this_Normalize] == "ClassSeries" ? #{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]} / (#{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]} &gt; 0 ? #{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]} : 1.0) : 1.0))))</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_NUMERIC,30,10)(@[User::this_Normalize] == "None" ? families_with_word_in_node : (@[User::this_Normalize] == "Class" ? fraction_of_node_with_word : (@[User::this_Normalize] == "Series" ? fraction_of_word_in_node : (@[User::this_Normalize] == "ClassSeries" ? fraction_of_node_with_word / (sum_fraction_of_node_with_word &gt; 0 ? sum_fraction_of_node_with_word : 1.0) : 1.0))))</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[string_series_group]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="5"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[string_series_group]"
                              name="string_series_group"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"Prose"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"Prose"</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[string_series_value]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="500"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[string_series_value]"
                              name="string_series_value"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,500)("Mentioning " + @[User::this_ScoringLabel] + " in " + (DT_WSTR,10)#{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[families_with_word_in_node]} + " patents (" + [LEFT]((DT_WSTR,50)([ROUND](100 * #{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]},2)),5) + "%)")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,500)("Mentioning " + @[User::this_ScoringLabel] + " in " + (DT_WSTR,10)families_with_word_in_node + " patents (" + LEFT((DT_WSTR,50)(ROUND(100 * fraction_of_node_with_word,2)),5) + "%)")</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Join Fraction sum to individual scores"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[dummy_key]"
                              cachedDataType="i4"
                              cachedName="dummy_key"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[dummy_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[fraction_of_word_in_node]"
                              cachedDataType="r8"
                              cachedName="fraction_of_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[fraction_of_word_in_node]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[fraction_of_node_with_word]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[families_with_word_in_node]"
                              cachedDataType="i4"
                              cachedName="families_with_word_in_node"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[families_with_word_in_node]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Right Input].Columns[dummy_key]"
                              cachedDataType="i4"
                              cachedName="dummy_key"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Sum of Fraction].Columns[dummy_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Right Input].Columns[sum_fraction_of_node_with_word]"
                              cachedDataType="r8"
                              cachedName="sum_fraction_of_node_with_word"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Sum of Fraction].Columns[sum_fraction_of_node_with_word]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output]"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[node_key]"
                              name="node_key">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[node_key]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_word_in_node]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_word_in_node]"
                              name="fraction_of_word_in_node">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[fraction_of_word_in_node]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[fraction_of_node_with_word]"
                              name="fraction_of_node_with_word">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[fraction_of_node_with_word]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[families_with_word_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[families_with_word_in_node]"
                              name="families_with_word_in_node">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Left Input].Columns[families_with_word_in_node]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[sum_fraction_of_node_with_word]"
                              name="sum_fraction_of_node_with_word">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Right Input].Columns[sum_fraction_of_node_with_word]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Landscape Node Score - Topic"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    IDTSConnectionManager100 myPlatformConnectionManager;
    IDTSConnectionManager100 myDatahandlerConnectionManager;
    IDTSConnectionManager100 myProjectConnectionManager;
    SqlConnection myPlatformConnection;
    SqlConnection myDatahandlerConnection;
    SqlConnection myProjectConnection;
    string componentid;
    string dthVersion;
    string dthSourceCatalog;
    string prjSourceCatalog;
    double SumFractionOfClass;

    private void LogEntry(string sourceid, string status, string msg)
    {
        using (SqlCommand cmd = new SqlCommand("nlh.log_addEntry", myPlatformConnection))
        {
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("@component", "ScoreLandscapeNodes.dtsx");
            cmd.Parameters.AddWithValue("@source_type", "SCRIPT");
            cmd.Parameters.AddWithValue("@source_name", "Topic Node Scoring");
            cmd.Parameters.AddWithValue("@source_id", sourceid);
            cmd.Parameters.AddWithValue("@message", msg);
            cmd.Parameters.AddWithValue("@action", "EXECUTE");
            cmd.Parameters.AddWithValue("@status", status);

            cmd.ExecuteNonQuery();
        }
    }


    public override void PreExecute()
    {
        base.PreExecute();
        /* Connections used for data, and for logging. */
        myPlatformConnectionManager = this.Connections.PlatformDB;
        myProjectConnectionManager = this.Connections.ProjectDB;
        myDatahandlerConnectionManager = this.Connections.DatahandlerDB;
        myPlatformConnection = (SqlConnection)myPlatformConnectionManager.AcquireConnection(null);
        myProjectConnection = (SqlConnection)myProjectConnectionManager.AcquireConnection(null);
        myDatahandlerConnection = (SqlConnection)myDatahandlerConnectionManager.AcquireConnection(null);

        /* Decision whether the queries are or aren't run in cross server mode. This is needed as the latter is a functional requirement but performs poorly */
        componentid = (string)Variables.cfgslaComponentID;
        dthVersion = Variables.cfgslaDatahandlerVersion;
        if (Variables.cfgslaDatahandlerDataSource == Variables.cfgslaProjectDataSource)
        {
            LogEntry(componentid, "WARNING", "Using local data mode. Cross-server switched off.");
            prjSourceCatalog = Variables.cfgslaProjectCatalog;
        }
        else
        {
            LogEntry(componentid, "WARNING", "Using cross-server data mode. Cross-server switched on.");
            prjSourceCatalog = Variables.cfgslaProjectDataSource + "." + Variables.cfgslaProjectCatalog;
        }


        /* The sum of fractions is maintained, to allow for normalizing by it afterwards. */
        //string Normalize = Variables.thisNormalize;
        SumFractionOfClass = 0.0;
    }

    public override void PostExecute()
    {
        base.PostExecute();
        myPlatformConnectionManager.ReleaseConnection(myPlatformConnection);
        myDatahandlerConnectionManager.ReleaseConnection(myDatahandlerConnection);
        myProjectConnectionManager.ReleaseConnection(myProjectConnection);
    }

    public override void CreateNewOutputRows()
    {
        SqlDataReader reader;

        /* Prepare the variables */
        string commandString;

        /* The aggregation join is optional, and will include also documents in the count that reside in lower-positioned CPC classes. */
        LogEntry(componentid, "WARNING", String.Format("Set aggregation to [{0}] for topc [{1}].", Variables.thisAggregate,Variables.thisTopicName));
        string aggregateJoin;
        string nFamFieldName;
        if (Variables.thisAggregate)
        {
            aggregateJoin = String.Format(" JOIN {0}.patent_class_lineage cl ON cl.child_class_id=af.class_id ", dthVersion);
            nFamFieldName = "aggregate_n_fam";
        }
        else
        {
            aggregateJoin = String.Format(" JOIN {0}.patent_class_lineage cl ON cl.child_class_id=af.class_id AND cl.parent_class_id=af.class_id ", dthVersion);
            nFamFieldName = "n_fam";
        }

        /* Final construction of the SQL */
        commandString = String.Format(@"WITH af (patent_family_id, class_id) AS (
	                select distinct
		                a.patent_family_id
		                , cl.parent_class_id
	                from
		                {1}.[ufn_patent_text_topic]('{0}') a JOIN
		                {1}.appln_family_class_date af ON af.patent_family_id=a.patent_family_id
                        {3}
	                where
		                cl.parent_class_id in (select node_key from {2}.dbo.ls_node)
		                and
		                year(af.priority_date) > ( year(getdate()) - 20 )
        ) 
                SELECT
	                f.class_id
	                , total_families_with_word
	                , c.{4} as total_families_in_class
	                , count(distinct patent_family_id) as families_with_word_in_class
	                , cast(count(distinct patent_family_id) as real) / cast(c.{4} as real) as fraction_of_class_with_word
	                , cast(count(distinct patent_family_id) as real) / cast(tf.total_families_with_word as real) as fraction_of_keyword_in_class
                    , cast(1.0 as real) as dummy
                FROM
	                af f JOIN
	                {1}.patent_class c ON c.class_id=f.class_id CROSS JOIN
	                (select count(distinct patent_family_id) as total_families_with_word from af) tf
                GROUP BY
	                f.class_id
	                , tf.total_families_with_word
	                , c.{4}", Variables.thisTopicName, dthVersion, prjSourceCatalog, aggregateJoin, nFamFieldName);

        LogEntry(componentid, "SUCCESS", commandString);

        SqlCommand sqlc = new SqlCommand(commandString, myDatahandlerConnection);
        sqlc.CommandTimeout = 0;

        try
        {
            int rowcount = 0;

            reader = sqlc.ExecuteReader();
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    /* Pass all the outputs, which ones to use for which normalization is determined in the data flow */
                    double fraction_of_class_with_word = (double)reader.GetSqlSingle(4);
                    SumFractionOfClass = SumFractionOfClass + fraction_of_class_with_word;

                    Output0Buffer.AddRow();
                    Output0Buffer.nodekey = reader.GetInt32(0);
                    Output0Buffer.totalfamilieswithword = reader.GetInt32(1);
                    Output0Buffer.totalfamiliesinnode = reader.GetInt32(2);
                    Output0Buffer.familieswithwordinnode = reader.GetInt32(3);
                    Output0Buffer.fractionofnodewithword = fraction_of_class_with_word;
                    Output0Buffer.fractionofwordinnode = (double)reader.GetSqlSingle(5);
                    Output0Buffer.dummykey = 1; // This value is used for joining (an artificial cross-join). This is the sort key.

                    rowcount += 1;
                }

                string msg = String.Format("Successfully read {0} number of rows", rowcount);

                /* Output one row with the total sum of weights; this is used for an optional normalization. */
                SumofFractionBuffer.AddRow();
                SumofFractionBuffer.sumfractionofnodewithword = SumFractionOfClass;
                SumofFractionBuffer.dummykey = 1;
                LogEntry(componentid, "SUCCESS", msg);
            }
            else
            {
                LogEntry(componentid, "WARNING", "No rows were added");
            }
        }
        catch (Exception e)
        {
            LogEntry(componentid, "FAILURE", e.Message);
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 nodekey
    {
        set
        {
            this[0] = value;
        }
    }
    public bool nodekey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double fractionofwordinnode
    {
        set
        {
            this[1] = value;
        }
    }
    public bool fractionofwordinnode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double fractionofnodewithword
    {
        set
        {
            this[2] = value;
        }
    }
    public bool fractionofnodewithword_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 familieswithwordinnode
    {
        set
        {
            this[3] = value;
        }
    }
    public bool familieswithwordinnode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 totalfamiliesinnode
    {
        set
        {
            this[4] = value;
        }
    }
    public bool totalfamiliesinnode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 totalfamilieswithword
    {
        set
        {
            this[5] = value;
        }
    }
    public bool totalfamilieswithword_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 dummykey
    {
        set
        {
            this[6] = value;
        }
    }
    public bool dummykey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class SumofFractionBuffer: ScriptBuffer

{
    public SumofFractionBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Double sumfractionofnodewithword
    {
        set
        {
            this[0] = value;
        }
    }
    public bool sumfractionofnodewithword_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 dummykey
    {
        set
        {
            this[1] = value;
        }
    }
    public bool dummykey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties.Settings.get_Default():SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties.Sett" +
    "ings")]

namespace SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public SumofFractionBuffer SumofFractionBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

        if (null != SumofFractionBuffer)
        {
            SumofFractionBuffer.SetEndOfRowset();
            SumofFractionBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Sum of Fraction"))
            {
                SumofFractionBuffer = new SumofFractionBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ProjectDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ProjectDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 PlatformDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PlatformDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 DatahandlerDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"DatahandlerDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String cfgslaComponentID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ComponentID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerDataSource
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerDataSource"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerVersion
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerVersion"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaProjectCatalog
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ProjectCatalog"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaProjectDataSource
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ProjectDataSource"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean thisAggregate
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["this_Aggregate"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisBagOfWords
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_BagOfWords"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisNormalize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_Normalize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisTopicName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_TopicName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_87b2fa7093f34d1ab7cd47fc528ae983</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_87b2fa7093f34d1ab7cd47fc528ae983</msb:DisplayName>
		<msb:ProjectId>{3E9FD46F-A5F0-4772-AB71-086368AAE1E6}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_87b2fa7093f34d1ab7cd47fc528ae983.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_87b2fa7093f34d1ab7cd47fc528ae983.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d477c11d-2bc1-4293-aabe-bceeb11cfe1a}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_87b2fa7093f34d1ab7cd47fc528ae983</RootNamespace>
    <AssemblyName>SC_87b2fa7093f34d1ab7cd47fc528ae983</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_87b2fa7093f34d1ab7cd47fc528ae983" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_87b2fa7093f34d1ab7cd47fc528ae983")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_87b2fa7093f34d1ab7cd47fc528ae983")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_87b2fa7093f34d1ab7cd47fc528ae983.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_87b2fa7093f34d1ab7cd47fc528ae983.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALwyCFkAAAAAAAAAAOAAIiALATAAADoAAAAIAAAAAAAA/lcA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKxXAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABDgAAAAgAAAAOgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAA8AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAQgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
VwAAAAAAAEgAAAACAAUAWCkAAJwtAAABAAAAAAAAAPRWAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwC6AAAAAQAAEXIBAABwAnsEAAAEcxAAAAoKBhpvEQAA
CgZvEgAACnIjAABwcjkAAHBvEwAACiYGbxIAAApyawAAcHKFAABwbxMAAAomBm8SAAAKcpMAAHBy
rQAAcG8TAAAKJgZvEgAACnLTAABwA28TAAAKJgZvEgAACnLpAABwBW8TAAAKJgZvEgAACnL7AABw
cgsBAHBvEwAACiYGbxIAAApyGwEAcARvEwAACiYGbxQAAAom3goGLAYGbxUAAArcKgAAARAAAAIA
EQCerwAKAAAAABMwBAAyAQAAAAAAAAIoFgAACgICewwAAARvJwAABn0BAAAEAgJ7DAAABG8mAAAG
fQMAAAQCAnsMAAAEbygAAAZ9AgAABAICewEAAAQUbxcAAAp0DwAAAX0EAAAEAgJ7AwAABBRvFwAA
CnQPAAABfQYAAAQCAnsCAAAEFG8XAAAKdA8AAAF9BQAABAICew0AAARvKgAABn0HAAAEAgJ7DQAA
BG8sAAAGfQgAAAQCew0AAARvKwAABgJ7DQAABG8uAAAGKBgAAAosKQICewcAAARyKwEAcHI7AQBw
KAEAAAYCAnsNAAAEby0AAAZ9CgAABCs8AgJ7BwAABHIrAQBwcp8BAHAoAQAABgICew0AAARvLgAA
BnIPAgBwAnsNAAAEby0AAAYoGQAACn0KAAAEAiMAAAAAAAAAAH0LAAAEKuoCKBoAAAoCewEAAAQC
ewQAAARvGwAACgJ7AgAABAJ7BQAABG8bAAAKAnsDAAAEAnsGAAAEbxsAAAoqAAAAGzAGACkCAAAC
AAARAgJ7BwAABHIrAQBwchMCAHACew0AAARvLwAABowlAAABAnsNAAAEbzIAAAYoHAAACigBAAAG
AnsNAAAEby8AAAYsGXJlAgBwAnsIAAAEKB0AAAoMcu4CAHANKxdyDgMAcAJ7CAAABCgdAAAKDHLd
AwBwDXLpAwBwG40XAAABJRYCew0AAARvMgAABqIlFwJ7CAAABKIlGAJ7CgAABKIlGQiiJRoJoige
AAAKCwICewcAAARyJg8AcAcoAQAABgcCewUAAARzEAAAChMEEQQWbx8AAAoWEwURBG8gAAAKCgZv
IQAACjkKAQAAOKoAAAAGGm8iAAAKKCMAAAprbBMHAgJ7CwAABBEHWH0LAAAEAnsOAAAEbxUAAAYC
ew4AAAQGFm8kAAAKbwcAAAYCew4AAAQGF28kAAAKbxEAAAYCew4AAAQGGG8kAAAKbw8AAAYCew4A
AAQGGW8kAAAKbw0AAAYCew4AAAQRB28LAAAGAnsOAAAEBhtvIgAACigjAAAKa2xvCQAABgJ7DgAA
BBdvEwAABhEFF1gTBQZvJQAACjpL////cjYPAHARBYwoAAABKB0AAAoTBgJ7DwAABG8dAAAGAnsP
AAAEAnsLAAAEbxkAAAYCew8AAAQXbxsAAAYCAnsHAAAEciYPAHARBigBAAAGKxYCAnsHAAAEcisB
AHBygA8AcCgBAAAG3hwTCAICewcAAARypg8AcBEIbyYAAAooAQAABt4AKgAAAEEcAAAAAAAA1AAA
ADgBAAAMAgAAHAAAABIAAAEeAiggAAAGKioCAwQFKCcAAAoqOgIWA4woAAABKCgAAAoqWgMsCAIW
KCkAAAoqcrYPAHBzKgAACno6AhcDjCoAAAEoKAAACipaAywIAhcoKQAACipytg8AcHMqAAAKejoC
GAOMKgAAASgoAAAKKloDLAgCGCgpAAAKKnK2DwBwcyoAAAp6OgIZA4woAAABKCgAAAoqWgMsCAIZ
KCkAAAoqcrYPAHBzKgAACno6AhoDjCgAAAEoKAAACipaAywIAhooKQAACipytg8AcHMqAAAKejoC
GwOMKAAAASgoAAAKKloDLAgCGygpAAAKKnK2DwBwcyoAAAp6OgIcA4woAAABKCgAAAoqWgMsCAIc
KCkAAAoqcrYPAHBzKgAACnoeAigrAAAKKh4CKCwAAAoqHgIoLQAACio6AhYDjCoAAAEoKAAACio6
AhcDjCgAAAEoKAAACip+AiguAAAKAgJzJQAABn0MAAAEAgJzKQAABn0NAAAEKgYq1gJ7DgAABCwS
AnsOAAAEbxYAAAYCFH0OAAAEAnsPAAAELBICew8AAARvHgAABgIUfQ8AAAQqABMwBQBzAAAAAwAA
ERYKK1gEBpQOBHJTEABwKC8AAAozGQIFBpoCBAaUKDAAAAoOBHMGAAAGfQ4AAAQEBpQOBHJlEABw
KC8AAAozGQIFBpoCBAaUKDAAAAoOBHMYAAAGfQ8AAAQGF1gKBgMypAJvJAAABgJvIQAABgIoIgAA
Bio6AigxAAAKAgN9EAAABCqCAnsQAAAEbzIAAApvMwAACnKFEABwbzQAAApvNQAACiqCAnsQAAAE
bzIAAApvMwAACnKZEABwbzQAAApvNQAACiqCAnsQAAAEbzIAAApvMwAACnKvEABwbzQAAApvNQAA
Cio6AigxAAAKAgN9EQAABCqWAnsRAAAEbzYAAApyyxAAcG83AAAKKDgAAApvOQAACnQkAAABKpYC
exEAAARvNgAACnLzEABwbzcAAAooOAAACm85AAAKdCQAAAEqlgJ7EQAABG82AAAKci8RAHBvNwAA
Cig4AAAKbzkAAAp0JAAAASqWAnsRAAAEbzYAAApyZREAcG83AAAKKDgAAApvOQAACnQkAAABKpYC
exEAAARvNgAACnKTEQBwbzcAAAooOAAACm85AAAKdCQAAAEqlgJ7EQAABG82AAAKcscRAHBvNwAA
Cig4AAAKbzkAAAqlJQAAASqWAnsRAAAEbzYAAApy5REAcG83AAAKKDgAAApvOQAACnQkAAABKpYC
exEAAARvNgAACnIFEgBwbzcAAAooOAAACm85AAAKdCQAAAEqlgJ7EQAABG82AAAKciMSAHBvNwAA
Cig4AAAKbzkAAAp0JAAAASoeAigxAAAKKq5+EgAABC0eckESAHDQCAAAAig6AAAKbzsAAApzPAAA
CoASAAAEfhIAAAQqGn4TAAAEKh4CgBMAAAQqGn4UAAAEKh4CKD0AAAoqLnM4AAAGgBQAAAQqQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAApAoAACN+AAAQCwAAYA0AACNTdHJpbmdz
AAAAAHAYAAC0EgAAI1VTACQrAAAQAAAAI0dVSUQAAAA0KwAAaAIAACNCbG9iAAAAAAAAAAIAAAFX
FaIBCQEAAAD6ATMAFgAAAQAAADQAAAAJAAAAFAAAADkAAAAiAAAAPQAAABAAAAADAAAABgAAACEA
AAAiAAAAAQAAAAcAAAABAAAAAAD1BQEAAAAAAAYAkQR1CgYAJQV1CgYA3QNPCg8A6QoAAAYACgSf
BwYAdASfBwYAVQSfBwYADAWfBwYAsQSfBwYAygSfBwYAIQSfBwYAPAR/BQoA5QQFAw4AZgDaCRIA
DAgnDBIAkgEnDBIAAAknDAYAawgnBwoATQkFAxYAKgkFAwoAlAgFAwoAWwwFAwYA+QsnBwYAwANP
CgYAXgmVCgYAiAiKBxoAkAPfBRoA8QPfBRoAXgN1BwYApQN1ChIAiAF1CBIAKgMvARIA0QcnDBIA
KwonDAYAlAInBwYAmQUnBwYAOgcnBxIA8wh1CBIAzgI9CwYAqwAnBwYAWwgnBwYAoAInBx4AAQAC
Ch4AKgACCh4ATQACCg4AfwDaCQ4AGgDaCVsA3AwAAA4AkADaCQYAMQMnBwYApwInBwYAMA2fBwAA
AADVAAAAAAABAAEAAQAQAEIHAAAUAAEAAQABABAAHAkAAE0ADAAGAAEAEAA5CQAATQAMABgAAQAQ
AD0MAABZAAwAIAABABAAgAsAAF0AEAAlAAEAEAAzCwAAXQARACkAAAAQAJwK+ApdABIAMwAAARAA
dwv4CnUAFAA3AAEAhAkWAQEAoAkWAQEAvwkWAQEAGggaAQEALwgaAQEARwgaAQEAfAEeAQEATQce
AQEAoAUeAQEAsQUeAQEAowshAQYAgAskAQYAMwsoAQYAHAksAQYAOQkwAQEASww0AQEASww0AREA
Lgc4AREATgM8AREA8AFAAVAgAAAAAIEASQ1EAQEAKCEAAAAAxgBDBQYABABmIgAAAADGAE4FBgAE
AKQiAAAAAMYA1wsGAAQA+CQAAAAAhhg4CgYABAAAJQAAAACGGDgKmgAEAAslAAAAAIYIEw0BAAcA
GiUAAAAAhgjmBksBCAAxJQAAAACGCDwCUAEJAEAlAAAAAIYIhQZLAQoAVyUAAAAAhgidAVABCwBm
JQAAAACGCB0GSwEMAH0lAAAAAIYIVQIBAA0AjCUAAAAAhgilBksBDgCjJQAAAACGCHACAQAPALIl
AAAAAIYIxwZLARAAySUAAAAAhgjWAQEAEQDYJQAAAACGCGQGSwESAO8lAAAAAIYIHw0BABMA/iUA
AAAAhgj5BksBFAAVJgAAAACGAAwNBgAVAB0mAAAAAIYAAAwGABUAJSYAAAAAhgADDH8AFQAAJQAA
AACGGDgKmgAVAC0mAAAAAIYIuAFQARgAGiUAAAAAhgg/BksBGQA8JgAAAACGCB8NAQAaAEAlAAAA
AIYI+QZLARsAFSYAAAAAhgAMDQYAHAAdJgAAAACGAAAMBgAcACUmAAAAAIYAAwx/ABwASyYAAAAA
hhg4CgYAHABrJgAAAADGAbYLBgAcAG0mAAAAAIEAXwEGABwApCYAAAAAxgC8DFUBHABrJgAAAADG
AdcLBgAgACMnAAAAAIYYOAphASAAMicAAAAAhgj/AM4AIQBTJwAAAACGCN4AzgAhAHQnAAAAAIYI
7QDOACEAlScAAAAAhhg4CmEBIQCkJwAAAACGCA0BlgAiAMonAAAAAIYIAAKWACIA8CcAAAAAhghY
B5YAIgAWKAAAAACGCMIFlgAiADwoAAAAAIYIIAKWACIAYigAAAAAhgh+A38AIgCIKAAAAACGCGIK
lgAiAK4oAAAAAIYIbQWWACIA1CgAAAAAhgjYApYAIgD6KAAAAACDGDgKBgAiAAIpAAAAAJMIWgln
ASIALikAAAAAkwg2A2wBIgA1KQAAAACTCEIDcQEiAD0pAAAAAJYIGwx3ASMARCkAAAAAhhg4CgYA
IwBMKQAAAACRGD4KfAEjAAAAAQBzAQAAAgDECwAAAwDbBQAAAQBTCQAAAgBSCwAAAwCiCAAAAQBn
BQAAAQBnBQAAAQBnBQAAAQBnBQAAAQBnBQAAAQBnBQAAAQBnBQAAAQBnBQAAAQBnBQAAAQBnBQAA
AQBnBQAAAQBnBQAAAQBnBQAAAQBnBQAAAQBTCQAAAgBSCwAAAwCiCAAAAQBnBQAAAQBnBQAAAQBn
BQAAAQBnBQAAAQC8CwAAAgBFCgAAAwCMCwAABACiCAAAAQBhDAAAAQBhDAAAAQBnBQkAOAoBABEA
OAoGABkAOAoKACkAOAoQADEAOAoQADkAOAoQAEEAOAoQAEkAOAoQAFEAOAoQAFkAOAoQAGEAOAoQ
AGkAOAoGAMEAOAoGAOEAOAoVAPEAOAoGAIEAOAogAPkAJgMnAIEAlAsuAAkBWgU0APkAOQ08ABkB
dgMGALEAQwUGAHEA6AdAACEBUg1FACEB6wtLALEATgUGAHEA+gdSACEB8gtmACEB8gttACEB8gtz
APkAqQwBAIEADgl6ADEBywt/AIkAywKDADkBDwyKADEBqACRADEBWgF/AJEAiAKWAJkAOAqaAJkA
HgekAJkADQcBAEkBOAoQAJkADA0GAJkAAAwGAJkAAwx/ALEAOAoGALEAIwGuALEAZgu1ALkAOAoG
ALEAOwG7AFkBsQfBAGEB6gLHAGkBbgnOALEAJwvTAHEBFQfZALEA9wzgAHkByAzmAJEBuQLtAJEB
LA32AMkAOAr8AOkAOAoGAC4ACwCkAS4AEwCtAS4AGwDMAS4AIwDVAS4AKwD+AS4AMwD+AS4AOwD+
AS4AQwDVAS4ASwAEAi4AUwD+AS4AWwAbAkMAYwBjAgMBawBjAoECewBjAukDcwDMAQkEcwDMARsA
VwCqAAMAAQAEAA8ABgATAAcAFgAIAB8ACQAhAAAAFw2AAQAA6gaEAQAAQAKIAQAAiQaEAQAAvwGI
AQAARgaEAQAAWQKAAQAAqQaEAQAAdAKAAQAAywaEAQAA2gGAAQAAaAaEAQAAIw2AAQAA/QaEAQAA
vAGIAQAAQwaEAQAAIw2AAQAA/QaEAQAAAwGMAQAA4gCMAQAA8QCMAQAAEQGRAQAABAKRAQAAXAeR
AQAAxgWRAQAAJAKRAQAAggOEAQAAZgqRAQAAcQWRAQAA3AKRAQAAXgmVAQAAVgOaAQAAHwyfAQEA
BwADAAEACAAFAAEACQAHAAEACgAJAAEACwALAAEADAANAAEADQAPAAEADgARAAEADwATAAEAEAAV
AAEAEQAXAAEAEgAZAAEAEwAbAAEAFAAdAAEAGQAfAAEAGgAhAAEAGwAjAAEAHAAlAAIAJgAnAAIA
JwApAAIAKAArAAIAKgAtAAIAKwAvAAIALAAxAAIALQAzAAIALgA1AAIALwA3AAIAMAA5AAIAMQA7
AAIAMgA9AAIANAA/AAIANQBBAAEANgBBAAIANwBDAASAAAABAAAAuxhuQQAAAAAAALEAAAAEAAAA
AAAAAAAAAAAEAVEBAAAAAAsAAAAAAAAAAAAAAA0BawwAAAAACwAAAAAAAAAAAAAADQGsCAAAAAAE
AAAAAAAAAAAAAAAEAS8BAAAAAAsAAAAAAAAAAAAAAA0BiAwAAAAABAAAAAAAAAAAAAAABAEnBwAA
AAALAAAAAAAAAAAAAAANAc8IAAAAAAAAAAABAAAApgoAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0
YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJ
RFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJp
YWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAR2V0SW50MzIAU0NfODdiMmZhNzA5M2Yz
NGQxYWI3Y2Q0N2ZjNTI4YWU5ODMAPE1vZHVsZT4AZ2V0X1BsYXRmb3JtREIAZ2V0X0RhdGFoYW5k
bGVyREIAZ2V0X1Byb2plY3REQgBnZXRfY2Znc2xhQ29tcG9uZW50SUQAR2V0T3V0cHV0SUQAU3lz
dGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFJlYWQATWFya091dHB1dHNG
aW5pc2hlZABzb3VyY2VpZABjb21wb25lbnRpZABEYkNvbW1hbmQAU3FsQ29tbWFuZABzZXRfZnJh
Y3Rpb25vZm5vZGV3aXRod29yZABzZXRfc3VtZnJhY3Rpb25vZm5vZGV3aXRod29yZABzZXRfdG90
YWxmYW1pbGllc3dpdGh3b3JkAGRlZmF1bHRJbnN0YW5jZQBnZXRfY2Znc2xhRGF0YWhhbmRsZXJE
YXRhU291cmNlAGdldF9jZmdzbGFQcm9qZWN0RGF0YVNvdXJjZQBzZXRfZnJhY3Rpb25vZndvcmRp
bm5vZGUAc2V0X2ZhbWlsaWVzd2l0aHdvcmRpbm5vZGUAc2V0X3RvdGFsZmFtaWxpZXNpbm5vZGUA
Z2V0X01lc3NhZ2UASURpc3Bvc2FibGUARG91YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAEdldFNxbFNpbmdsZQBnZXRfdGhpc1RvcGljTmFtZQBHZXRSdW50aW1lQ29ubmVj
dGlvbkJ5TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBzZXRfQ29tbWFuZFR5
cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAERpc3Bvc2UAZ2V0X3RoaXNBZ2dyZWdhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUA
Z2V0X3RoaXNOb3JtYWxpemUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAZHRoU291
cmNlQ2F0YWxvZwBwcmpTb3VyY2VDYXRhbG9nAGdldF9jZmdzbGFQcm9qZWN0Q2F0YWxvZwBtc2cA
U3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzg3YjJmYTcwOTNmMzRkMWFiN2NkNDdmYzUyOGFlOTgz
LmRsbABzZXRfZnJhY3Rpb25vZm5vZGV3aXRod29yZF9Jc051bGwAc2V0X3N1bWZyYWN0aW9ub2Zu
b2Rld2l0aHdvcmRfSXNOdWxsAHNldF90b3RhbGZhbWlsaWVzd2l0aHdvcmRfSXNOdWxsAHNldF9m
cmFjdGlvbm9md29yZGlubm9kZV9Jc051bGwAc2V0X2ZhbWlsaWVzd2l0aHdvcmRpbm5vZGVfSXNO
dWxsAHNldF90b3RhbGZhbWlsaWVzaW5ub2RlX0lzTnVsbABzZXRfbm9kZWtleV9Jc051bGwAc2V0
X2R1bW15a2V5X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJj
ZU1hbgBCb29sZWFuAFNjcmlwdE1haW4AZHRoVmVyc2lvbgBnZXRfY2Znc2xhRGF0YWhhbmRsZXJW
ZXJzaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24AU3FsUGFyYW1ldGVyQ29s
bGVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBSZWxlYXNlQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9u
AG15UGxhdGZvcm1Db25uZWN0aW9uAG15RGF0YWhhbmRsZXJDb25uZWN0aW9uAG15UHJvamVjdENv
bm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3Vs
dHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNS
dW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABEYkRhdGFSZWFk
ZXIAU3FsRGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU3Vtb2ZGcmFjdGlvbkJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBn
ZXRfQ29ubmVjdGlvbk1hbmFnZXIAbXlQbGF0Zm9ybUNvbm5lY3Rpb25NYW5hZ2VyAG15RGF0YWhh
bmRsZXJDb25uZWN0aW9uTWFuYWdlcgBteVByb2plY3RDb25uZWN0aW9uTWFuYWdlcgBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UGlwZWxpbmUuV3JhcHBlcgBTcWxQYXJhbWV0ZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0
ZW0uRGlhZ25vc3RpY3MAZ2V0X3RoaXNCYWdPZldvcmRzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ184N2IyZmE3MDkzZjM0ZDFhYjdjZDQ3ZmM1Mjhh
ZTk4My5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfODdi
MmZhNzA5M2YzNGQxYWI3Y2Q0N2ZjNTI4YWU5ODMuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJp
YWJsZXMAU3lzdGVtLkRhdGEuU3FsVHlwZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5J
bmRleGVzAFNldHRpbmdzAENvbm5lY3Rpb25zAEJ1ZmZlcnMAZ2V0X1BhcmFtZXRlcnMAU3VtRnJh
Y3Rpb25PZkNsYXNzAEZpbmlzaE91dHB1dHMAc3RhdHVzAGdldF9IYXNSb3dzAENyZWF0ZU5ld091
dHB1dFJvd3MAQ29uY2F0AEZvcm1hdABPYmplY3QAU2V0RW5kT2ZSb3dzZXQAb3BfRXhwbGljaXQA
Z2V0X0RlZmF1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29t
cG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AHNldF9Db21tYW5kVGltZW91dABQcmltZU91dHB1
dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFs
dWF0b3JDb250ZXh0AEFkZFJvdwBzZXRfbm9kZWtleQBzZXRfZHVtbXlrZXkAZ2V0X0Fzc2VtYmx5
AEV4ZWN1dGVOb25RdWVyeQBMb2dFbnRyeQBvcF9FcXVhbGl0eQAAAAAhbgBsAGgALgBsAG8AZwBf
AGEAZABkAEUAbgB0AHIAeQAAFUAAYwBvAG0AcABvAG4AZQBuAHQAADFTAGMAbwByAGUATABhAG4A
ZABzAGMAYQBwAGUATgBvAGQAZQBzAC4AZAB0AHMAeAAAGUAAcwBvAHUAcgBjAGUAXwB0AHkAcABl
AAANUwBDAFIASQBQAFQAABlAAHMAbwB1AHIAYwBlAF8AbgBhAG0AZQAAJVQAbwBwAGkAYwAgAE4A
bwBkAGUAIABTAGMAbwByAGkAbgBnAAAVQABzAG8AdQByAGMAZQBfAGkAZAAAEUAAbQBlAHMAcwBh
AGcAZQAAD0AAYQBjAHQAaQBvAG4AAA9FAFgARQBDAFUAVABFAAAPQABzAHQAYQB0AHUAcwAAD1cA
QQBSAE4ASQBOAEcAAGNVAHMAaQBuAGcAIABsAG8AYwBhAGwAIABkAGEAdABhACAAbQBvAGQAZQAu
ACAAQwByAG8AcwBzAC0AcwBlAHIAdgBlAHIAIABzAHcAaQB0AGMAaABlAGQAIABvAGYAZgAuAAFv
VQBzAGkAbgBnACAAYwByAG8AcwBzAC0AcwBlAHIAdgBlAHIAIABkAGEAdABhACAAbQBvAGQAZQAu
ACAAQwByAG8AcwBzAC0AcwBlAHIAdgBlAHIAIABzAHcAaQB0AGMAaABlAGQAIABvAG4ALgABAy4A
AFFTAGUAdAAgAGEAZwBnAHIAZQBnAGEAdABpAG8AbgAgAHQAbwAgAFsAewAwAH0AXQAgAGYAbwBy
ACAAdABvAHAAYwAgAFsAewAxAH0AXQAuAACAhyAASgBPAEkATgAgAHsAMAB9AC4AcABhAHQAZQBu
AHQAXwBjAGwAYQBzAHMAXwBsAGkAbgBlAGEAZwBlACAAYwBsACAATwBOACAAYwBsAC4AYwBoAGkA
bABkAF8AYwBsAGEAcwBzAF8AaQBkAD0AYQBmAC4AYwBsAGEAcwBzAF8AaQBkACAAAB9hAGcAZwBy
AGUAZwBhAHQAZQBfAG4AXwBmAGEAbQAAgM0gAEoATwBJAE4AIAB7ADAAfQAuAHAAYQB0AGUAbgB0
AF8AYwBsAGEAcwBzAF8AbABpAG4AZQBhAGcAZQAgAGMAbAAgAE8ATgAgAGMAbAAuAGMAaABpAGwA
ZABfAGMAbABhAHMAcwBfAGkAZAA9AGEAZgAuAGMAbABhAHMAcwBfAGkAZAAgAEEATgBEACAAYwBs
AC4AcABhAHIAZQBuAHQAXwBjAGwAYQBzAHMAXwBpAGQAPQBhAGYALgBjAGwAYQBzAHMAXwBpAGQA
IAAAC24AXwBmAGEAbQAAiztXAEkAVABIACAAYQBmACAAKABwAGEAdABlAG4AdABfAGYAYQBtAGkA
bAB5AF8AaQBkACwAIABjAGwAYQBzAHMAXwBpAGQAKQAgAEEAUwAgACgACgAJACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAcwBlAGwAZQBjAHQAIABkAGkAcwB0AGkAbgBjAHQACgAJAAkA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AcABhAHQAZQBuAHQAXwBmAGEAbQBp
AGwAeQBfAGkAZAAKAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACwAIABjAGwA
LgBwAGEAcgBlAG4AdABfAGMAbABhAHMAcwBfAGkAZAAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIABmAHIAbwBtAAoACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
ewAxAH0ALgBbAHUAZgBuAF8AcABhAHQAZQBuAHQAXwB0AGUAeAB0AF8AdABvAHAAaQBjAF0AKAAn
AHsAMAB9ACcAKQAgAGEAIABKAE8ASQBOAAoACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAewAxAH0ALgBhAHAAcABsAG4AXwBmAGEAbQBpAGwAeQBfAGMAbABhAHMAcwBfAGQAYQB0
AGUAIABhAGYAIABPAE4AIABhAGYALgBwAGEAdABlAG4AdABfAGYAYQBtAGkAbAB5AF8AaQBkAD0A
YQAuAHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQACgAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB7ADMAfQAKAAkAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAB3AGgAZQByAGUACgAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIABjAGwALgBwAGEAcgBlAG4AdABfAGMAbABhAHMAcwBfAGkAZAAgAGkAbgAgACgAcwBlAGwA
ZQBjAHQAIABuAG8AZABlAF8AawBlAHkAIABmAHIAbwBtACAAewAyAH0ALgBkAGIAbwAuAGwAcwBf
AG4AbwBkAGUAKQAKAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAbgBkAAoA
CQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAeQBlAGEAcgAoAGEAZgAuAHAAcgBp
AG8AcgBpAHQAeQBfAGQAYQB0AGUAKQAgAD4AIAAoACAAeQBlAGEAcgAoAGcAZQB0AGQAYQB0AGUA
KAApACkAIAAtACAAMgAwACAAKQAKACAAIAAgACAAIAAgACAAIAApACAACgAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgAGYALgBjAGwAYQBzAHMAXwBpAGQACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAALAAgAHQAbwB0AGEAbABfAGYAYQBtAGkAbABpAGUAcwBfAHcAaQB0AGgAXwB3AG8A
cgBkAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACwAIABjAC4AewA0AH0AIABh
AHMAIAB0AG8AdABhAGwAXwBmAGEAbQBpAGwAaQBlAHMAXwBpAG4AXwBjAGwAYQBzAHMACgAJACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALAAgAGMAbwB1AG4AdAAoAGQAaQBzAHQAaQBu
AGMAdAAgAHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQAKQAgAGEAcwAgAGYAYQBtAGkA
bABpAGUAcwBfAHcAaQB0AGgAXwB3AG8AcgBkAF8AaQBuAF8AYwBsAGEAcwBzAAoACQAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACwAIABjAGEAcwB0ACgAYwBvAHUAbgB0ACgAZABpAHMA
dABpAG4AYwB0ACAAcABhAHQAZQBuAHQAXwBmAGEAbQBpAGwAeQBfAGkAZAApACAAYQBzACAAcgBl
AGEAbAApACAALwAgAGMAYQBzAHQAKABjAC4AewA0AH0AIABhAHMAIAByAGUAYQBsACkAIABhAHMA
IABmAHIAYQBjAHQAaQBvAG4AXwBvAGYAXwBjAGwAYQBzAHMAXwB3AGkAdABoAF8AdwBvAHIAZAAK
AAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAsACAAYwBhAHMAdAAoAGMAbwB1AG4A
dAAoAGQAaQBzAHQAaQBuAGMAdAAgAHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQAKQAg
AGEAcwAgAHIAZQBhAGwAKQAgAC8AIABjAGEAcwB0ACgAdABmAC4AdABvAHQAYQBsAF8AZgBhAG0A
aQBsAGkAZQBzAF8AdwBpAHQAaABfAHcAbwByAGQAIABhAHMAIAByAGUAYQBsACkAIABhAHMAIABm
AHIAYQBjAHQAaQBvAG4AXwBvAGYAXwBrAGUAeQB3AG8AcgBkAF8AaQBuAF8AYwBsAGEAcwBzAAoA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACwAIABjAGEAcwB0ACgAMQAu
ADAAIABhAHMAIAByAGUAYQBsACkAIABhAHMAIABkAHUAbQBtAHkACgAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgAEYAUgBPAE0ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAYQBmACAAZgAgAEoATwBJAE4ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
ewAxAH0ALgBwAGEAdABlAG4AdABfAGMAbABhAHMAcwAgAGMAIABPAE4AIABjAC4AYwBsAGEAcwBz
AF8AaQBkAD0AZgAuAGMAbABhAHMAcwBfAGkAZAAgAEMAUgBPAFMAUwAgAEoATwBJAE4ACgAJACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAKABzAGUAbABlAGMAdAAgAGMAbwB1AG4AdAAo
AGQAaQBzAHQAaQBuAGMAdAAgAHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBsAHkAXwBpAGQAKQAgAGEA
cwAgAHQAbwB0AGEAbABfAGYAYQBtAGkAbABpAGUAcwBfAHcAaQB0AGgAXwB3AG8AcgBkACAAZgBy
AG8AbQAgAGEAZgApACAAdABmAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABHAFIA
TwBVAFAAIABCAFkACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAZgAuAGMAbABh
AHMAcwBfAGkAZAAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAsACAAdABmAC4A
dABvAHQAYQBsAF8AZgBhAG0AaQBsAGkAZQBzAF8AdwBpAHQAaABfAHcAbwByAGQACgAJACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALAAgAGMALgB7ADQAfQABD1MAVQBDAEMARQBTAFMA
AElTAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAgAHIAZQBhAGQAIAB7ADAAfQAgAG4AdQBtAGIAZQBy
ACAAbwBmACAAcgBvAHcAcwAAJU4AbwAgAHIAbwB3AHMAIAB3AGUAcgBlACAAYQBkAGQAZQBkAAAP
RgBBAEkATABVAFIARQAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4A
bwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAg
AHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4A
ABFPAHUAdABwAHUAdAAgADAAAB9TAHUAbQAgAG8AZgAgAEYAcgBhAGMAdABpAG8AbgAAE1AAcgBv
AGoAZQBjAHQARABCAAAVUABsAGEAdABmAG8AcgBtAEQAQgAAG0QAYQB0AGEAaABhAG4AZABsAGUA
cgBEAEIAACdjAGYAZwBfAHMAbABhAF8AQwBvAG0AcABvAG4AZQBuAHQASQBEAAA7YwBmAGcAXwBz
AGwAYQBfAEQAYQB0AGEAaABhAG4AZABsAGUAcgBEAGEAdABhAFMAbwB1AHIAYwBlAAA1YwBmAGcA
XwBzAGwAYQBfAEQAYQB0AGEAaABhAG4AZABsAGUAcgBWAGUAcgBzAGkAbwBuAAAtYwBmAGcAXwBz
AGwAYQBfAFAAcgBvAGoAZQBjAHQAQwBhAHQAYQBsAG8AZwAAM2MAZgBnAF8AcwBsAGEAXwBQAHIA
bwBqAGUAYwB0AEQAYQB0AGEAUwBvAHUAcgBjAGUAAB10AGgAaQBzAF8AQQBnAGcAcgBlAGcAYQB0
AGUAAB90AGgAaQBzAF8AQgBhAGcATwBmAFcAbwByAGQAcwAAHXQAaABpAHMAXwBOAG8AcgBtAGEA
bABpAHoAZQAAHXQAaABpAHMAXwBUAG8AcABpAGMATgBhAG0AZQAAcVMAQwBfADgANwBiADIAZgBh
ADcAMAA5ADMAZgAzADQAZAAxAGEAYgA3AGMAZAA0ADcAZgBjADUAMgA4AGEAZQA5ADgAMwAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAMTyEy3HSvNNmGknrJ/O424A
BCABAQgDIAABBSABARERBCABAQ4FIAEBEW0EBwESQQYgAgEOEj0GIAEBEYCBBSAAEoCFByACEoCJ
DhwDIAAIBCABHBwFAAICDg4GAAMODg4OBCABARwOBwkSRQ4ODhJBCA4NEkkGAAMODhwcBQACDg4c
BgACDg4dHAQgABJFAyAAAgYgARGAnQgGAAEMEYCdBCABCAgDIAAOCSADARJRHQgSVQUgAgEIHAMH
AQgGAAIIElUOBSABHQgIBSAAEoCtBSAAEoCxBiABEoC1DgQgABI5BSAAEoC5BiABEoC9HAUAABKA
wQYgARwSgMUIAAESgMkRgM0FIAASgNEHIAIBDhKA0Qi3elxWGTTgiQiJhF3NgIDMkQMGEjkDBhI9
AgYOAgYNAwYSGAMGEhwDBhIMAwYSEAMGElkDBhJlAwYSaQMGEiQGIAMBDg4OBCABAQIEIAEBDQsg
BAEIHQgdElESVQUgAQESWQQAABJlBAAAEmkFAAEBEmkEAAASJAMAAAEDKAAIAygAAgMoAA0EKAAS
OQMoAA4ECAASZQQIABJpBAgAEiQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NDXzg3YjJmYTcwOTNmMzRkMWFiN2NkNDdmYzUyOGFlOTgzAAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAQBAAAAtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
ANRXAAAAAAAAAAAAAO5XAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgVwAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAA
AAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoEAAAAAAAAAAAA
ABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQBuQbsY
AAABAG5Buxg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJ
AG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAAAQBTAHQA
cgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBD
AG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAA
cAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADgANwBiADIAZgBh
ADcAMAA5ADMAZgAzADQAZAAxAGEAYgA3AGMAZAA0ADcAZgBjADUAMgA4AGEAZQA5ADgAMwAAAD4A
DwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADMAMwAxAC4AMQA2ADcANQAw
AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADgANwBiADIAZgBhADcA
MAA5ADMAZgAzADQAZAAxAGEAYgA3AGMAZAA0ADcAZgBjADUAMgA4AGEAZQA5ADgAMwAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQA2AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOAA3AGIA
MgBmAGEANwAwADkAMwBmADMANABkADEAYQBiADcAYwBkADQANwBmAGMANQAyADgAYQBlADkAOAAz
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADgANwBiADIA
ZgBhADcAMAA5ADMAZgAzADQAZAAxAGEAYgA3AGMAZAA0ADcAZgBjADUAMgA4AGEAZQA5ADgAMwAA
AEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAzADMAMQAuADEA
NgA3ADUAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANgAzADMAMQAuADEANgA3ADUAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_87b2fa7093f34d1ab7cd47fc528ae983</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerDataSource,User::cfg_sla_DatahandlerVersion,User::cfg_sla_ProjectCatalog,User::cfg_sla_ProjectDataSource,User::this_Aggregate,User::this_BagOfWords,User::this_Normalize,User::this_TopicName</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">d42cdf94d8778c230f6eaa1d303c6b39</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">4520e526026447014ae2f247f624fe2b607fd804</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Connections[ProjectDB]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB - ADO.NET]"
                          name="ProjectDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Connections[PlatformDB]"
                          connectionManagerID="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          name="PlatformDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Connections[DatahandlerDB]"
                          connectionManagerID="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          name="DatahandlerDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0]"
                          hasSideEffects="true"
                          isSorted="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[node_key]"
                              name="node_key" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[fraction_of_word_in_node]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[fraction_of_word_in_node]"
                              name="fraction_of_word_in_node" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[fraction_of_node_with_word]"
                              name="fraction_of_node_with_word" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[families_with_word_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[families_with_word_in_node]"
                              name="families_with_word_in_node" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[total_families_in_node]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[total_families_in_node]"
                              name="total_families_in_node" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[total_families_with_word]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[total_families_with_word]"
                              name="total_families_with_word" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[dummy_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0].Columns[dummy_key]"
                              name="dummy_key"
                              sortKeyPosition="1" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Sum of Fraction]"
                          hasSideEffects="true"
                          isSorted="true"
                          name="Sum of Fraction">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Sum of Fraction].Columns[sum_fraction_of_node_with_word]"
                              dataType="r8"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Sum of Fraction].Columns[sum_fraction_of_node_with_word]"
                              name="sum_fraction_of_node_with_word" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Sum of Fraction].Columns[dummy_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Sum of Fraction].Columns[dummy_key]"
                              name="dummy_key"
                              sortKeyPosition="1" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_score_numeric]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[score_value]"
                              cachedDataType="numeric"
                              cachedName="score_value"
                              cachedPrecision="30"
                              cachedScale="10"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[score_value]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[score_view]"
                              cachedDataType="i4"
                              cachedName="score_view"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[score_view]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[series_key]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="series_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[series_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[series_group]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="series_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[series_group]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[score_group]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="score_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[score_group]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              dataType="wstr"
                              length="100"
                              name="node_score_view" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              dataType="numeric"
                              name="node_score_value"
                              precision="30"
                              scale="10" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic\String score"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="String score"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_score_str]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].Columns[score_group]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="score_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[score_group]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].Columns[string_series_group]"
                              cachedDataType="wstr"
                              cachedLength="5"
                              cachedName="string_series_group"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[string_series_group]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].Columns[series_key]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="series_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[series_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].Columns[score_view]"
                              cachedDataType="i4"
                              cachedName="score_view"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[score_view]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].Columns[string_series_value]"
                              cachedDataType="wstr"
                              cachedLength="500"
                              cachedName="string_series_value"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output].Columns[string_series_value]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_group]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_group" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_series_key]"
                              dataType="wstr"
                              length="100"
                              name="node_score_series_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_view]"
                              dataType="wstr"
                              length="100"
                              name="node_score_view" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input].ExternalColumns[node_score_value]"
                              dataType="nText"
                              name="node_score_value" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Topic\Row Count.Inputs[Row Count Input 1]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Merge Join Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Multicast Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Multicast Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Topic\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Multicast Output 2]"
                      endId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Inputs[Conditional Split Input]"
                      name="Multicast Output 2"
                      startId="Package\Execute Feature\Foreach Loop Container\Topic\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Topic.Paths[No normalization]"
                      endId="Package\Execute Feature\Foreach Loop Container\Topic\String score.Inputs[OLE DB Destination Input]"
                      name="No normalization"
                      startId="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split.Outputs[No normalization]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Output 0]"
                      endId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Left Input]"
                      name="Output 0"
                      startId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Output 0]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Topic\Multicast.Inputs[Multicast Input 1]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Topic\Row Count.Outputs[Row Count Output 1]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Sum of Fraction]"
                      endId="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores.Inputs[Merge Join Right Input]"
                      name="Sum of Fraction"
                      startId="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic.Outputs[Sum of Fraction]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{59809392-91BE-479B-9801-F45B19BA2F2A}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_ScoringType]==&quot;BagOfWords&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Decode object"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{191D800F-4C0C-4851-883E-0D97903B478F}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_ScoringType]==&quot;CompanyPortfolio&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Decode object"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Company portfolio" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{BB7A0BD4-820D-4CCA-A197-46FF5DC02562}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_ScoringType]==&quot;BagOfClasses&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Decode object"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{6D7680ED-DDC4-4920-833D-178ABF719767}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_ScoringType]==&quot;TopicScore&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Decode object"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Topic" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{FC1C116A-F151-4BE4-9F0C-EA8727C7B795}"
              DTS:ObjectName="{FC1C116A-F151-4BE4-9F0C-EA8727C7B795}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::this_ScoreLandscapeNodesParams" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Truncate Node Scores"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D616570B-739A-48FC-9FCA-9283318B6F5C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate Node Scores"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{ABBB3C9F-CCF4-424B-9A3A-71C858DEFA1F}"
              SQLTask:SqlStatementSource="truncate table ls_node_score_numeric;&#xA;truncate table ls_node_score_str" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{528A7489-224E-4951-81A7-BEFDB5648156}"
          DTS:From="Package\Execute Feature\Truncate Node Scores"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Execute Feature\Foreach Loop Container" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize - specific"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{F165B81B-CD31-41A9-808B-9E980F52B667}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize - specific">
      <DTS:Variables />
      <DTS:Executables />
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize - template"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{7D2482AB-ECF1-4A1C-866A-A40094F19DBF}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize - template">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Get server configuration"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8C74CB16-A2A1-449B-ABA4-20BE21112A90}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get server configuration"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
              SQLTask:SqlStatementSource="select @@ServerName AS DBServer, DB_NAME() AS DBName"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="DBServer"
                SQLTask:DtsVariableName="User::cfg_tpl_DBServer" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="DBName"
                SQLTask:DtsVariableName="User::cfg_tpl_DBName" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Initialize package configuration"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{D9535DD9-1CBC-49AD-8B97-644A5CA9A6D0}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Initialize package configuration"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_9560e13f3ccd474984696163ed602485"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName"
              ReadWriteVariables="User::cfg_pkg_ScoreLandscapeNodesParams">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9560e13f3ccd474984696163ed602485")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9560e13f3ccd474984696163ed602485")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Settings.get_Default():ST_9560e13f3ccd474984696163ed602485.Properties.Sett" +
    "ings")]

namespace ST_9560e13f3ccd474984696163ed602485.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Windows.Forms;
using System.Text;
using System.Data.OleDb;
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig.Params;
#endregion

namespace ST_9560e13f3ccd474984696163ed602485
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        public void Main()
        {
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetupLogger();

                deloitte.SetCollectionForForEachLoopToVar<ScoreLandscapeNodesParam>(
                    deloitte.PackageConfig.ScoreLandscapeNodesParams,
                    "User::cfg_pkg_ScoreLandscapeNodesParams"
                );
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_9560e13f3ccd474984696163ed602485</msb:CodeName>
		<msb:DisplayName>ST_9560e13f3ccd474984696163ed602485</msb:DisplayName>
		<msb:ProjectId>{9F216E4F-5C1A-40B1-881B-70F9ACA427D7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_9560e13f3ccd474984696163ed602485.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_9560e13f3ccd474984696163ed602485.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0468E881-81F4-4705-81DD-986AAA4B302F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9560e13f3ccd474984696163ed602485</RootNamespace>
    <AssemblyName>ST_9560e13f3ccd474984696163ed602485</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_7.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9560e13f3ccd474984696163ed602485.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9560e13f3ccd474984696163ed602485.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_9560e13f3ccd474984696163ed602485.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKqpKVcAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAATi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPguAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAVA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAw
LwAAAAAAAEgAAAACAAUA4CEAABgNAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwBCAAAAAgAAEQIoFgAACnMXAAAKCgZvGAAACgYGbxkAAApvGgAA
CnJzAABwbwEAACsm3goGLAYGbxwAAArcAigWAAAKFm8dAAAKKgAAARAAAAIADAAfKwAKAAAAAB4C
KB4AAAoqAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADkAwAAI34AAFAEAAB4BgAAI1N0cmluZ3MAAAAAyAoAAMQAAAAjVVMAjAsAABAAAAAjR1VJRAAA
AJwLAAB8AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJCwAAAPolMwAWAAABAAAAIAAAAAUAAAAGAAAA
CQAAAAEAAAAeAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAEAAAAA
AAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnAC
BgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3ACBgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCv
A28DBgDgA80DBgD9A7oABgACBLoABgAmBHACCgBSBDwECgBrBDwEBgCABG8DDgCiBBQBDgDEBBQB
EgD5BN4EEgA+BRQFBgB6BV8FEgC5BYgFBgARBroAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQAB
AAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEArAEXABEA
9gE5AAYGHwJHAFaAJwJKAFaALwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACT
CNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY
mwSJAAIAvCAAAAAAhgAaAhsAAgAcIQAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFY
AFEAvAFYAFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkA
vAEbAAkAvAEbAKEAFARiAKEALwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA1gSN
AOEAvAGbAOEACAUbAOEATQWhAOkA0gWmAOEA8AWvAAEBHQYbANkAJQZdABkAvAEbAAgAFABOAAgA
GABTACkAkwCAAC4AGwA2AS4AIwA2AS4AYwBcAS4ACwDFAC4AEwANAS4AMwANAS4AKwA2AS4AOwA8
AS4AQwA2AS4AWwBTAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAHUAwAACAAEAAwADAAAAbwEvAAAA
7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAUBcdPgAAAAAAAH8AAAAE
AAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAA
AAADAAAAAAAAAAAAAACSAN4EAAAAAAAAAAABAAAANAYAAAUABAA3ALsAAAAAPE1vZHVsZT4AU1Rf
OTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYzZWQ2MDI0ODUuZGxsAFJlc291cmNlcwBTVF85NTYwZTEz
ZjNjY2Q0NzQ5ODQ2OTYxNjNlZDYwMjQ4NS5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4A
U1RfOTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYzZWQ2MDI0ODUAU2NyaXB0UmVzdWx0cwBtc2Nvcmxp
YgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3Rl
bS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0
aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZh
dWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlv
bgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lv
bkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVs
YXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRp
YWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMARGVsb2l0dGUuUGlwZWxpbmVGcmFt
ZXdvcmsARGVsb2l0dGVTY3JpcHQAU2V0dXBMb2dnZXIARGVsb2l0dGUuUGlwZWxpbmVGcmFtZXdv
cmsuUGxhdGZvcm1Db25maWcAQ29tcG9uZW50UGFyYW0AZ2V0X1BhY2thZ2VDb25maWcAU3lzdGVt
LkNvbGxlY3Rpb25zLkdlbmVyaWMASUVudW1lcmFibGVgMQBEZWxvaXR0ZS5QaXBlbGluZUZyYW1l
d29yay5QbGF0Zm9ybUNvbmZpZy5QYXJhbXMAU2NvcmVMYW5kc2NhcGVOb2Rlc1BhcmFtAGdldF9T
Y29yZUxhbmRzY2FwZU5vZGVzUGFyYW1zAFNldENvbGxlY3Rpb25Gb3JGb3JFYWNoTG9vcFRvVmFy
AElEaXNwb3NhYmxlAERpc3Bvc2UAc2V0X1Rhc2tSZXN1bHQAU1RfOTU2MGUxM2YzY2NkNDc0OTg0
Njk2MTYzZWQ2MDI0ODUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAcVMAVABfADkA
NQA2ADAAZQAxADMAZgAzAGMAYwBkADQANwA0ADkAOAA0ADYAOQA2ADEANgAzAGUAZAA2ADAAMgA0
ADgANQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAT1UAcwBlAHIA
OgA6AGMAZgBnAF8AcABrAGcAXwBTAGMAbwByAGUATABhAG4AZABzAGMAYQBwAGUATgBvAGQAZQBz
AFAAYQByAGEAbQBzAAAAvkQzN1iDi02e1C1ptqNs1QAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYS
GQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAA
BAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAA
AQQgABJtCPkCOjYN6EsMBSABARJtBCAAEnUIIAAVEnkBEn0LMAECAhUSeQEeAA4ECgESfQQHARJx
RwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAu
TkVUIEZyYW1ld29yayA0KAEAI1NUXzk1NjBlMTNmM2NjZDQ3NDk4NDY5NjE2M2VkNjAyNDg1AAAF
AQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTUAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEAIC8AAAAAAAAAAAAAPi8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAvAAAA
AAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAdPlAXAAABAB0+UBc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AOQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQANgA5ADYAMQA2ADMAZQBkADYA
MAAyADQAOAA1AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQA2
ADgALgAxADUAOQAwADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
OQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQANgA5ADYAMQA2ADMAZQBkADYAMAAy
ADQAOAA1AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AOQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQA
NgA5ADYAMQA2ADMAZQBkADYAMAAyADQAOAA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADkANQA2ADAAZQAxADMAZgAzAGMAYwBkADQANwA0ADkAOAA0ADYA
OQA2ADEANgAzAGUAZAA2ADAAMgA0ADgANQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA5ADYAOAAuADEANQA5ADAAMQAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADYAOAAuADEANQA5ADAAMQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABQPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Set configuration through Invocation Handler"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{16ed92b6-348a-4c00-8ffd-048f191c5182}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set configuration through Invocation Handler"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
              SQLTask:SqlStatementSource="select value from ivh.run_paramvalue where run_id=? and parameter='api_config' "
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::cfg_tpl_jsonConfiguration" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::cfg_sla_RunID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Set configuration through Parameter"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:Disabled="True"
          DTS:DTSID="{5fe6f717-3902-413c-84ca-3b59aa019dcc}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set configuration through Parameter"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2012; � 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::cfg_tpl_jsonConfiguration]= @[$Package::JSON_CONFIG]" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D2FFFCFF-3B3C-4095-88B0-BD542895515E}"
          DTS:EvalOp="3"
          DTS:Expression="@[$Package::CONFIG_SOURCE]==&quot;PlatformDatabase&quot;"
          DTS:From="Package\Initialize - template\Get server configuration"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Initialize - template\Set configuration through Invocation Handler" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{02BAEBAA-6BBB-43D1-98AE-B51B2C8852A7}"
          DTS:EvalOp="3"
          DTS:Expression="@[$Package::CONFIG_SOURCE]==&quot;Parameter&quot;"
          DTS:From="Package\Initialize - template\Get server configuration"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Initialize - template\Set configuration through Parameter" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{B5A27F4E-C434-4139-9BAB-FBE04700691A}"
          DTS:From="Package\Initialize - template\Set configuration through Invocation Handler"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Initialize - template\Initialize package configuration" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{CBDB6506-4816-4DA5-93D2-B5AD184FD8F5}"
          DTS:From="Package\Initialize - template\Set configuration through Parameter"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Initialize - template\Initialize package configuration" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize SLA configuration"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DisableEventHandlers="True"
      DTS:DTSID="{5506FD66-5566-4C70-8965-C5F9D5AFA286}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize SLA configuration"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{B0875B28-D531-43A8-A160-6E047304683B}"
          DTS:EventID="728010436"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{5D01CC6B-0E8C-43DE-ACCF-C580ADE78C09}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]\Log SLA property"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{E1B9638E-D992-48C3-9A92-B2440A25E6A1}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log SLA property"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::cfg_sla_RunID]  +  ": SLA key [ComponentID] was set with value \"" +  @[User::cfg_sla_ComponentID] + "\". '"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
                  SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='ScoreLandscapeNodes.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run -1: SLA key [ComponentID] was set with value &quot;&quot;. '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7c98d941be6340a4afa5b23346e85fc7"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,User::cfg_tpl_jsonSLA,System::PackageName"
          ReadWriteVariables="User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerCatalog,User::cfg_sla_DatahandlerDataSource,User::cfg_sla_DatahandlerVersion,User::cfg_sla_JsonVersion,User::cfg_sla_PlatformCatalog,User::cfg_sla_PlatformDataSource,User::cfg_sla_PollEvery,User::cfg_sla_ProjectCatalog,User::cfg_sla_ProjectDataSource,User::cfg_sla_RunID,User::cfg_sla_TimeOutAfter">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7c98d941be6340a4afa5b23346e85fc7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7c98d941be6340a4afa5b23346e85fc7")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig;
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Data;
using System.Data.SqlClient;
using System.Reflection;
using System.Windows.Forms;

#endregion

namespace ST_7c98d941be6340a4afa5b23346e85fc7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetNonNullUserVariablesFor<SLA>("User::cfg_tpl_jsonSLA", "cfg_sla_");
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_7c98d941be6340a4afa5b23346e85fc7.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9CD66199-FB02-4B5C-9A30-C7FB7ED47B51}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7c98d941be6340a4afa5b23346e85fc7</RootNamespace>
    <AssemblyName>ST_7c98d941be6340a4afa5b23346e85fc7</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_7.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_7c98d941be6340a4afa5b23346e85fc7</msb:CodeName>
		<msb:DisplayName>ST_7c98d941be6340a4afa5b23346e85fc7</msb:DisplayName>
		<msb:ProjectId>{2FE85E53-2960-4E7B-AF1B-D38BAF1E3336}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7c98d941be6340a4afa5b23346e85fc7.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Settings.get_Default():ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Sett" +
    "ings")]

namespace ST_7c98d941be6340a4afa5b23346e85fc7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7c98d941be6340a4afa5b23346e85fc7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_7c98d941be6340a4afa5b23346e85fc7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANEu2VYAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAPi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOgtAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
LgAAAAAAAEgAAAACAAUA0CEAABgMAAABAAAAAAAAABghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwA1AAAAAgAAEQIoFgAACnMXAAAKCgZycwAAcHKfAABwbwEAACve
CgYsBgZvGQAACtwCKBYAAAoWbxoAAAoqAAAAARAAAAIADAASHgAKAAAAAB4CKBsAAAoqtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMgDAAAjfgAANAQAALgF
AAAjU3RyaW5ncwAAAADsCQAAtAAAACNVUwCgCgAAEAAAACNHVUlEAAAAsAoAAGgBAAAjQmxvYgAA
AAAAAAACAAABVx2iAQkLAAAA+iUzABYAAAEAAAAeAAAABQAAAAYAAAAJAAAAAQAAABsAAAACAAAA
DwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAK
AN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUC
cAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAG
AAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAPkE3gQSAE0FIwUGAFEF
ugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAI
AAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAA
gxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACW
CAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACABAhAAAAAIYY
vAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8
AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4A
uQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A4QC8AZsA4QAIBaEA8QBdBRsA2QBlBV0AGQC8
ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbACMBLgAjACMBLgBjAEkBLgALALIALgATAPoALgAzAPoA
LgArACMBLgA7ACkBLgBDACMBLgBbAEABQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCtAAIAAQAD
AAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAATF3A2
AAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAA
AAAAAAAKAPUAAAAAAAMAAAAAAAAAAAAAAJIA3gQAAAAAAAAAAAEAAAB0BQAABQAEADEAqAAAAAAA
ADxNb2R1bGU+AFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2ZTg1ZmM3LmRsbABSZXNvdXJj
ZXMAU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTViMjMzNDZlODVmYzcuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2ZTg1ZmM3AFNjcmlwdFJl
c3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jl
c291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0
YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lz
dGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBB
c3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5
AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRU
YXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAERlbG9pdHRl
LlBpcGVsaW5lRnJhbWV3b3JrAERlbG9pdHRlU2NyaXB0AFNldE5vbk51bGxVc2VyVmFyaWFibGVz
Rm9yAERlbG9pdHRlLlBpcGVsaW5lRnJhbWV3b3JrLlBsYXRmb3JtQ29uZmlnAFNMQQBJRGlzcG9z
YWJsZQBEaXNwb3NlAHNldF9UYXNrUmVzdWx0AFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2
ZTg1ZmM3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwA3AGMAOQA4AGQA
OQA0ADEAYgBlADYAMwA0ADAAYQA0AGEAZgBhADUAYgAyADMAMwA0ADYAZQA4ADUAZgBjADcALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACtVAHMAZQByADoAOgBjAGYA
ZwBfAHQAcABsAF8AagBzAG8AbgBTAEwAQQAAEWMAZgBnAF8AcwBsAGEAXwAAAAAAoLoZClC2HUyx
XyMgQF2w4wAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgA
EhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQg
ABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtCPkCOjYN6EsMBSABARJtBjAB
AgEODgQKARJ1BAcBEnFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTVi
MjMzNDZlODVmYzcAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzARAuAAAAAAAAAAAAAC4uAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAgLgAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBwNhMXAAABAHA2Exc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8ANwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYAYQA1AGIAMgAzADMANAA2AGUA
OAA1AGYAYwA3AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQAw
ADcALgAxADMAOQAzADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYAYQA1AGIAMgAzADMANAA2AGUAOAA1
AGYAYwA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8ANwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYA
YQA1AGIAMgAzADMANAA2AGUAOAA1AGYAYwA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADcAYwA5ADgAZAA5ADQAMQBiAGUANgAzADQAMABhADQAYQBmAGEA
NQBiADIAMwAzADQANgBlADgANQBmAGMANwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA5ADAANwAuADEAMwA5ADMANgAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADAANwAuADEAMwA5ADMANgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABAPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{64269215-8fb9-4b28-a8f9-9e8ad3e43bd6}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\NotifySsisApi"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{145b1973-eaf0-4f49-b7bc-664fb4d24990}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="NotifySsisApi"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_67c3c89afdef41ee97f59643d79720cf"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName">
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using System.Collections;
using System.Collections.Generic;
using Deloitte.PipelineFramework.PlatformConfig;
#endregion

namespace ST_065500ea46124711b2237a3a9fbb2b8c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.UpdateApi(
                    code: (int)DeloitteScript.UpdateCodes.ComponentFinished,
                    message: deloitte.PackageName
                );
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_67c3c89afdef41ee97f59643d79720cf.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{CED7755E-802E-4832-8212-AE5EFAE0331F}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_065500ea46124711b2237a3a9fbb2b8c</RootNamespace><AssemblyName>ST_67c3c89afdef41ee97f59643d79720cf</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL"><SpecificVersion>False</SpecificVersion><HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath></Reference><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_065500ea46124711b2237a3a9fbb2b8c</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_065500ea46124711b2237a3a9fbb2b8c</msb:DisplayName>
		<msb:ProjectId>{C8A952E6-277A-4655-8AE6-661FAAD948D7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_67c3c89afdef41ee97f59643d79720cf.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Settings.get_Default():ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Sett" +
    "ings")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_7e16b314de4b4f208ea1b087f6566596.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOcP4VYAAAAAAAAAAOAAAiELAQsAAA4AAAAIAAAAAAAA7i0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJQtAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
LQAAAAAAAEgAAAACAAUA0CEAAMQLAAABAAAAAAAAABghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwA2AAAAAgAAEQIoFgAACnMXAAAKCgYg6AMAAAZvGAAACm8ZAAAK
3goGLAYGbxoAAArcAigWAAAKFm8bAAAKKgAAARAAAAIADAATHwAKAAAAAB4CKBwAAAoqtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMADAAAjfgAALAQAAKwF
AAAjU3RyaW5ncwAAAADYCQAAdAAAACNVUwBMCgAAEAAAACNHVUlEAAAAXAoAAGgBAAAjQmxvYgAA
AAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAdAAAABQAAAAYAAAAJAAAAAQAAABwAAAACAAAA
DwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDI
AA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA
7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNvAwYABATxAwYAIQS6AAYAJgS6
AAYASgRwAgoAdgRgBAoAjwRgBAYApARvAw4AxgQUAQ4A6AQUARIAHQUCBQYARgW6AAAAAAABAAAA
AAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAAR
AAQACgARAH8BEwARAKwBFwARAPYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwBGwABAFgg
AAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAA
AAAAhhi8ARsAAgCnIAAAAACRGL8EiQACALwgAAAAAIYAGgIbAAIAECEAAAAAhhi8ARsAAgAAAAEA
NwI5ALwBWABBALwBWABJALwBWABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwBWACB
ALwBWACJALwBXQCRALwBGwCZALwBGwAJALwBGwChADgEYgChAFMEaQApALwBbgC5ALwBegDJALwB
GwARALwBGwDRALwBGwAZAPoEjQDhALwBmwDhACwFoQDhADwFpQDpAFIFGwDZAFoFXQAZALwBGwAI
ABQATgAIABgAUwApAJMAgAAuABsAIQEuACMAIQEuAGMARwEuAAsAsAAuABMA+AAuADMA+AAuACsA
IQEuADsAJwEuAEMAIQEuAFsAPgFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1AKsAAgABAAMAAwAA
AG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAABkXezIAAAAA
AADNAwAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAA
AAoA9QAAAAAAAwAAAAAAAAAAAAAAkgACBQAAAAAAAAAAAQAAAGkFAAAFAAQAAAAAAAA8TW9kdWxl
PgBTVF83ZTE2YjMxNGRlNGI0ZjIwOGVhMWIwODdmNjU2NjU5Ni5kbGwAUmVzb3VyY2VzAFNUXzA2
NTUwMGVhNDYxMjQ3MTFiMjIzN2EzYTlmYmIyYjhjLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0
TWFpbgBTVF8wNjU1MDBlYTQ2MTI0NzExYjIyMzdhM2E5ZmJiMmI4YwBTY3JpcHRSZXN1bHRzAG1z
Y29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0A
U3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZs
ZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlW
ZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF83
ZTE2YjMxNGRlNGI0ZjIwOGVhMWIwODdmNjU2NjU5NgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0
T2JqZWN0TW9kZWwAZ2V0X0R0cwBEZWxvaXR0ZS5QaXBlbGluZUZyYW1ld29yawBEZWxvaXR0ZVNj
cmlwdABnZXRfUGFja2FnZU5hbWUAVXBkYXRlQXBpAElEaXNwb3NhYmxlAERpc3Bvc2UAc2V0X1Rh
c2tSZXN1bHQAU1RfMDY1NTAwZWE0NjEyNDcxMWIyMjM3YTNhOWZiYjJiOGMuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAABxUwBUAF8AMAA2ADUANQAwADAAZQBhADQANgAxADIANAA3ADEA
MQBiADIAMgAzADcAYQAzAGEAOQBmAGIAYgAyAGIAOABjAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAA1eoDi5dJCkKHIibf77VhTQAIt3pcVhk04IkIiYRdzYCAzJED
BhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYR
FAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAA
AAAAAwAAAQQgABJtCPkCOjYN6EsMBSABARJtAyAADgUgAgEIDgQHARJxRwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
KAEAI1NUXzA2NTUwMGVhNDYxMjQ3MTFiMjIzN2EzYTlmYmIyYjhjAAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAALwt
AAAAAAAAAAAAAN4tAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQLQAAAAAAAAAAAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAezIZFwAAAQB7MhkXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAw
ADAAMAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADAANgA1ADUAMAAwAGUAYQA0ADYAMQAyADQANwAxADEAYgAyADIAMwA3AGEAMwBhADkAZgBi
AGIAMgBiADgAYwAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADkA
MQAzAC4AMQAyADkAMgAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADcAZQAxADYAYgAzADEANABkAGUANABiADQAZgAyADAAOABlAGEAMQBiADAAOAA3AGYANgA1ADYA
NgA1ADkANgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYA
aQBsAGUAbgBhAG0AZQAAAFMAVABfADcAZQAxADYAYgAzADEANABkAGUANABiADQAZgAyADAAOABl
AGEAMQBiADAAOAA3AGYANgA1ADYANgA1ADkANgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMA
dABOAGEAbQBlAAAAAABTAFQAXwAwADYANQA1ADAAMABlAGEANAA2ADEAMgA0ADcAMQAxAGIAMgAy
ADMANwBhADMAYQA5AGYAYgBiADIAYgA4AGMAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADUAOQAxADMALgAxADIAOQAyADMAAAAAAEgADwABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOQAxADMALgAxADIAOQAyADMAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAA8D0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set Initialized to True"
      DTS:CreationName="Microsoft.ExpressionTask"
      DTS:Description="Expression Task"
      DTS:DTSID="{AEA590B8-CE0E-4911-AEB0-684B87B317AB}"
      DTS:ExecutableType="Microsoft.ExpressionTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set Initialized to True"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExpressionTask
          Expression="@[User::cfg_tpl_IsPackageSlaInitialized] = True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Timeout expired"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{76651623-6DD5-4111-A922-6EC22DCCD410}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Timeout expired">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Timeout expired\Log - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E5E58C8E-4AC2-44D3-8206-795383761DBF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Timeout expired after " + (DT_WSTR, 16) @[User::cfg_sla_TimeOutAfter] + " seconds.'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='ScoreLandscapeNodes.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run 0: Timeout expired after 0 seconds.'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Timeout expired.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{4A59DE36-0127-4786-A11F-84B017B4F03C}"
          DTS:EventID="0"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{03975121-0D14-4173-80D1-2D929EB4017A}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Timeout expired.EventHandlers[OnPostExecute]\Event - Fail executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6efe0647-72ad-45a9-81d8-bea17c4729c9}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - Fail executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='fail',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Critical'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='fail',@source_id='', @level='Critical'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WAIT FOR Dependencies"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{1EC0F1D1-4627-4089-88A6-EE2DB5151620}"
      DTS:EvalExpression="(! @cfg_tpl_depenciesChecked) &amp;&amp; (DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &gt; GETDATE())"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="WAIT FOR Dependencies">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\WAIT FOR Dependencies\Check dependencies"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{96CAA107-A73A-4B5F-B3EC-50E74D0A42E3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check dependencies"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sqlDependencies"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="depenciesChecked"
                SQLTask:DtsVariableName="User::cfg_tpl_depenciesChecked" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{A547AB35-DC1F-46CE-A3E0-4954DD179A80}"
      DTS:From="Package\Initialize - template"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Check PRE-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{44FBBD69-8E75-4E32-892B-1C19AEC86152}"
      DTS:From="Package\Initialize - specific"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Check PRE-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{58609606-0978-4A97-B07A-5F8B8A2D83CA}"
      DTS:From="Package\Check PRE-conditions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\WAIT FOR Dependencies" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{D2397E40-9FFE-4146-BC6E-EDCAF224B119}"
      DTS:EvalOp="3"
      DTS:Expression="(DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &gt; GETDATE())"
      DTS:From="Package\WAIT FOR Dependencies"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Execute Feature" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{6F0FC961-2263-4B1C-AD33-127F3FE4F8DA}"
      DTS:From="Package\Execute Feature"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Check POST-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{F136E858-584D-4A35-B70C-B9F95509F771}"
      DTS:From="Package\Initialize SLA configuration"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Set Initialized to True" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{9932A657-3190-430D-8F25-A3F9FFCB110F}"
      DTS:From="Package\Set Initialized to True"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Initialize - template" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{787B8E39-9620-428B-B204-DFE3F3B501A3}"
      DTS:EvalOp="3"
      DTS:Expression="(DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &lt;= GETDATE())"
      DTS:From="Package\WAIT FOR Dependencies"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Timeout expired" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{FB4721D3-2CA9-438A-B793-AF4A0FEF1A85}"
      DTS:From="Package\Check POST-conditions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Sequence Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{B0710563-E132-466A-A794-483B7268B5A7}"
      DTS:From="Package\Set Initialized to True"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Initialize - specific" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{E1DD550A-8D39-4E33-A78E-0C770F339322}"
      DTS:EventID="218076652"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{DA4496E0-3E1C-4C4C-B60A-914BC0646C05}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Event - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{8F1167F0-177A-4840-BD64-E0741F29918A}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Event - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='fail',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Critical'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
              SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='fail',@source_id='', @level='Critical'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Log - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{D0ED4EE3-BF02-47C2-9772-21F6CB9FCDBE}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Failed executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='ScoreLandscapeNodes.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run 0: Failed executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{0DCB6B81-13B6-430A-A0F9-1552E7BD12DD}"
      DTS:EventID="217598736"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{5A8866BB-95B4-4D97-8A2F-AEFD56E411C0}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Log - End executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{059DFB64-AD1C-4337-9A62-D0385F07BE27}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - End executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='SUCCESS', @rowcount=" + (DT_WSTR, 16) @[User::varRowCount]  + ", @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Completed executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='ScoreLandscapeNodes.dtsx', @source_id=null, @action='END', @status='SUCCESS', @rowcount=0, @message = 'Run 0: Completed executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPreExecute]"
      DTS:CreationName="OnPreExecute"
      DTS:DTSID="{677B022C-AB34-4B8B-9E0E-BD821C7B4511}"
      DTS:EventID="0"
      DTS:EventName="OnPreExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{4B4C80E3-8E12-4185-9A5C-0EDAEF7E6E0C}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\Log - Start executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{EF3541D3-D1E6-464D-ACBE-07B2ACFA0687}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Start executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='START', @status='SUCCESS', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Starting executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4EFAA7EB-0D00-4EF1-8647-13261CCFC539}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='ScoreLandscapeNodes.dtsx', @source_id=null, @action='START', @status='SUCCESS', @message = 'Run 0: Starting executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="211,55"
          Size="211,98"
          Id="Package\Check POST-conditions"
          TopLeft="641.25,1471.75" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,55"
          Size="205,98"
          Id="Package\Check PRE-conditions"
          TopLeft="635.5,535.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)"
          TopLeft="438,141" />
        <NodeLayout
          Size="160,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)"
          TopLeft="29,143" />
        <NodeLayout
          Size="165,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio"
          TopLeft="228,143" />
        <NodeLayout
          Size="272,42"
          Id="Package\Execute Feature\Foreach Loop Container\Decode object"
          TopLeft="143.5,23" />
        <NodeLayout
          Size="104,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic"
          TopLeft="599,141" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="235.5,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-126.5,78"
              Start="0,0"
              End="-126.5,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.4736842105263"
                    Point2="0,31.4736842105263"
                    Point3="-4,31.4736842105263" />
                  <mssgle:LineSegment
                    End="-122.5,31.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-122.5,31.4736842105263"
                    Point2="-126.5,31.4736842105263"
                    Point3="-126.5,35.4736842105263" />
                  <mssgle:LineSegment
                    End="-126.5,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-71.25,36.4736842105263,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="323.5,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13,78"
              Start="0,0"
              End="-13,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.4736842105263"
                    Point2="0,31.4736842105263"
                    Point3="-4,31.4736842105263" />
                  <mssgle:LineSegment
                    End="-9,31.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-9,31.4736842105263"
                    Point2="-13,31.4736842105263"
                    Point3="-13,35.4736842105263" />
                  <mssgle:LineSegment
                    End="-13,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-14.5,36.4736842105263,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="345.5,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="167,76"
              Start="0,0"
              End="167,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.8252427184466" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.8252427184466"
                    Point2="0,25.8252427184466"
                    Point3="4,25.8252427184466" />
                  <mssgle:LineSegment
                    End="163,25.8252427184466" />
                  <mssgle:CubicBezierSegment
                    Point1="163,25.8252427184466"
                    Point2="167,25.8252427184466"
                    Point3="167,29.8252427184466" />
                  <mssgle:LineSegment
                    End="167,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="75.5,30.8252427184466,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="358.7,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="292.3,76"
              Start="0,0"
              End="292.3,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.3900414937759" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.3900414937759"
                    Point2="0,22.3900414937759"
                    Point3="4,22.3900414937759" />
                  <mssgle:LineSegment
                    End="288.3,22.3900414937759" />
                  <mssgle:CubicBezierSegment
                    Point1="288.3,22.3900414937759"
                    Point2="292.3,22.3900414937759"
                    Point3="292.3,26.3900414937759" />
                  <mssgle:LineSegment
                    End="292.3,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="138.15,27.3900414937759,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="841,342"
          Size="841,385"
          Id="Package\Execute Feature\Foreach Loop Container"
          TopLeft="20.25,87.75" />
        <NodeLayout
          Size="163,42"
          Id="Package\Execute Feature\Truncate Node Scores"
          TopLeft="231,9.5" />
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint]"
          TopLeft="312.5,51.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="128.25,36.25"
              Start="0,0"
              End="128.25,28.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.125" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.125"
                    Point2="0,18.125"
                    Point3="4,18.125" />
                  <mssgle:LineSegment
                    End="124.25,18.125" />
                  <mssgle:CubicBezierSegment
                    Point1="124.25,18.125"
                    Point2="128.25,18.125"
                    Point3="128.25,22.125" />
                  <mssgle:LineSegment
                    End="128.25,28.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="866,528"
          Size="866,571"
          Id="Package\Execute Feature"
          TopLeft="466.75,895" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="297,179"
          Size="297,222"
          Id="Package\Initialize - specific"
          TopLeft="795,235.571428571429" />
        <NodeLayout
          Size="192,42"
          Id="Package\Initialize - template\Get server configuration"
          TopLeft="121,10" />
        <NodeLayout
          Size="225,42"
          Id="Package\Initialize - template\Initialize package configuration"
          TopLeft="110,175" />
        <NodeLayout
          Size="203,67"
          Id="Package\Initialize - template\Set configuration through Invocation Handler"
          TopLeft="12,78" />
        <NodeLayout
          Size="202,42"
          Id="Package\Initialize - template\Set configuration through Parameter"
          TopLeft="264,78" />
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint]"
          TopLeft="186.333333333333,52">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-72.8333333333333,26"
              Start="0,0"
              End="-72.8333333333333,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,6.52892561983471" />
                  <mssgle:CubicBezierSegment
                    Point1="0,6.52892561983471"
                    Point2="0,10.5289256198347"
                    Point3="-4,10.5289256198347" />
                  <mssgle:LineSegment
                    End="-68.8333333333333,10.5289256198347" />
                  <mssgle:CubicBezierSegment
                    Point1="-68.8333333333333,10.5289256198347"
                    Point2="-72.8333333333333,10.5289256198347"
                    Point3="-72.8333333333333,14.5289256198347" />
                  <mssgle:LineSegment
                    End="-72.8333333333333,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-44.4166666666667,15.5289256198347,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint 1]"
          TopLeft="247.666666666667,52">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="117.333333333333,26"
              Start="0,0"
              End="117.333333333333,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,6.52892561983471" />
                  <mssgle:CubicBezierSegment
                    Point1="0,6.52892561983471"
                    Point2="0,10.5289256198347"
                    Point3="4,10.5289256198347" />
                  <mssgle:LineSegment
                    End="113.333333333333,10.5289256198347" />
                  <mssgle:CubicBezierSegment
                    Point1="113.333333333333,10.5289256198347"
                    Point2="117.333333333333,10.5289256198347"
                    Point3="117.333333333333,14.5289256198347" />
                  <mssgle:LineSegment
                    End="117.333333333333,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="50.6666666666667,15.5289256198347,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint 2]"
          TopLeft="113.5,145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="72.8333333333333,30"
              Start="0,0"
              End="72.8333333333333,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.8729037952339" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.8729037952339"
                    Point2="0,17.8729037952339"
                    Point3="4,17.8729037952339" />
                  <mssgle:LineSegment
                    End="68.8333333333333,17.8729037952339" />
                  <mssgle:CubicBezierSegment
                    Point1="68.8333333333333,17.8729037952339"
                    Point2="72.8333333333333,17.8729037952339"
                    Point3="72.8333333333333,21.8729037952339" />
                  <mssgle:LineSegment
                    End="72.8333333333333,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint 3]"
          TopLeft="365,120">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-106.333333333333,55"
              Start="0,0"
              End="-106.333333333333,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.7669902912621" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.7669902912621"
                    Point2="0,32.7669902912621"
                    Point3="-4,32.7669902912621" />
                  <mssgle:LineSegment
                    End="-102.333333333333,32.7669902912621" />
                  <mssgle:CubicBezierSegment
                    Point1="-102.333333333333,32.7669902912621"
                    Point2="-106.333333333333,32.7669902912621"
                    Point3="-106.333333333333,36.7669902912621" />
                  <mssgle:LineSegment
                    End="-106.333333333333,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="479,240"
          Size="479,283"
          Id="Package\Initialize - template"
          TopLeft="203,230.642857142857" />
        <NodeLayout
          Size="204,42"
          Id="Package\Initialize SLA configuration"
          TopLeft="623,75" />
        <NodeLayout
          Size="139,42"
          Id="Package\Sequence Container\NotifySsisApi"
          TopLeft="36,24" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,121"
          Size="205,164"
          Id="Package\Sequence Container"
          TopLeft="649,1609.75" />
        <NodeLayout
          Size="180,42"
          Id="Package\Set Initialized to True"
          TopLeft="636,155" />
        <NodeLayout
          Size="176,42"
          Id="Package\Timeout expired\Log - Fail executable"
          TopLeft="35,35" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="241,131"
          Size="241,174"
          Id="Package\Timeout expired"
          TopLeft="995,681" />
        <NodeLayout
          Size="175,42"
          Id="Package\WAIT FOR Dependencies\Check dependencies"
          TopLeft="49.5714285714286,29.8571428571428" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="270,127"
          Size="270,170"
          Id="Package\WAIT FOR Dependencies"
          TopLeft="610.928571428572,676.535714285714" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="682,372.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23.1666666666666,163.357142857143"
              Start="0,0"
              End="23.1666666666666,155.857142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.1666666666666,0" />
                  <mssgle:CubicBezierSegment
                    Point1="19.1666666666666,0"
                    Point2="23.1666666666666,0"
                    Point3="23.1666666666666,4" />
                  <mssgle:LineSegment
                    End="23.1666666666666,155.857142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="943.5,457.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-172.666666666667,77.928571428571"
              Start="0,0"
              End="-172.666666666667,70.428571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.3950352648317" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.3950352648317"
                    Point2="0,46.3950352648317"
                    Point3="-4,46.3950352648317" />
                  <mssgle:LineSegment
                    End="-168.666666666667,46.3950352648317" />
                  <mssgle:CubicBezierSegment
                    Point1="-168.666666666667,46.3950352648317"
                    Point2="-172.666666666667,46.3950352648317"
                    Point3="-172.666666666667,50.3950352648317" />
                  <mssgle:LineSegment
                    End="-172.666666666667,70.428571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="741.964285714286,633.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.0357142857141"
              Start="0,0"
              End="0,35.5357142857141">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5357142857141" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="745.928571428572,846.535714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="153.821428571428,48.464285714286"
              Start="0,0"
              End="153.821428571428,40.964285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.232142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.232142857143"
                    Point2="0,24.232142857143"
                    Point3="4,24.232142857143" />
                  <mssgle:LineSegment
                    End="149.821428571428,24.232142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="149.821428571428,24.232142857143"
                    Point2="153.821428571428,24.232142857143"
                    Point3="153.821428571428,28.232142857143" />
                  <mssgle:LineSegment
                    End="153.821428571428,40.964285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="68.910714285714,29.232142857143,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="899.75,1466">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-47.5,54.75"
              Start="0,0"
              End="-40,54.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.75"
                    Point2="0,54.75"
                    Point3="-4,54.75" />
                  <mssgle:LineSegment
                    End="-40,54.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="725.5,117">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="697.333333333333,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-254.833333333333,33.642857142857"
              Start="0,0"
              End="-254.833333333333,26.142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.63499056010064" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.63499056010064"
                    Point2="0,13.6349905601006"
                    Point3="-4,13.6349905601006" />
                  <mssgle:LineSegment
                    End="-250.833333333333,13.6349905601006" />
                  <mssgle:CubicBezierSegment
                    Point1="-250.833333333333,13.6349905601006"
                    Point2="-254.833333333333,13.6349905601006"
                    Point3="-254.833333333333,17.6349905601006" />
                  <mssgle:LineSegment
                    End="-254.833333333333,26.142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="880.928571428572,764.767857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114.071428571428,0"
              Start="0,0"
              End="106.571428571428,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="106.571428571428,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="45.285714285714,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="749.125,1569.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="754.666666666667,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="188.833333333333,38.571428571429"
              Start="0,0"
              End="188.833333333333,31.071428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.6324732536188" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.6324732536188"
                    Point2="0,15.6324732536188"
                    Point3="4,15.6324732536188" />
                  <mssgle:LineSegment
                    End="184.833333333333,15.6324732536188" />
                  <mssgle:CubicBezierSegment
                    Point1="184.833333333333,15.6324732536188"
                    Point2="188.833333333333,15.6324732536188"
                    Point3="188.833333333333,19.6324732536188" />
                  <mssgle:LineSegment
                    End="188.833333333333,31.071428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package.EventHandlers[OnError]\Event - Fail executable"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="176,42"
          Id="Package.EventHandlers[OnError]\Log - Fail executable"
          TopLeft="0,62" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="178,42"
          Id="Package.EventHandlers[OnPostExecute]\Log - End executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="183,42"
          Id="Package.EventHandlers[OnPreExecute]\Log - Start executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Check POST-conditions.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Check POST-conditions.EventHandlers[OnPostExecute]\Event - End executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Check PRE-conditions.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Check PRE-conditions.EventHandlers[OnPostExecute]\Event - Start executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\OLE DB Destination"
          TopLeft="306,485" />
        <NodeLayout
          Size="154,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Derived Column"
          TopLeft="474,246" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Row Count"
          TopLeft="486,322" />
        <NodeLayout
          Size="235,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Landscape Node Score - Co-filing"
          TopLeft="417,38" />
        <NodeLayout
          Size="120,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Multicast"
          TopLeft="486,394" />
        <NodeLayout
          Size="132,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Scores"
          TopLeft="334,111" />
        <NodeLayout
          Size="163,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Sort Fraction Sum"
          TopLeft="611,110" />
        <NodeLayout
          Size="155,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Conditional Split"
          TopLeft="572,486" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\Merge Join"
          TopLeft="481,168" />
        <NodeLayout
          Size="135,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling)\String score"
          TopLeft="583,580" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[No normalization]"
          TopLeft="650,528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-37.51693359375,17.37548828125,75.0338671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Multicast Output 2]"
          TopLeft="564.666666666667,436">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84.8333333333334,50"
              Start="0,0"
              End="84.8333333333334,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.3947368421053" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.3947368421053"
                    Point2="0,20.3947368421053"
                    Point3="4,20.3947368421053" />
                  <mssgle:LineSegment
                    End="80.8333333333334,20.3947368421053" />
                  <mssgle:CubicBezierSegment
                    Point1="80.8333333333334,20.3947368421053"
                    Point2="84.8333333333334,20.3947368421053"
                    Point3="84.8333333333334,24.3947368421053" />
                  <mssgle:LineSegment
                    End="84.8333333333334,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Multicast Output 1]"
          TopLeft="546,436">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-154.5,49"
              Start="0,0"
              End="-154.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-150.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-150.5,24.5"
                    Point2="-154.5,24.5"
                    Point3="-154.5,28.5" />
                  <mssgle:LineSegment
                    End="-154.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Merge Join Output]"
          TopLeft="548.5,210">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Derived Column Output]"
          TopLeft="551,288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Sum of Fraction]"
          TopLeft="572.333333333333,80">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120.166666666667,30"
              Start="0,0"
              End="120.166666666667,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.12172442941674" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.12172442941674"
                    Point2="0,12.1217244294167"
                    Point3="4,12.1217244294167" />
                  <mssgle:LineSegment
                    End="116.166666666667,12.1217244294167" />
                  <mssgle:CubicBezierSegment
                    Point1="116.166666666667,12.1217244294167"
                    Point2="120.166666666667,12.1217244294167"
                    Point3="120.166666666667,16.1217244294167" />
                  <mssgle:LineSegment
                    End="120.166666666667,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="24.7207356770834,17.1217244294167,70.7251953125,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Sort Output1]"
          TopLeft="611,131">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-65,37"
              Start="0,0"
              End="-65,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-61,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-61,0"
                    Point2="-65,0"
                    Point3="-65,4" />
                  <mssgle:LineSegment
                    End="-65,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Sort Output]"
          TopLeft="466,132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.6666666666666,36"
              Start="0,0"
              End="59.6666666666666,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="55.6666666666666,0" />
                  <mssgle:CubicBezierSegment
                    Point1="55.6666666666666,0"
                    Point2="59.6666666666666,0"
                    Point3="59.6666666666666,4" />
                  <mssgle:LineSegment
                    End="59.6666666666666,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Row Count Output 1]"
          TopLeft="548.5,364">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Classes (cofiling).Paths[Output 0]"
          TopLeft="496.666666666667,80">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-96.6666666666666,31"
              Start="0,0"
              End="-96.6666666666666,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.52578191039729" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.52578191039729"
                    Point2="0,12.5257819103973"
                    Point3="-4,12.5257819103973" />
                  <mssgle:LineSegment
                    End="-92.6666666666666,12.5257819103973" />
                  <mssgle:CubicBezierSegment
                    Point1="-92.6666666666666,12.5257819103973"
                    Point2="-96.6666666666666,12.5257819103973"
                    Point3="-96.6666666666666,16.5257819103973" />
                  <mssgle:LineSegment
                    End="-96.6666666666666,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-68.4890559895833,17.5257819103973,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination"
          TopLeft="306,485" />
        <NodeLayout
          Size="154,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Derived Column"
          TopLeft="474,246" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Row Count"
          TopLeft="486,322" />
        <NodeLayout
          Size="255,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Join Fraction sum to individual scores"
          TopLeft="421,162" />
        <NodeLayout
          Size="120,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Multicast"
          TopLeft="486,394" />
        <NodeLayout
          Size="135,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score"
          TopLeft="583,580" />
        <NodeLayout
          Size="155,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Conditional Split"
          TopLeft="572,486" />
        <NodeLayout
          Size="262,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\Landscape Node Score - Bag Of Words"
          TopLeft="438,32" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Sum of Fraction]"
          TopLeft="569,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.5,88"
              Start="0,0"
              End="-20.5,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40"
                    Point2="0,44"
                    Point3="-4,44" />
                  <mssgle:LineSegment
                    End="-16.5,44" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.5,44"
                    Point2="-20.5,44"
                    Point3="-20.5,48" />
                  <mssgle:LineSegment
                    End="-20.5,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-45.61259765625,49,70.7251953125,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Row Count Output 1]"
          TopLeft="548.5,364">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Output 0]"
          TopLeft="569,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.5,88"
              Start="0,0"
              End="-20.5,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40"
                    Point2="0,44"
                    Point3="-4,44" />
                  <mssgle:LineSegment
                    End="-16.5,44" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.5,44"
                    Point2="-20.5,44"
                    Point3="-20.5,48" />
                  <mssgle:LineSegment
                    End="-20.5,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.40572265625,49,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[No normalization]"
          TopLeft="650,528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-37.51693359375,17.37548828125,75.0338671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Multicast Output 2]"
          TopLeft="564.666666666667,436">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84.8333333333334,50"
              Start="0,0"
              End="84.8333333333334,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.3947368421053" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.3947368421053"
                    Point2="0,20.3947368421053"
                    Point3="4,20.3947368421053" />
                  <mssgle:LineSegment
                    End="80.8333333333334,20.3947368421053" />
                  <mssgle:CubicBezierSegment
                    Point1="80.8333333333334,20.3947368421053"
                    Point2="84.8333333333334,20.3947368421053"
                    Point3="84.8333333333334,24.3947368421053" />
                  <mssgle:LineSegment
                    End="84.8333333333334,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Multicast Output 1]"
          TopLeft="546,436">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-154.5,49"
              Start="0,0"
              End="-154.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-150.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-150.5,24.5"
                    Point2="-154.5,24.5"
                    Point3="-154.5,28.5" />
                  <mssgle:LineSegment
                    End="-154.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Merge Join Output]"
          TopLeft="549.75,204">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile).Paths[Derived Column Output]"
          TopLeft="551,288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Bag Of Words (keyword profile)\String score">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Company portfolio">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="120,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio\Multicast"
          TopLeft="549.25,406.75" />
        <NodeLayout
          Size="154,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio\Derived Column"
          TopLeft="535,273" />
        <NodeLayout
          Size="273,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio\Landscape Node Score - Company Profile"
          TopLeft="524,38" />
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio\OLE DB Destination"
          TopLeft="469.75,493.5" />
        <NodeLayout
          Size="135,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio\String score"
          TopLeft="676.25,594" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio\Merge Join"
          TopLeft="589,136" />
        <NodeLayout
          Size="155,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio\Conditional Split"
          TopLeft="665.25,500" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio\Row Count"
          TopLeft="546,341" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[SumOfFraction]"
          TopLeft="657.25,80">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-33.05759765625,19.35107421875,66.1151953125,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[Row Count Output 1]"
          TopLeft="610.125,383">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.75"
              Start="0,0"
              End="0,16.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[Output 0]"
          TopLeft="657.25,80">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,18.533203125,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[No normalization]"
          TopLeft="743.25,542">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-37.51693359375,17.37548828125,75.0338671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[Multicast Output 2]"
          TopLeft="627.916666666667,448.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114.833333333333,51.25"
              Start="0,0"
              End="114.833333333333,43.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.9046052631579" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.9046052631579"
                    Point2="0,20.9046052631579"
                    Point3="4,20.9046052631579" />
                  <mssgle:LineSegment
                    End="110.833333333333,20.9046052631579" />
                  <mssgle:CubicBezierSegment
                    Point1="110.833333333333,20.9046052631579"
                    Point2="114.833333333333,20.9046052631579"
                    Point3="114.833333333333,24.9046052631579" />
                  <mssgle:LineSegment
                    End="114.833333333333,43.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[Multicast Output 1]"
          TopLeft="609.25,448.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-54.0000000000001,44.75"
              Start="0,0"
              End="-54.0000000000001,37.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.375" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.375"
                    Point2="0,22.375"
                    Point3="-4,22.375" />
                  <mssgle:LineSegment
                    End="-50.0000000000001,22.375" />
                  <mssgle:CubicBezierSegment
                    Point1="-50.0000000000001,22.375"
                    Point2="-54.0000000000001,22.375"
                    Point3="-54.0000000000001,26.375" />
                  <mssgle:LineSegment
                    End="-54.0000000000001,37.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[Merge Join Output]"
          TopLeft="654,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-42,95"
              Start="0,0"
              End="-42,87.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.5"
                    Point2="0,47.5"
                    Point3="-4,47.5" />
                  <mssgle:LineSegment
                    End="-38,47.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-38,47.5"
                    Point2="-42,47.5"
                    Point3="-42,51.5" />
                  <mssgle:LineSegment
                    End="-42,87.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Company portfolio.Paths[Derived Column Output]"
          TopLeft="611.5,315">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Topic">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic\OLE DB Destination"
          TopLeft="306,485" />
        <NodeLayout
          Size="154,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic\Derived Column"
          TopLeft="474,246" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic\Row Count"
          TopLeft="486,322" />
        <NodeLayout
          Size="255,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic\Join Fraction sum to individual scores"
          TopLeft="421,162" />
        <NodeLayout
          Size="120,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic\Multicast"
          TopLeft="486,394" />
        <NodeLayout
          Size="135,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic\String score"
          TopLeft="583,580" />
        <NodeLayout
          Size="155,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic\Conditional Split"
          TopLeft="572,486" />
        <NodeLayout
          Size="222,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic\Landscape Node Score - Topic"
          TopLeft="438,32" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Sum of Fraction]"
          TopLeft="548.75,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,88"
              Start="0,0"
              End="0,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-35.36259765625,35.35107421875,70.7251953125,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Row Count Output 1]"
          TopLeft="548.5,364">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Output 0]"
          TopLeft="548.75,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,88"
              Start="0,0"
              End="0,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,34.533203125,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Topic.Paths[No normalization]"
          TopLeft="650,528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-37.51693359375,17.37548828125,75.0338671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Multicast Output 2]"
          TopLeft="564.666666666667,436">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84.8333333333334,50"
              Start="0,0"
              End="84.8333333333334,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.3947368421053" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.3947368421053"
                    Point2="0,20.3947368421053"
                    Point3="4,20.3947368421053" />
                  <mssgle:LineSegment
                    End="80.8333333333334,20.3947368421053" />
                  <mssgle:CubicBezierSegment
                    Point1="80.8333333333334,20.3947368421053"
                    Point2="84.8333333333334,20.3947368421053"
                    Point3="84.8333333333334,24.3947368421053" />
                  <mssgle:LineSegment
                    End="84.8333333333334,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Multicast Output 1]"
          TopLeft="546,436">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-154.5,49"
              Start="0,0"
              End="-154.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-150.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-150.5,24.5"
                    Point2="-154.5,24.5"
                    Point3="-154.5,28.5" />
                  <mssgle:LineSegment
                    End="-154.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Merge Join Output]"
          TopLeft="549.75,204">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Topic.Paths[Derived Column Output]"
          TopLeft="551,288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="160,42"
          Id="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]\Log SLA property"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Timeout expired.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Timeout expired.EventHandlers[OnPostExecute]\Event - Fail executable"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>