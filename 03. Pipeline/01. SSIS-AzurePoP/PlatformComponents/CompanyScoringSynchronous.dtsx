<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/13/2014 4:11:55 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NLLT005553"
  DTS:CreatorName="NL\PBaljon"
  DTS:DelayValidation="True"
  DTS:DTSID="{0959BC27-3B3B-478E-B7E4-192EC814E9AD}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.98"
  DTS:LocaleID="1043"
  DTS:ObjectName="CompanyScoringSynchronous"
  DTS:PackageType="5"
  DTS:VersionBuild="267"
  DTS:VersionGUID="{35940F53-2B6B-47A0-9C68-52BFBCD2B5E9}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DatahandlerDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{E17D70A4-DB3F-48AF-9ADB-79EBAE98EE60}"
      DTS:ObjectName="DatahandlerDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_DatahandlerCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_DatahandlerDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_app_dth;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{5C4B2C3F-5DAF-48B2-92EC-96967EF0D971}"
      DTS:ObjectName="DatahandlerDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_DatahandlerCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_DatahandlerDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_app_dth;Integrated Security=True;Application Name=SSIS-PackageTemplate-{5C4B2C3F-5DAF-48B2-92EC-96967EF0D971}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PlatformDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
      DTS:ObjectName="PlatformDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_PlatformCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_PlatformDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_app_inh;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{9E292379-02DB-444C-A888-8C85E522AF6D}"
      DTS:ObjectName="PlatformDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_PlatformCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_PlatformDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_app_inh;Integrated Security=True;Application Name=SSIS-PackageTemplate-{9E292379-02DB-444C-A888-8C85E522AF6D}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProjectDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9C26136A-959C-4DF5-A4CE-01EE5EED7730}"
      DTS:ObjectName="ProjectDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_ProjectCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_ProjectDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_prj_p00129b;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProjectDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{81BFC870-82F7-4DDE-B81D-A14559733D4D}"
      DTS:ObjectName="ProjectDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_ProjectCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_ProjectDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_prj_p00129b;Integrated Security=True;Application Name=SSIS-PackageTemplate-{81BFC870-82F7-4DDE-B81D-A14559733D4D}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{8AC52C55-8AC3-42E0-AD0F-B79AC60FFEA6}"
      DTS:ObjectName="IN_DEBUG_MODE">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{DD93067E-FAB2-4019-918B-703C4E678927}"
      DTS:ObjectName="JSON_CONFIG">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">{"ComponentParams" : [  					{ "PackageName":"CreatePrepareEnvironment" } 					, { "PackageName":"CompanyRetrieval",						"RetrievalParams" : [ 							{"RetrievalType" : "CompanyTextBagOfWords" 							, "RetrievalLabel" : "Plastics Manufacturing" 							, "NumberOfCompanies" : 3 							, "Normalize" : "Portfolio" 							, "BagOfWords" : "Plastic|Thermoplastic" 							, "Constraints" : "company_category:Medium sized company|country:NL,BE,DE,FR,GB,ES,IT" 							},{ 							"RetrievalType" : "PatentClassProfile" 							, "RetrievalLabel" : "Shaping or Joining of Plastics" 							, "NumberOfCompanies" : 3 							, "Normalize" : "Portfolio" 							, "ClassProfile" : "B29C 00/00:0.5|B29C 31/00:0.5" 							, "Constraints" : "company_category:Medium sized company|country:NL,BE,DE,FR,GB,ES,IT" 							}  	 						] 						} 					, { "PackageName":"CompanyScoring",						"ScoringParams" : [ 							{"ScoringType" : "OrbisAttribute" 							, "ScoringLabel" : "Country" 							, "AttributeName" : "country" 							},{ 							"ScoringType" : "OrbisAttribute" 							, "ScoringLabel" : "Revenue" 							, "AttributeName" : "revenue_lay" 							},{ 							"ScoringType" : "PatentClassProfile" 							, "ScoringLabel" : "Shaping or Joining of Plastics" 							, "Normalize" : "Portfolio" 							, "ClassProfile" : "B29C 00/00:0.5|B29C 31/00:0.5" 							} 						] 						} 					, {"PackageName":"PrepareForVisualization",        "RetrievalParams" : [            {                "RetrievalType" : "PatentClassProfile"                , "RetrievalLabel" : "Shaping or Joining of Plastics"                , "NumberOfCompanies" : 3                , "Normalize" : "Portfolio"                , "ClassProfile" : "B29C 00/00:0.5|B29C 31/00:0.5"                , "Constraints" : "company_category:Medium sized company"            }]     } 					 ]}</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{523DF424-106F-425C-A65A-AE1C81E452EF}"
      DTS:ObjectName="JSON_SLA">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">{"ComponentID": "D0E4F952-663C-42CA-89E8-318C931D42A9" 					, "RunID": "-1" 					, "PollEvery": "00:00:10" 					, "TimeOutAfter": "3600" 					, "PlatformDataSource": "nlams00859" 					, "PlatformCatalog": "prv_dev_inh" 					, "DatahandlerDataSource": "nlams00859" 					, "DatahandlerCatalog": "prv_dev_dth" 					, "DatahandlerVersion": "jaws" 					, "ProjectDataSource":"nlams00859" 					, "ProjectCatalog":"prv_prj_deploytest" 				}</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{C5F075F9-E949-44B3-8996-32890F38BBBB}"
      DTS:ObjectName="RUN_ID">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C3CD402A-0BC3-4CEF-ABF1-BCE2E1932D8C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_ComponentJSON">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{251C03D6-7665-4FFE-B1B9-EC7338ED89E5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_ComponentParams">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{83379F9E-F7C2-435E-90B3-F89D4FA93EC7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_Creator">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{519260F0-D257-434E-A5F4-F4536EFA5CEA}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_ScoringParams">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{371D26AD-4DF3-4FB8-B076-3679EACD3549}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ComponentID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7E361197-01C7-461A-A0FC-746B4818F049}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_app_dth</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BEAA1010-78BC-4861-8329-D681D607EE64}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{87DB72DE-82EA-4C6A-A943-19C33A5E2D8E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerVersion">
      <DTS:VariableValue
        DTS:DataType="8">dbo</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{490153AF-079A-4221-BF6A-C3ACCE871621}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_JsonVersion">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0637B8A8-3765-4C90-AA29-6E236D1C37C7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PlatformCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_app_inh</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{974309FD-7FBA-460E-894F-1FFEF4ABA849}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PlatformDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B6BEB99-5479-4102-B394-8FC4C0E15A22}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PollEvery">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ABF32795-E395-4AEC-B19C-C0DD3D4E5BED}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ProjectCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_prj_p00129b</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D4142642-C232-4915-94A3-2F0329D5A532}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ProjectDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{88629DBD-BB4A-4BAF-967B-89340A620185}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_RunID">
      <DTS:VariableValue
        DTS:DataType="3">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1E900E15-3A06-4886-8144-9A3F7816C6BA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_TimeOutAfter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{445466C9-D4E5-4B8A-899F-49ABBFB86A53}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMDatahandlerDB">
      <DTS:VariableValue
        DTS:DataType="8">DatahandlerDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D6D21578-904F-4727-BBA0-2623C6E38E41}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMPlatformDB">
      <DTS:VariableValue
        DTS:DataType="8">PlatformDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D3C4515C-C6C5-4741-888D-84547D011CB0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMProjectDB">
      <DTS:VariableValue
        DTS:DataType="8">ProjectDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{351DF7A5-C291-4C8D-A7E9-DC302DAD5684}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_DBName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B5214B0D-BD90-4293-A1D5-AEEF4685D2FD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_DBServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1B0DBB59-44B7-486A-B718-750710B6CF87}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_dependenciesChecked">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A48C738C-F2BB-4625-9CFD-8F06E5F198D9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_EventLog">
      <DTS:VariableValue
        DTS:DataType="8">Application</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9BA1990D-A01D-4F1F-BA92-2A0A01EF3A4E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_Feature">
      <DTS:VariableValue
        DTS:DataType="8">InvocationHandler</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3BAF2C59-642E-4A92-923E-F684029CDB02}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_IsPackageSlaInitialized">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{47283F03-7EE7-42C8-9E41-5C9AC02A5D9B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_jsonConfiguration">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{80A7A1D1-FCD6-41CF-8105-D7B05239BC02}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::JSON_SLA]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_jsonSLA">
      <DTS:VariableValue
        DTS:DataType="8">{"ComponentID": "D0E4F952-663C-42CA-89E8-318C931D42A9" 					, "RunID": "-1" 					, "PollEvery": "00:00:10" 					, "TimeOutAfter": "3600" 					, "PlatformDataSource": "nlams00859" 					, "PlatformCatalog": "prv_dev_inh" 					, "DatahandlerDataSource": "nlams00859" 					, "DatahandlerCatalog": "prv_dev_dth" 					, "DatahandlerVersion": "jaws" 					, "ProjectDataSource":"nlams00859" 					, "ProjectCatalog":"prv_prj_deploytest" 				}</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84750D31-8E67-409D-8587-7C7C5C4B6728}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_PackagePath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84753207-01CA-458D-9FD2-9078D4F88755}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_Pipeline">
      <DTS:VariableValue
        DTS:DataType="8">ApplicationPlatform</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{898C8B41-0ACC-4C4C-A8AD-FCEB6184A482}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &lt;= GETDATE())"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_TimeoutExpired">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7B2A4085-1D44-4280-AF53-9150010F73D3}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT nlh.checkEvents(ivh.getDependencies('&quot; + @[User::cfg_sla_ComponentID]  + &quot;'), 'complete') AS depenciesChecked&#xA; IF ( SELECT nlh.checkEvents(ivh.getDependencies('&quot; + @[User::cfg_sla_ComponentID]  + &quot;'), 'complete')) = 0&#xA;&#x9;WAITFOR DELAY '&quot;+ @[User::cfg_sla_PollEvery]   +&quot;'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlDependencies">
      <DTS:VariableValue
        DTS:DataType="8">SELECT nlh.checkEvents(ivh.getDependencies(''), 'complete') AS depenciesChecked
 IF ( SELECT nlh.checkEvents(ivh.getDependencies(''), 'complete')) = 0
	WAITFOR DELAY ''</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FC199B7F-E2E6-4A9A-903D-83D33180BCF4}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;UPDATE DIM_COMPANYLONGLIST_WEB set &quot;+ @[User::this_ScoreGenericName]+&quot;=? WHERE companyPrimKey=?&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlLonglistTableUpdate">
      <DTS:VariableValue
        DTS:DataType="8">UPDATE DIM_COMPANYLONGLIST_WEB set =? WHERE companyPrimKey=?</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5FABED09-6B5E-40BB-BEAC-03C911309A61}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&#x9;declare @ii table(id int)&#xA;&#x9;insert into @ii select id from manual_scoring_action where [status]='Queued' and score_label='&quot;+ @[User::this_ScoringLabel] +&quot;'&#xA;&#xA;&#x9;-- 1. set scoring strings to 'Processing'&#xA;&#x9;update manual_scoring_action set status = 'Processed', modified_on=GETDATE() where id in (select id from @ii)&#xA;&#xA;&#x9;-- 2. return all scoring strings&#xA;&#x9;select id, scoring_string from manual_scoring_action where id in (select id from @ii)&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_GetProcessingManualScoreString">
      <DTS:VariableValue
        DTS:DataType="8">	declare @ii table(id int)
	insert into @ii select id from manual_scoring_action where [status]='Queued' and score_label=''

	-- 1. set scoring strings to 'Processing'
	update manual_scoring_action set status = 'Processed', modified_on=GETDATE() where id in (select id from @ii)

	-- 2. return all scoring strings
	select id, scoring_string from manual_scoring_action where id in (select id from @ii)</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DA1A46E0-D6B2-4B9B-AAED-6279E97B9342}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;select id, scoring_string&#xA;from&#xA;[dbo].[manual_scoring_action]&#xA;where&#xA;score_label='&quot;+ @[User::this_ScoringLabel] +&quot;'&#xA;order by&#xA;executed_on desc&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sql_this_GetManualScoreString">
      <DTS:VariableValue
        DTS:DataType="8">select id, scoring_string
from
[dbo].[manual_scoring_action]
where
score_label=''
order by
executed_on desc</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{810EA908-6FFF-4C0E-89F7-78F73E199CAA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_CompanyScore">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0BCA1C84-4E58-4038-8960-65F58D905BC1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_ScoreDataType">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AD069B1B-0481-4062-AB23-54C076A6D6B9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="this_ScoreExists">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2C5E61C-1690-4EE2-9BD7-A312D51CAC2E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_ScoreGenericName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EFAA5280-B0FE-4923-A666-241FA3CA6FCE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_ScoringLabel">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{73B936AE-F2B0-4252-8991-858D1251A2E5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="this_ScoringParam">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{871C6CC4-ACEC-4832-A98A-662F7881776F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_ScoringType">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{11E023F6-BF32-4743-A29F-4E8109F75903}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="tmpRunId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9C68CD98-81CB-48B5-847F-2A2705B5A078}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C9F2B21F-4EA9-4569-A132-CD8E18D99F50}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::RUN_ID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varRunId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check POST-conditions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{F986BF19-CC81-4886-AF12-6104B04AF3F6}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check POST-conditions">
      <DTS:Variables />
      <DTS:Executables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Check POST-conditions.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{3614C6F6-D9F7-4B10-BA98-A35A8839030D}"
          DTS:EventID="631204784"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{DACA6D73-B553-4341-A204-4F6A5B4FE09A}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check POST-conditions.EventHandlers[OnPostExecute]\Event - End executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{4E58EFBF-97E8-4FE1-A4FF-B79F81AC3637}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - End executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='complete',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Information'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='complete',@source_id='', @level='Information'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Check PRE-conditions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{95436408-CFAD-46DB-88A6-46BDC22DED41}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check PRE-conditions">
      <DTS:Variables />
      <DTS:Executables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Check PRE-conditions.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{D3246CAE-4325-4F8E-8F91-26593FC6D032}"
          DTS:EventID="631219344"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{FD2BFA01-2E7C-4182-8F37-A8763B1FC8FE}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check PRE-conditions.EventHandlers[OnPostExecute]\Event - Start executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1A413917-A1F2-4ECE-AFC1-3F53867EBFB0}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - Start executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='start',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Information'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='start',@source_id='', @level='Information'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute Feature"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{76FD16C7-F7E8-440B-963F-E2B6B7D35854}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute Feature">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{924844B4-E307-4BA7-95F1-57439B690C16}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
            DTS:DTSID="{EA8B6324-8E1C-40D9-96A1-6EA21AE11F38}"
            DTS:ObjectName="{EA8B6324-8E1C-40D9-96A1-6EA21AE11F38}">
            <DTS:ObjectData>
              <FEEFVE
                VariableName="User::cfg_pkg_ScoringParams" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Merge into company score"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{DFC337B2-E1FD-4FAB-AFBF-617D6B3E092C}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge into company score"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{9C26136A-959C-4DF5-A4CE-01EE5EED7730}"
                  SQLTask:SqlStatementSource="MERGE INTO company_score AS t1_target&#xA;USING&#xA;(&#xA;&#x9;SELECT ? as score_label, ? as data_type&#xA;) AS t2_source ON t1_target.score_label=t2_source.score_label&#xA;WHEN NOT MATCHED BY TARGET THEN&#xA;&#x9;&#x9;INSERT(score_label,data_type)&#xA;&#x9;&#x9;VALUES(t2_source.score_label,t2_source.data_type)&#xA;;&#xA;SELECT&#xA;&#x9;score_generic_name, case when c.COLUMN_NAME is null then 0 else 1 end as exists_in_frontend_table&#xA;from&#xA;&#x9;company_score cs left outer join&#xA;&#x9;(select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME='DIM_COMPANYLONGLIST_WEB') c ON c.COLUMN_NAME=cs.score_generic_name&#xA;where&#xA;&#x9;score_label=?"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::this_ScoreGenericName" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="1"
                    SQLTask:DtsVariableName="User::this_ScoreExists" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::this_ScoringLabel"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::this_ScoreDataType"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::this_ScoringLabel"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Parse ScoringParams"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{99D7FF33-AB16-496D-A9DD-7122B5267174}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Parse ScoringParams"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_6e2028b97cf649c59343e8daf18d4b38"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMDatahandlerDB,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_CMProjectDB,User::cfg_tpl_jsonConfiguration,System::PackageName,User::this_ScoringParam"
                  ReadWriteVariables="User::this_CompanyScore,User::this_ScoreDataType,User::this_ScoringLabel,User::this_ScoringType">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6e2028b97cf649c59343e8daf18d4b38")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_6e2028b97cf649c59343e8daf18d4b38")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Reflection;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig.Params;
#endregion

namespace ST_559326cac0cd4b8887c2ad7e2edac234
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        public void Main()
        {
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetupLogger();
                deloitte.SetNonNullUserVariablesFor<ScoringParam>("User::this_ScoringParam");
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_6e2028b97cf649c59343e8daf18d4b38</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_6e2028b97cf649c59343e8daf18d4b38</msb:DisplayName>
		<msb:ProjectId>{F885CB10-36A1-4392-8BC4-4EB8DD267E3F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_6e2028b97cf649c59343e8daf18d4b38.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6e2028b97cf649c59343e8daf18d4b38.Properties.Settings.get_Default():ST_6e2028b97cf649c59343e8daf18d4b38.Properties.Sett" +
    "ings")]

namespace ST_6e2028b97cf649c59343e8daf18d4b38.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_6e2028b97cf649c59343e8daf18d4b38.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{153C0A58-084B-44E3-B4B6-DF9F8AA145E4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_6e2028b97cf649c59343e8daf18d4b38</RootNamespace>
    <AssemblyName>ST_6e2028b97cf649c59343e8daf18d4b38</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_7.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6e2028b97cf649c59343e8daf18d4b38.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6e2028b97cf649c59343e8daf18d4b38.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6e2028b97cf649c59343e8daf18d4b38.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6e2028b97cf649c59343e8daf18d4b38.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6e2028b97cf649c59343e8daf18d4b38.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_6e2028b97cf649c59343e8daf18d4b38.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOK22lcAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAGi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMgtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAIA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD8
LQAAAAAAAEgAAAACAAUADCEAAAQMAAABAAAAAAAAABAtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgA2AAAAAQAAEQIoEAAACnMRAAAKCgZvEgAACgZyAQAA
cG8BAAAr3goGLAYGbxQAAArcAigQAAAKFm8VAAAKKgAAARAAAAIADAATHwAKAAAAAB4CKBYAAAoq
HgIoFwAACiqufgEAAAQtHnIxAABw0AMAAAIoGAAACm8ZAAAKcxoAAAqAAQAABH4BAAAEKhp+AgAA
BCoeAoACAAAEKhp+AwAABCoeAigbAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAzAMAACN+AAA4BAAAsAUAACNTdHJpbmdzAAAAAOgJAACkAAAAI1VT
AIwKAAAQAAAAI0dVSUQAAACcCgAAaAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQsAAAD6ATMAFgAA
AQAAAB4AAAAFAAAABgAAAAkAAAABAAAAGwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAE
AAAAAQAAAAEAAAABAAAAAABtAwEAAAAAAAYAFQJoBAYApAJoBAYAYQFVBA8A3AQAAAYAjgHvAwYA
+AHvAwYA2QHvAwYAiwLvAwYANQLvAwYATgLvAwYApQHvAwYAwAHIAgoAaQIcAwoA2AAcAw4AlAXi
AgYAqQOiAwYARAFVBAYAcgWiAwYAEQSIBAYAAQTaAxIAFAFXAxIAdQFXAxIA9ADFAwYAKQFoBAoA
RQMcAw4AlQMjBQYAcwCiAwYAowCiAwYAfwCiAwYApwXvAwAAAABJAAAAAAABAAEAAQAQALoDAQA5
AAEAAQAAABAAjwTrBEkAAQADAAABEAAaBesEXQADAAcAAwEAAGQFAABBAAQACgARAK4DbgARAMgA
cgARAGMAdgAGBlIAegBWgFQFfQBWgKgAfQBQIAAAAACGAMADBgABAKQgAAAAAIYYSAQGAAEArCAA
AAAAgxhIBAYAAQC0IAAAAACTCA0EgQABAOAgAAAAAJMIsACGAAEA5yAAAAAAkwi8AIsAAQDvIAAA
AACWCHkFkQACAPYgAAAAAIYYSAQGAAIA/iAAAAAAkRhOBJYAAgAAAAEAwgIJAEgEAQARAEgEBgAZ
AEgECgApAEgEEAAxAEgEEAA5AEgEEABBAEgEEABJAEgEEABRAEgEEABZAEgEEABhAEgEEABpAEgE
BgCJAEgEBgCxAEgEFQDBAEgEBgBxAFwFIAB5AEgEJQB5ACEEBgB5AC0EKwDZAAwBBgDJAIUFAQBx
AEgEBgCRAEgEBgDhAJEANgDhAKMFPQCZAEgEQgC5AEgEBgAIABQAZAAIABgAaQApAHMA0QAuAAsA
qQAuABMAsgAuABsA0QAuACMA2gAuACsAAwEuADMAAwEuADsAAwEuAEMA2gAuAEsACQEuAFMAAwEu
AFsAIAFDAGMAaQBJAHMA0QBhAHsAaQBjAGsAaQAbAAMAAQAEAAMAAAARBJoAAADQAJ8AAAB9BaQA
AgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAADWF0F3AAAAAAAAJQAAAAQAAAAAAAAAAAAA
AEkAWgAAAAAACwAAAAAAAAAAAAAAUgD9AgAAAAADAAAAAAAAAAAAAABbAOICAAAAAAQAAAAAAAAA
AAAAAEkAogMAAAAAAAAAAAEAAACZBAAABQACACcAMQAAAAAAAFNUXzU1OTMyNmNhYzBjZDRiODg4
N2MyYWQ3ZTJlZGFjMjM0AFNUXzZlMjAyOGI5N2NmNjQ5YzU5MzQzZThkYWYxOGQ0YjM4ADxNb2R1
bGU+AHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAElEaXNwb3NhYmxlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARGVsb2l0dGUuUGlwZWxpbmVGcmFtZXdv
cmsATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFNUXzZlMjAyOGI5N2NmNjQ5YzU5MzQzZThkYWYxOGQ0YjM4LmRsbABTY29yaW5nUGFyYW0AU3lz
dGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAFNldHVwTG9nZ2VyAFNldE5vbk51bGxVc2VyVmFyaWFibGVzRm9yAC5jdG9yAC5j
Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNUXzZlMjAyOGI5N2NmNjQ5YzU5MzQzZThkYWYxOGQ0YjM4LlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF82ZTIwMjhiOTdjZjY0
OWM1OTM0M2U4ZGFmMThkNGIzOC5Qcm9wZXJ0aWVzAFNldHRpbmdzAERlbG9pdHRlLlBpcGVsaW5l
RnJhbWV3b3JrLlBsYXRmb3JtQ29uZmlnLlBhcmFtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQARGVsb2l0dGVTY3JpcHQAZ2V0
X0Fzc2VtYmx5AAAvVQBzAGUAcgA6ADoAdABoAGkAcwBfAFMAYwBvAHIAaQBuAGcAUABhAHIAYQBt
AABxUwBUAF8ANgBlADIAMAAyADgAYgA5ADcAYwBmADYANAA5AGMANQA5ADMANAAzAGUAOABkAGEA
ZgAxADgAZAA0AGIAMwA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAAk4yY/Tx/wEGLP54jlxj2eQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERVQQHARI9BCAAEmUF
IAEBEmUFMAEBAQ4ECgESaQYAARJxEXUEIAASeQYgAgEOEnkIt3pcVhk04IkIiYRdzYCAzJEI+QI6
Ng3oSwwEAAAAAAQBAAAAAwYSTQMGElEDBhIQAgYIAwYRFAQAABJNBAAAElEFAAEBElEEAAASEAMA
AAEECAASTQQIABJRBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUXzZlMjAyOGI5N2NmNjQ5YzU5MzQzZThkYWYxOGQ0YjM4AAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMTYAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNLQAAADOyu++AQAAAJEAAABsU3lz
dGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwg
Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5S
ZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADwLQAAAAAA
AAAAAAAKLgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/C0AAAAAAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBBd9YXAAABAEF31hc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADYAZQAyADAAMgA4AGIAOQA3AGMAZgA2ADQAOQBjADUAOQAzADQAMwBlADgAZABh
AGYAMQA4AGQANABiADMAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADEAMAAyAC4AMwAwADUAMgA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADYAZQAyADAAMgA4AGIAOQA3AGMAZgA2ADQAOQBjADUAOQAzADQAMwBlADgAZABhAGYA
MQA4AGQANABiADMAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANgBlADIAMAAyADgAYgA5ADcAYwBmADYANAA5AGMANQA5ADMANAAzAGUA
OABkAGEAZgAxADgAZAA0AGIAMwA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADYAZQAyADAAMgA4AGIAOQA3AGMAZgA2ADQAOQBjADUAOQAzADQAMwBlADgA
ZABhAGYAMQA4AGQANABiADMAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAxADAAMgAuADMAMAA1ADIAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADAAMgAuADMAMAA1ADIAOQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAcPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Sequence Container"
              DTS:CreationName="STOCK:SEQUENCE"
              DTS:Description="Sequence Container"
              DTS:DTSID="{02F9FEAB-FAD1-4FCE-B154-093FC67037E1}"
              DTS:ExecutableType="STOCK:SEQUENCE"
              DTS:LocaleID="-1"
              DTS:ObjectName="Sequence Container">
              <DTS:Variables />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Insert this scoring string in Manual Scoring action"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{f5be5b08-f9ea-47a9-b245-3faab03fdae3}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Insert this scoring string in Manual Scoring action"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="2">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{9C26136A-959C-4DF5-A4CE-01EE5EED7730}"
                      SQLTask:SqlStatementSource="insert into manual_scoring_action (score_label,scoring_string,executed_by,[status]) values(?,?,?,'Queued')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::this_ScoringLabel"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="130"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::this_CompanyScore"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="130"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="User::cfg_pkg_Creator"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="130"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score"
                  DTS:CreationName="Microsoft.Pipeline"
                  DTS:DelayValidation="True"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{c82ee06a-7510-4e08-a7d1-47d197e2ef6d}"
                  DTS:ExecutableType="Microsoft.Pipeline"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="String - Manual Score"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <pipeline
                      version="1">
                      <components>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name"
                          componentClassID="Microsoft.DerivedColumn"
                          contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                          name="Add Score Name"
                          usesDispositions="true">
                          <inputs>
                            <input
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Inputs[Derived Column Input]"
                              description="Input to the Derived Column Transformation"
                              name="Derived Column Input">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Output]"
                              description="Default Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              name="Derived Column Output"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Output].Columns[score_name]"
                                  dataType="wstr"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  length="50"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Output].Columns[score_name]"
                                  name="score_name"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">(DT_WSTR,50)@[User::this_ScoringLabel]</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">(DT_WSTR,50)@[User::this_ScoringLabel]</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Output].Columns[score_exists]"
                                  dataType="bool"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Output].Columns[score_exists]"
                                  name="score_exists"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">@[User::this_ScoreExists]</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">@[User::this_ScoreExists]</property>
                                  </properties>
                                </outputColumn>
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Error Output]"
                              description="Error Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="Derived Column Error Output"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split"
                          componentClassID="Microsoft.ConditionalSplit"
                          contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                          name="Conditional Split"
                          usesDispositions="true">
                          <inputs>
                            <input
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Inputs[Conditional Split Input]"
                              description="Input to the Conditional Split Transformation"
                              name="Conditional Split Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Inputs[Conditional Split Input].Columns[score_exists]"
                                  cachedDataType="bool"
                                  cachedName="score_exists"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Output].Columns[score_exists]" />
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Outputs[Score Exists]"
                              description="Output 1 of the Conditional Split Transformation"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              exclusionGroup="1"
                              name="Score Exists"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Inputs[Conditional Split Input]"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                                  name="Expression">#{Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Output].Columns[score_exists]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Specifies the friendly version of the expression. This expression version uses column names."
                                  expressionType="Notify"
                                  name="FriendlyExpression">score_exists</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                                  name="EvaluationOrder">0</property>
                              </properties>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Outputs[Conditional Split Default Output]"
                              description="Default Output of the Conditional Split Transformation"
                              exclusionGroup="1"
                              name="Conditional Split Default Output"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Inputs[Conditional Split Input]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  name="IsDefaultOut">true</property>
                              </properties>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Outputs[Conditional Split Error Output]"
                              description="Error Output of the Conditional Split Transformation"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="Conditional Split Error Output"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Inputs[Conditional Split Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings"
                          componentClassID="Microsoft.OLEDBSource"
                          contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                          description="OLE DB Source"
                          name="Current Backlog of Scoring strings"
                          usesDispositions="true"
                          version="7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[dbo].[manual_scoring_action]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                            <property
                              dataType="System.String"
                              description="The variable that contains the SQL command to be executed."
                              name="SqlCommandVariable">User::sql_GetProcessingManualScoreString</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">false</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.String"
                              description="The mappings between the parameters in the SQL command and variables."
                              name="ParameterMapping"></property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                              connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Output]"
                              name="OLE DB Source Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Output].Columns[id]"
                                  dataType="i4"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Output].ExternalColumns[id]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Output].Columns[id]"
                                  name="id"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Output].Columns[scoring_string]"
                                  dataType="nText"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Output].ExternalColumns[scoring_string]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Output].Columns[scoring_string]"
                                  name="scoring_string"
                                  truncationRowDisposition="FailComponent" />
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Output].ExternalColumns[id]"
                                  dataType="i4"
                                  name="id" />
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Output].ExternalColumns[scoring_string]"
                                  dataType="nText"
                                  name="scoring_string" />
                              </externalMetadataColumns>
                            </output>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Error Output]"
                              isErrorOut="true"
                              name="OLE DB Source Error Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Error Output].Columns[id]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Error Output].Columns[id]"
                                  name="id" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Error Output].Columns[scoring_string]"
                                  dataType="nText"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Error Output].Columns[scoring_string]"
                                  name="scoring_string" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Dynamic column-name update"
                          componentClassID="Microsoft.ManagedComponentHost"
                          contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                          description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                          name="Dynamic column-name update"
                          version="8">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Stores the source code of the component"
                              isArray="true"
                              name="SourceCode"
                              state="cdata">
                              <arrayElements
                                arrayElementCount="30">
                                <arrayElement
                                  dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PlatformDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PlatformDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ProjectDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ProjectDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String cfgslaComponentID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ComponentID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerVersion
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerVersion"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisScoreGenericName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_ScoreGenericName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    IDTSConnectionManager100 myProjectConnectionManager;
    SqlConnection myProjectConnection;
    IDTSConnectionManager100 myPlatformConnectionManager;
    SqlConnection myPlatformConnection;
    string componentid;
    string dthVersion;
    string updateSql;
    private void LogEntry(string sourceid, string status, string msg)
    {
        using (SqlCommand cmd = new SqlCommand("nlh.log_addEntry", myPlatformConnection))
        {
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("@component", "CompanyScoringSynchronous.dtsx");
            cmd.Parameters.AddWithValue("@source_type", "SCRIPT");
            cmd.Parameters.AddWithValue("@source_name", "Update longlist table");
            cmd.Parameters.AddWithValue("@source_id", sourceid);
            cmd.Parameters.AddWithValue("@message", msg);
            cmd.Parameters.AddWithValue("@action", "EXECUTE");
            cmd.Parameters.AddWithValue("@status", status);

            cmd.ExecuteNonQuery();
        }
    }

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        myProjectConnectionManager = this.Connections.ProjectDB;
        myProjectConnection = (SqlConnection)myProjectConnectionManager.AcquireConnection(null);
        myPlatformConnectionManager = this.Connections.PlatformDB;
        myPlatformConnection = (SqlConnection)myPlatformConnectionManager.AcquireConnection(null);

        componentid = (string)Variables.cfgslaComponentID;
        dthVersion = Variables.cfgslaDatahandlerVersion;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        myProjectConnectionManager.ReleaseConnection(myProjectConnection);
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string companyId = Row.companyid;
        int blobLength = Convert.ToInt32(Row.scorevalue.Length);
        byte[] blobData = Row.scorevalue.GetBlobData(0, blobLength);
        string ScoringString = Encoding.Unicode.GetString(blobData);

        updateSql = "UPDATE DIM_COMPANYLONGLIST_WEB SET [" + Variables.thisScoreGenericName + "]='" + ScoringString.Replace("'","''") + "' WHERE companyPrimKey='" + companyId + "'";
        LogEntry(componentid, "EXECUTE", updateSql);

        SqlCommand sqlc = new SqlCommand(updateSql, myProjectConnection);
        sqlc.ExecuteNonQuery();
    }

}
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String companyid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool companyid_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public BlobColumn scorevalue
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[1]];
        }
    }
    public bool scorevalue_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1385539cc3b5445ca08802db042832a7.Properties.Settings.get_Default():SC_1385539cc3b5445ca08802db042832a7.Properties.Sett" +
    "ings")]

namespace SC_1385539cc3b5445ca08802db042832a7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[SC_1385539cc3b5445ca08802db042832a7.csproj]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0cbb91f9-50b2-4bb7-a6d7-8739d788bbb9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_1385539cc3b5445ca08802db042832a7</RootNamespace>
    <AssemblyName>SC_1385539cc3b5445ca08802db042832a7</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_1385539cc3b5445ca08802db042832a7" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Project]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_1385539cc3b5445ca08802db042832a7</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_1385539cc3b5445ca08802db042832a7</msb:DisplayName>
		<msb:ProjectId>{9E1C733F-6114-4894-9475-59CFB3959486}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_1385539cc3b5445ca08802db042832a7.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_1385539cc3b5445ca08802db042832a7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_1385539cc3b5445ca08802db042832a7")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1385539cc3b5445ca08802db042832a7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1385539cc3b5445ca08802db042832a7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1385539cc3b5445ca08802db042832a7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_1385539cc3b5445ca08802db042832a7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_1385539cc3b5445ca08802db042832a7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                              </arrayElements>
                            </property>
                            <property
                              dataType="System.String"
                              description="Stores the binary representation of the component"
                              isArray="true"
                              name="BinaryCode"
                              state="cdata">
                              <arrayElements
                                arrayElementCount="2">
                                <arrayElement
                                  dataType="System.String"><![CDATA[SC_1385539cc3b5445ca08802db042832a7.dll]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKYjRVgAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAACj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALg8AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAEB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADs
PAAAAAAAAEgAAAACAAUAfCQAAIQXAAABAAAAAAAAAAA8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwC6AAAAAQAAEXIBAABwAnsEAAAEcxAAAAoKBhpvEQAA
CgZvEgAACnIjAABwcjkAAHBvEwAACiYGbxIAAApydwAAcHKRAABwbxMAAAomBm8SAAAKcp8AAHBy
uQAAcG8TAAAKJgZvEgAACnLlAABwA28TAAAKJgZvEgAACnL7AABwBW8TAAAKJgZvEgAACnINAQBw
ch0BAHBvEwAACiYGbxIAAApyLQEAcARvEwAACiYGbxQAAAom3goGLAYGbxUAAArcKgAAARAAAAIA
EQCerwAKAAAAABMwAwB5AAAAAAAAAAIoFgAACgICewgAAARvEwAABn0BAAAEAgJ7AQAABBRvFwAA
CnQPAAABfQIAAAQCAnsIAAAEbxIAAAZ9AwAABAICewMAAAQUbxcAAAp0DwAAAX0EAAAEAgJ7CQAA
BG8VAAAGfQUAAAQCAnsJAAAEbxYAAAZ9BgAABCpiAigYAAAKAnsBAAAEAnsCAAAEbxkAAAoqAAAT
MAcAtwAAAAIAABEDbwcAAAYKA28JAAAGbxoAAAooGwAACgsDbwkAAAYWB28cAAAKDCgdAAAKCG8e
AAAKDQIdjSUAAAElFnI9AQBwoiUXAnsJAAAEbxcAAAaiJRhyhwEAcKIlGQlyjwEAcHKTAQBwbx8A
AAqiJRpymQEAcKIlGwaiJRxyjwEAcKIoIAAACn0HAAAEAgJ7BQAABHIdAQBwAnsHAAAEKAEAAAYC
ewcAAAQCewIAAARzEAAACm8UAAAKJioeAigNAAAGKioCAwQFKCEAAAoqUgJ7IgAACgJ7IwAAChaU
byQAAAoqIgIWKCUAAAoqZgJ7IgAACgJ7IwAACheUbyYAAAp0FAAAASoiAhcoJQAACioeAignAAAK
Kh4CKCgAAAoqfgIoKQAACgICcxEAAAZ9CAAABAICcxQAAAZ9CQAABCqSBHLLAQBwGm8qAAAKLBUC
BQIDKCsAAAoOBHMGAAAGbw8AAAYqSisHAgNvEAAABgNvCwAABi3xKgYqOgIoLAAACgIDfQoAAAQq
ggJ7CgAABG8tAAAKby4AAApy2wEAcG8vAAAKbzAAAAoqggJ7CgAABG8tAAAKby4AAApy8QEAcG8v
AAAKbzAAAAoqOgIoLAAACgIDfQsAAAQqlgJ7CwAABG8xAAAKcgUCAHBvMgAACigzAAAKbzQAAAp0
JQAAASqWAnsLAAAEbzEAAApyLQIAcG8yAAAKKDMAAApvNAAACnQlAAABKpYCewsAAARvMQAACnJj
AgBwbzIAAAooMwAACm80AAAKdCUAAAEqHgIoLAAACiqufgwAAAQtHnKPAgBw0AcAAAIoNQAACm82
AAAKczcAAAqADAAABH4MAAAEKhp+DQAABCoeAoANAAAEKhp+DgAABCoeAig4AAAKKi5zHQAABoAO
AAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAFQHAAAjfgAAwAcAAGAK
AAAjU3RyaW5ncwAAAAAgEgAABAMAACNVUwAkFQAAEAAAACNHVUlEAAAANBUAAFACAAAjQmxvYgAA
AAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAwAAAACAAAAA4AAAAeAAAAEAAAADgAAAAQAAAA
AgAAAAUAAAAMAAAADQAAAAEAAAAHAAAAAQAAAAAAygQBAAAAAAAGAJMD5gcGACcE5gcGAN8C0wcP
AFoIAAAGAAwDqwUGAHYDqwUGAFcDqwUGAA4EqwUGALMDqwUGAMwDqwUGACMDqwUGAD4DgQQKAOcD
GQIOAGYAaAcSABgGKwkSAHwBKwkKAPoGGQIWAOsGGQIKAH8GGQIWAE4FGQIKAF8JGQIGAAwJMAUG
AMIC0wcGAAsHBggGAHMGlgUaAJICtAQaAPMCtAQaAHICgQUGAKcC5gcSAHIBTwYSAD4CGAESAN0F
KwkSALkHKwkGAKsBMAUGAIwJMAUGAHgEyQkGAJ4EMAUGAGIGMAUeAAEAkAceACoAkAceAE0AkAcO
AH8AaAcOABoAaAdXAOkJAAAOAJAAaAcGAEUCMAUGALcBMAUGADwKqwUAAAAA1AAAAAAAAQABAAEA
EABDBQAAEAABAAEAAQAQAN4GAABFAAgABgABABAAQQkAAFUACAANAAEAEADjCAAAWQAKABEAAQAQ
AKQIAABZAAsAFAAAABAADQhpCFkADAAYAAABEADTCGkIcQAOABwAAQBNBwcBAQA7BgsBAQAxBwcB
AQAmBgsBAQBYAQ8BAQBZBQ8BAQAdBQ8BBgDjCBIBBgCkCBYBAQBPCRoBAQBPCRoBEQA3BR4BEQBi
AiIBEQCPASYBUCAAAAAAgQBVCioBAQAoIQAAAADGAEUEBgAEAK0hAAAAAMYAUAQGAAQAyCEAAAAA
xgAZCjEBBACLIgAAAACGGMYHBgAFAJMiAAAAAIYYxgd5AAUAniIAAAAAhghkATcBCACzIgAAAACG
CPIEmgAIALwiAAAAAIYIaQQ7AQgA1iIAAAAAhggHBZoACADfIgAAAACGADAKmgAIAOciAAAAAIYA
EwmaAAgA7yIAAAAAhhjGBwYACAAPIwAAAADGALwJQAEIADQjAAAAAMYBtQkxAQwARyMAAAAAxgEZ
CjEBDQBJIwAAAACGGMYHSgEOAFgjAAAAAIYI3QC/AA8AeSMAAAAAhgjsAL8ADwCaIwAAAACGGMYH
SgEPAKkjAAAAAIYI+gA3ARAAzyMAAAAAhghkBTcBEAD1IwAAAACGCNsBNwEQABskAAAAAIMYxgcG
ABAAIyQAAAAAkwgHB1ABEABPJAAAAACTCEoCVQEQAFYkAAAAAJMIVgJaARAAXiQAAAAAlggfCWAB
EQBlJAAAAACGGMYHBgARAG0kAAAAAJEYzAdlAREAAAABAE8BAAACAP4IAAADAKUEAAABADQKAAAB
AAAHAAACAK4IAAADAI0GAAABABABAAACAPQBAAADAAAHAAAEAI0GAAABAAAHAAABADQKAAABAGUJ
AAABAGUJAAABAHIECQDGBwEAEQDGBwYAGQDGBwoAKQDGBxAAMQDGBxAAOQDGBxAAQQDGBxAASQDG
BxAAUQDGBxAAWQDGBxAAYQDGBxAAaQDGBwYAuQDGBwYA2QDGBxUA6QDGBwYAgQDGByAA8QA6AicA
gQDvCC0AAQFcBDMA8QBFCjsAEQGKAgYAqQBFBAYAcQD0BT8AqQBQBAYAcQAGBkQAoQCpBFEAGQGo
AFUAoQA6AVoAIQGfAWEAIQGbBGcAKQGHAW0AKQEFCXMAiQDGB3kAiQAAB4MAiQCuCIcAkQCbBIsA
iQAWBZAAkQAnBZUAiQAwCpoAiQATCZoAqQDGBwYAKQHcCJ4AqQDCCKYAsQDGBwYAqQAkAawAOQG9
BbIAQQH+AbgASQEbB78AqQCYCMQAUQEnBcoAqQAECtEAWQHVCdcAcQHJAd4AcQE4CucAwQDGB+0A
4QDGBwYALgALAIoBLgATAJMBLgAbALIBLgAjALsBLgArAOQBLgAzAOQBLgA7AOQBLgBDALsBLgBL
AOoBLgBTAOQBLgBbAAECQwBjAEkC4wBrAEkCSQFzALIBaQFzALIBwQF7AEkCGwBJAAMAAQAFAAUA
BgAHAAcACgAIAAwAAABoAWkBAAD2BG0BAABtBHEBAAALBW0BAADhAHYBAADwAHYBAAD+AGkBAABo
BWkBAADfAWkBAAALB3sBAABqAoABAAAjCYUBAgAHAAMAAgAIAAUAAgAJAAcAAgAKAAkAAgASAAsA
AgATAA0AAgAVAA8AAgAWABEAAgAXABMAAgAZABUAAgAaABcAAQAbABcAAgAcABkABIAAAAEAAAAn
GNtBAAAAAAAAsAAAAAQAAAAAAAAAAAAAAPUARgEAAAAACwAAAAAAAAAAAAAA/gBvCQAAAAALAAAA
AAAAAAAAAAD+AJcGAAAAAAQAAAAAAAAAAAAAAPUAGAEAAAAACwAAAAAAAAAAAAAA/gCUCQAAAAAE
AAAAAAAAAAAAAAD1ADAFAAAAAAsAAAAAAAAAAAAAAP4AugYAAAAAAAAAAAEAAAAXCAAAAAAASURU
U0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVudGltZUNvbm5lY3Rp
b25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1h
bmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABUb0ludDMy
AFNDXzEzODU1MzljYzNiNTQ0NWNhMDg4MDJkYjA0MjgzMmE3ADxNb2R1bGU+AGdldF9QbGF0Zm9y
bURCAGdldF9Qcm9qZWN0REIAZ2V0X2NmZ3NsYUNvbXBvbmVudElEAElucHV0SUQAU3lzdGVtLkRh
dGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAEdldEJsb2JEYXRhAG1zY29ybGliAHNvdXJjZWlkAGNv
bXBvbmVudGlkAGdldF9jb21wYW55aWQARGJDb21tYW5kAFNxbENvbW1hbmQAUmVwbGFjZQBkZWZh
dWx0SW5zdGFuY2UAZ2V0X1VuaWNvZGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUAZ2V0X3RoaXNTY29yZUdlbmVyaWNOYW1lAElucHV0TmFtZQBHZXRSdW50
aW1lQ29ubmVjdGlvbkJ5TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBzZXRf
Q29tbWFuZFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAZ2V0X3Njb3JldmFsdWUA
RW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAbXNnAGdldF9MZW5n
dGgAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzEzODU1MzljYzNiNTQ0NWNhMDg4MDJkYjA0Mjgz
MmE3LmRsbABnZXRfY29tcGFueWlkX0lzTnVsbABnZXRfc2NvcmV2YWx1ZV9Jc051bGwAdXBkYXRl
U3FsAGdldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAEJsb2JDb2x1bW4AZHRo
VmVyc2lvbgBnZXRfY2Znc2xhRGF0YWhhbmRsZXJWZXJzaW9uAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVj
dGlvbkNvbGxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBS
ZWxlYXNlQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAG15UGxhdGZvcm1Db25uZWN0aW9uAG15UHJv
amVjdENvbm5lY3Rpb24AU3lzdGVtLkRhdGEuQ29tbW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVy
ZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50
aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1dDBCdWZmZXIA
UGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5l
Y3Rpb25NYW5hZ2VyAG15UGxhdGZvcm1Db25uZWN0aW9uTWFuYWdlcgBteVByb2plY3RDb25uZWN0
aW9uTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBTcWxQYXJhbWV0ZXIALmN0b3IALmNj
dG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5
c3RlbS5SZXNvdXJjZXMAU0NfMTM4NTUzOWNjM2I1NDQ1Y2EwODgwMmRiMDQyODMyYTcuUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzEzODU1MzljYzNiNTQ0
NWNhMDg4MDJkYjA0MjgzMmE3LlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZl
ckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlv
bnMAZ2V0X1BhcmFtZXRlcnMAc3RhdHVzAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0Rl
ZmF1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50
AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENvbnZlcnQATWlj
cm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABTeXN0ZW0u
VGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9F
dmFsdWF0b3JDb250ZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1i
bHkARXhlY3V0ZU5vblF1ZXJ5AExvZ0VudHJ5AAAAACFuAGwAaAAuAGwAbwBnAF8AYQBkAGQARQBu
AHQAcgB5AAAVQABjAG8AbQBwAG8AbgBlAG4AdAAAPUMAbwBtAHAAYQBuAHkAUwBjAG8AcgBpAG4A
ZwBTAHkAbgBjAGgAcgBvAG4AbwB1AHMALgBkAHQAcwB4AAAZQABzAG8AdQByAGMAZQBfAHQAeQBw
AGUAAA1TAEMAUgBJAFAAVAAAGUAAcwBvAHUAcgBjAGUAXwBuAGEAbQBlAAArVQBwAGQAYQB0AGUA
IABsAG8AbgBnAGwAaQBzAHQAIAB0AGEAYgBsAGUAABVAAHMAbwB1AHIAYwBlAF8AaQBkAAARQABt
AGUAcwBzAGEAZwBlAAAPQABhAGMAdABpAG8AbgAAD0UAWABFAEMAVQBUAEUAAA9AAHMAdABhAHQA
dQBzAABJVQBQAEQAQQBUAEUAIABEAEkATQBfAEMATwBNAFAAQQBOAFkATABPAE4ARwBMAEkAUwBU
AF8AVwBFAEIAIABTAEUAVAAgAFsAAAddAD0AJwABAycAAQUnACcAATEnACAAVwBIAEUAUgBFACAA
YwBvAG0AcABhAG4AeQBQAHIAaQBtAEsAZQB5AD0AJwABD0kAbgBwAHUAdAAgADAAABVQAGwAYQB0
AGYAbwByAG0ARABCAAATUAByAG8AagBlAGMAdABEAEIAACdjAGYAZwBfAHMAbABhAF8AQwBvAG0A
cABvAG4AZQBuAHQASQBEAAA1YwBmAGcAXwBzAGwAYQBfAEQAYQB0AGEAaABhAG4AZABsAGUAcgBW
AGUAcgBzAGkAbwBuAAArdABoAGkAcwBfAFMAYwBvAHIAZQBHAGUAbgBlAHIAaQBjAE4AYQBtAGUA
AHFTAEMAXwAxADMAOAA1ADUAMwA5AGMAYwAzAGIANQA0ADQANQBjAGEAMAA4ADgAMAAyAGQAYgAw
ADQAMgA4ADMAMgBhADcALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAAAJfu/hTkzZdJvuXch8QfouMABCABAQgDIAABBSABARERBCABAQ4FIAEBEWkEBwESQQYgAgEO
Ej0FIAEBEX0FIAASgIEHIAISgIUOHAMgAAgEIAEcHAQgAQEcBwcEDggdBQ4DIAAJBAABCAkGIAId
BQgIBQAAEoCRBSABDh0FBSACDg4OBQABDh0OCSADARJJHQgSTQMGEkkDBh0IBCABDggEIAECCAQg
ARwIAyAAAgcgAgIOEYCZBSABHQgIBSAAEoCdBSAAEoChBiABEoClDgQgABI5BSAAEoCpBiABEoCt
HAUAABKAsQYgARwSgLUIAAESgLkRgL0FIAASgMEHIAIBDhKAwQi3elxWGTTgiQiJhF3NgIDMkQMG
EjkDBhI9AgYOAwYSFAMGEhgDBhJVAwYSYQMGEmUDBhIgBiADAQ4ODgUgAQESDAMgAA4EIAASUQkg
BAEIDhJJEk0FIAEBElUEAAASYQQAABJlBQABARJlBAAAEiADAAABAygADgMoAAIEKAASUQQoABI5
BAgAEmEECAASZQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgB
AAIAAAAAACgBACNTQ18xMzg1NTM5Y2MzYjU0NDVjYTA4ODAyZGIwNDI4MzJhNwAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDE2AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQEAQAAAAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAOA8
AAAAAAAAAAAAAPo8AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADsPAAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABANtBJxgAAAEA20EnGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AMQAzADgANQA1ADMAOQBjAGMAMwBiADUANAA0ADUAYwBhADAAOAA4ADAAMgBkAGIAMAA0ADIA
OAAzADIAYQA3AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQA4
ADMALgAxADYAOAA1ADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
MQAzADgANQA1ADMAOQBjAGMAMwBiADUANAA0ADUAYwBhADAAOAA4ADAAMgBkAGIAMAA0ADIAOAAz
ADIAYQA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAEMAXwAxADMAOAA1ADUAMwA5AGMAYwAzAGIANQA0ADQANQBjAGEAMAA4ADgAMAAyAGQAYgAw
ADQAMgA4ADMAMgBhADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBDAF8AMQAzADgANQA1ADMAOQBjAGMAMwBiADUANAA0ADUAYwBhADAAOAA4ADAAMgBkAGIAMAA0
ADIAOAAzADIAYQA3AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADEAOAAzAC4AMQA2ADgANQA5AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA2ADEAOAAzAC4AMQA2ADgANQA5AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAAw9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                              </arrayElements>
                            </property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                              name="VSTAProjectName"
                              typeConverter="NOTBROWSABLE">SC_1385539cc3b5445ca08802db042832a7</property>
                            <property
                              dataType="System.String"
                              description="Specifies the programming language used by the script."
                              name="ScriptLanguage"
                              typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                            <property
                              dataType="System.String"
                              description="Specifies a comma-separated list of read-only variables."
                              name="ReadOnlyVariables"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerVersion,User::this_ScoreGenericName</property>
                            <property
                              dataType="System.String"
                              description="Specifies a comma-separated list of read/write variables."
                              name="ReadWriteVariables"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                            <property
                              dataType="System.String"
                              description="List of breakpoints present on the script."
                              isArray="true"
                              name="BreakpointCollection"
                              typeConverter="NOTBROWSABLE">
                              <arrayElements
                                arrayElementCount="0" />
                            </property>
                            <property
                              dataType="System.String"
                              description="Checksum to match component metedata against compiled codes."
                              name="MetadataChecksum"
                              typeConverter="NOTBROWSABLE">987d627bb28007a1aaceb5ccb9b0185b</property>
                            <property
                              dataType="System.String"
                              description="Checksum to match component metedata against compiled codes."
                              name="MetadataShaChecksum"
                              typeConverter="NOTBROWSABLE">7ff45c88aed5a408c1bce4419f135d5684571335</property>
                            <property
                              dataType="System.String"
                              name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Dynamic column-name update.Connections[PlatformDB]"
                              connectionManagerID="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                              connectionManagerRefId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                              name="PlatformDB" />
                            <connection
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Dynamic column-name update.Connections[ProjectDB]"
                              connectionManagerID="Package.ConnectionManagers[ProjectDB - ADO.NET]"
                              connectionManagerRefId="Package.ConnectionManagers[ProjectDB - ADO.NET]"
                              name="ProjectDB" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Dynamic column-name update.Inputs[Input 0]"
                              hasSideEffects="true"
                              name="Input 0">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Dynamic column-name update.Inputs[Input 0].Columns[company_id]"
                                  cachedDataType="wstr"
                                  cachedLength="50"
                                  cachedName="company_id"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Outputs[Output 0].Columns[company_id]" />
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Dynamic column-name update.Inputs[Input 0].Columns[score_value]"
                                  cachedDataType="nText"
                                  cachedName="score_value"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Outputs[Output 0].Columns[score_value]" />
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                        </component>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str"
                          componentClassID="Microsoft.OLEDBCommand"
                          contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                          description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                          name="Merge into company_score_str"
                          usesDispositions="true"
                          version="2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              expressionType="Notify"
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">MERGE INTO company_score_str AS t1_target
USING
(
	SELECT ? as company_id, ? as score_name, ? as score_value
) AS t2_source ON t1_target.score_name=t2_source.score_name and t1_target.company_id=t2_source.company_id
WHEN NOT MATCHED BY TARGET THEN
		INSERT(company_id,score_name, score_value) VALUES(t2_source.company_id,t2_source.score_name,t2_source.score_value)
WHEN MATCHED THEN
		UPDATE SET t1_target.company_id=t2_source.company_id,t1_target.score_name=t2_source.score_name,t1_target.score_value=t2_source.score_value
;</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                              connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input]"
                              errorOrTruncationOperation="Command Execution"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="OLE DB Command Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input].Columns[score_value]"
                                  cachedDataType="nText"
                                  cachedName="score_value"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Outputs[Output 0].Columns[score_value]" />
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input].Columns[score_name]"
                                  cachedDataType="wstr"
                                  cachedLength="50"
                                  cachedName="score_name"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Output].Columns[score_name]" />
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input].Columns[company_id]"
                                  cachedDataType="wstr"
                                  cachedLength="50"
                                  cachedName="company_id"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Outputs[Output 0].Columns[company_id]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                                  dataType="wstr"
                                  length="50"
                                  name="Param_0">
                                  <properties>
                                    <property
                                      dataType="System.Int32"
                                      description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                      name="DBParamInfoFlags">65</property>
                                  </properties>
                                </externalMetadataColumn>
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                                  dataType="wstr"
                                  length="50"
                                  name="Param_1">
                                  <properties>
                                    <property
                                      dataType="System.Int32"
                                      description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                      name="DBParamInfoFlags">65</property>
                                  </properties>
                                </externalMetadataColumn>
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                                  dataType="nText"
                                  name="Param_2">
                                  <properties>
                                    <property
                                      dataType="System.Int32"
                                      description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                      name="DBParamInfoFlags">65</property>
                                  </properties>
                                </externalMetadataColumn>
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Outputs[OLE DB Command Output]"
                              exclusionGroup="1"
                              name="OLE DB Command Output"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input]">
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Outputs[OLE DB Command Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="OLE DB Command Error Output"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Multicast"
                          componentClassID="Microsoft.Multicast"
                          contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                          name="Multicast">
                          <inputs>
                            <input
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Multicast.Inputs[Multicast Input 1]"
                              name="Multicast Input 1">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Multicast.Outputs[Multicast Output 1]"
                              deleteOutputOnPathDetached="true"
                              name="Multicast Output 1"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Multicast.Inputs[Multicast Input 1]">
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Multicast.Outputs[Multicast Output 4]"
                              deleteOutputOnPathDetached="true"
                              name="Multicast Output 4"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Multicast.Inputs[Multicast Input 1]">
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Multicast.Outputs[Multicast Output 2]"
                              dangling="true"
                              deleteOutputOnPathDetached="true"
                              name="Multicast Output 2"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Multicast.Inputs[Multicast Input 1]">
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string"
                          componentClassID="Microsoft.ManagedComponentHost"
                          contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                          description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                          name="Parse scoring string"
                          version="8">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Stores the source code of the component"
                              isArray="true"
                              name="SourceCode"
                              state="cdata">
                              <arrayElements
                                arrayElementCount="30">
                                <arrayElement
                                  dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    List<string> scored_company;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        scored_company = new List<string>();
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        int blobLength = Convert.ToInt32(Row.scoringstring.Length);
        byte[] blobData = Row.scoringstring.GetBlobData(0, blobLength);
        var ScoringString = Encoding.Unicode.GetString(blobData);

        string[] scores = ScoringString.Split('|');
        string[] kv;
        foreach (string score in scores)
        {
            kv = score.Split(':');

            if (!scored_company.Contains(kv[0]) && kv[1].Length > 0 )
            {
                scored_company.Add(kv[0]);
                Output0Buffer.AddRow();
                Output0Buffer.id = Row.id;
                Output0Buffer.companyid = kv[0];
                Output0Buffer.scorevalue.AddBlobData(Encoding.Unicode.GetBytes(kv[1]));
                //Output0Buffer.scorevalue = kv[1];
            }
        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

}
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn scoringstring
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool scoringstring_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 id
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn scorevalue
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool scorevalue_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String companyid
    {
        set
        {
            this[1] = value;
        }
    }
    public bool companyid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 id
    {
        set
        {
            this[2] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1c50f4b438e640dfa5a9e865b180184b.Properties.Settings.get_Default():SC_1c50f4b438e640dfa5a9e865b180184b.Properties.Sett" +
    "ings")]

namespace SC_1c50f4b438e640dfa5a9e865b180184b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Project]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_1c50f4b438e640dfa5a9e865b180184b</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_1c50f4b438e640dfa5a9e865b180184b</msb:DisplayName>
		<msb:ProjectId>{798F54F8-635B-47AC-B47B-E66024B7E96C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_1c50f4b438e640dfa5a9e865b180184b.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_1c50f4b438e640dfa5a9e865b180184b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_1c50f4b438e640dfa5a9e865b180184b")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[SC_1c50f4b438e640dfa5a9e865b180184b.csproj]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{24976532-1550-4d6b-aa86-c5138e498746}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_1c50f4b438e640dfa5a9e865b180184b</RootNamespace>
    <AssemblyName>SC_1c50f4b438e640dfa5a9e865b180184b</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_1c50f4b438e640dfa5a9e865b180184b" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1c50f4b438e640dfa5a9e865b180184b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1c50f4b438e640dfa5a9e865b180184b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1c50f4b438e640dfa5a9e865b180184b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_1c50f4b438e640dfa5a9e865b180184b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_1c50f4b438e640dfa5a9e865b180184b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                              </arrayElements>
                            </property>
                            <property
                              dataType="System.String"
                              description="Stores the binary representation of the component"
                              isArray="true"
                              name="BinaryCode"
                              state="cdata">
                              <arrayElements
                                arrayElementCount="2">
                                <arrayElement
                                  dataType="System.String"><![CDATA[SC_1c50f4b438e640dfa5a9e865b180184b.dll]]></arrayElement>
                                <arrayElement
                                  dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHJXl1cAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAujcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGg3AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAwBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACc
NwAAAAAAAEgAAAACAAUAgCMAADATAAABAAAAAAAAALA2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEoCKBAAAAoCcxEAAAp9AQAABCoeAigSAAAKKgATMAUA2QAA
AAEAABEDbwcAAAZvEwAACigUAAAKCgNvBwAABhYGbxUAAAoLKBYAAAoHbxcAAAoXjR4AAAElFh98
nW8YAAAKDRYTBDiLAAAACREEmheNHgAAASUWHzqdbxgAAAoMAnsBAAAECBaabxkAAAotYAgXmm8a
AAAKFjFVAnsBAAAECBaabxsAAAoCewQAAARvFAAABgJ7BAAABANvCQAABm8SAAAGAnsEAAAECBaa
bxAAAAYCewQAAARvDgAABigWAAAKCBeabxwAAApvHQAAChEEF1gTBBEECY5pP2v///8qBioeAigX
AAAGKioCAwQFKB4AAAoqZgJ7HwAACgJ7IAAAChaUbyEAAAp0EgAAASoiAhYoIgAACipSAnsfAAAK
AnsgAAAKF5RvIwAACioiAhcoIgAACioeAigkAAAKKh4CKCUAAAoqJgIXAygmAAAKKloDLAgCFygn
AAAKKnIBAABwcygAAAp6OgIYA4whAAABKCYAAAoqWgMsCAIYKCcAAAoqcgEAAHBzKAAACnoeAigp
AAAKKh4CKCoAAAoqfgIoKwAACgICcx8AAAZ9AgAABAICcyAAAAZ9AwAABCoAABMwBABPAAAAAAAA
AARyngAAcBpvLAAACiwVAgUCAygtAAAKDgRzBgAABm8dAAAGBW8uAAAKLCMCAnsFAAAEF1h9BQAA
BAJ7BQAABBczDAJvGQAABgIoGgAABipuAnsEAAAELBICewQAAARvFQAABgIUfQQAAAQqABMwBQA9
AAAAAgAAERYKKy4EBpQOBHKuAABwKC8AAAozGQIFBpoCBAaUKC0AAAoOBHMNAAAGfQQAAAQGF1gK
BgMyzgJvHAAABipKKwcCA28eAAAGA28LAAAGLfEqOgIoMAAACgIDfQYAAAQqOgIoMAAACgIDfQcA
AAQqHgIoMAAACiqufggAAAQtHnLAAABw0AgAAAIoMQAACm8yAAAKczMAAAqACAAABH4IAAAEKhp+
CQAABCoeAoAJAAAEKhp+CgAABCoeAig0AAAKKi5zJgAABoAKAAAEKkJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAAHAHAAAjfgAA3AcAAOgHAAAjU3RyaW5ncwAAAADEDwAANAEAACNV
UwD4EAAAEAAAACNHVUlEAAAACBEAACgCAAAjQmxvYgAAAAAAAAACAAABVxWiCQkBAAAA+gEzABYA
AAEAAAAlAAAACQAAAAoAAAAnAAAAGAAAADQAAAAQAAAAAgAAAAQAAAANAAAADgAAAAEAAAABAAAA
BAAAAAEAAAAAAMIDAQAAAAAABgCKApIFBgAeA5IFBgDWAX8FDwAGBgAABgADArcEBgBtArcEBgBO
ArcEBgAFA7cEBgCqArcEBgDDArcEBgAaArcEBgA1AmsDCgDeAiMBBgABAHsACgBHBSMBDgA4BSMB
CgAABSMBDgCCBCMBCgAhByMBBgDLBmQEBgC5AX8FBgBYBbIFBgD0BKIEEgCJAawDEgDqAawDEgBx
AY0EBgCeAZIFBgBOB2QEBgBiA5cHBgAYBWQEBgCIA2QEBgDJBGQEBgATAGQEBgDjBGQEBgBEAWQE
BgD1AGQEBgDNB7cEAAAAABkAAAAAAAEAAQABABAAdwQAABQAAQABAAEAEAAdBQAAPQACAAYAAQAQ
ACoFAAA9AAIADQABABAAAwcAAE0AAgAXAAEAEACVBgAAUQAGAB8AAQAQAEQGAABRAAcAIAAAABAA
uQUVBlEACAAhAAABEAB8BhUGaQAKACUAAQDWB9cABgCVBt4ABgBEBuIABgAqBeYAAQCaAOoAAQAR
B+0AAQARB+0AEQBrBPEAEQBhAfUAEQDZAPkAUCAAAAAAxgA8AwYAAQBjIAAAAADGAEcDBgABAGwg
AAAAAMYAqgf9AAEAUSEAAAAAxgC3BgYAAgBTIQAAAACGGGgFBgACAFshAAAAAIYYaAVqAAIAZiEA
AAAAhgiPAwMBBQCAIQAAAACGCDEEiwAFAIkhAAAAAIYIvQBUAAUAniEAAAAAhgjqA4sABQCnIQAA
AACGAMEHiwAFAK8hAAAAAIYA5QaLAAUAWyEAAAAAhhhoBWoABQBmIQAAAACGCFMDAwEIAIAhAAAA
AIYIGwSLAAgAtyEAAAAAhgjLABAACADBIQAAAACGCAYECAEJANghAAAAAIYIxAABAAoA5yEAAAAA
hgj4AwgBCwD+IQAAAACGAKMHBgAMAAYiAAAAAIYA4gYGAAwAryEAAAAAhgDlBosADAAOIgAAAACG
GGgFBgAMADAiAAAAAMYAfgcNAQwAUSEAAAAAxgGpBgYAEACLIgAAAACBAKkABgAQAKgiAAAAAMYA
iwcXARAAUSEAAAAAxgG3BgYAFADxIgAAAADGAXcH/QAUAFEhAAAAAMYBqgf9ABUABCMAAAAAhhho
BSMBFgATIwAAAACGGGgFIwEXACIjAAAAAIMYaAUGABgAKiMAAAAAkwhUBSkBGABWIwAAAACTCEkB
LgEYAF0jAAAAAJMIVQEzARgAZSMAAAAAlgj3BjkBGQBsIwAAAACGGGgFBgAZAHQjAAAAAJEYbgU+
ARkAAAABAMUHAAABAE0FAAACAFcGAAADAA4FAAABAE0FAAACAFcGAAADAA4FAAABAFwDAAABAFwD
AAABAFwDAAABAFwDAAABACIAAAACABkBAAADAE0FAAAEAA4FAAABAK8GAAACAHUFAAADAKEGAAAE
AA4FAAABAE0FAAABAMUHAAABACcHAAABACcHAAABAFwDCQBoBQEAEQBoBQYAGQBoBQoAKQBoBRAA
MQBoBRAAOQBoBRAAQQBoBRAASQBoBRAAUQBoBRAAWQBoBRAAYQBoBRAAaQBoBQYAqQBoBQYAyQBo
BRUA2QBoBQYAmQA8AwYADABoBQYAmQBHAwYAkQChAywA4QAIADAAkQBCADUA6QDpADwA6QCFA0EA
+QDxBkcADACMBk4A+QChA1QADACWAFgA6QBOBl4AkQA2AGQAeQBoBWoAeQBNBXQAeQBXBngAgQBS
BHwAeQBDBIEAgQAQAIYAeQDBB4sAeQDlBosAeQBbBI8AeQBKBAEAAQFoBRAAeQCjBwYAeQDiBgYA
mQBoBQYA+QCFBpUAmQBrBp0AgQDSBosAmQAqAKcAoQBoBQYAGQEHAa4AGQHJB7cAsQBoBb0A0QBo
BQYALgALAGIBLgATAGsBLgAbAIoBLgAjAJMBLgArALwBLgAzALwBLgA7ALwBLgBDAJMBLgBLAMIB
LgBTALwBLgBbANkBQwBjACECAwFrACECQQF7ACECaQFzAIoBiQFzAIoBIQCjAAMAAQAEAAUACAAL
AAkADQAAAJMDQgEAADUERwEAANYASwEAABEERwEAAFcDQgEAAB8ERwEAAM8ATwEAAAoERwEAANYA
SwEAABEERwEAAFgFUwEAAGkBWAEAAPsGXQECAAcAAwACAAgABQACAAkABwACAAoACQACAA4ACwAC
AA8ADQABABAADwABABEAEQABABIAEwABABMAFQACACIAFwACACMAGQABACQAGQACACUAGwAbAASA
AAABAAAAoxfJZQAAAAAAAE4AAAAEAAAAAAAAAAAAAADFAHIAAAAAAAsAAAAAAAAAAAAAAM4AMQcA
AAAACwAAAAAAAAAAAAAAzgBWBwAAAAAEAAAAAAAAAAAAAADFAGQEAAAAAAAAAAABAAAAwwUAAAAA
AExpc3RgMQBUb0ludDMyAEdldEludDMyADxNb2R1bGU+AElucHV0SUQAR2V0T3V0cHV0SUQAQWRk
QmxvYkRhdGEAR2V0QmxvYkRhdGEAU0NfMWM1MGY0YjQzOGU2NDBkZmE1YTllODY1YjE4MDE4NGIA
bXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRkAElucHV0c0ZpbmlzaGVkAE1h
cmtPdXRwdXRzRmluaXNoZWQAZ2V0X2lkAHNldF9pZABzZXRfY29tcGFueWlkAGRlZmF1bHRJbnN0
YW5jZQBnZXRfVW5pY29kZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1
dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9y
QnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBnZXRf
c2NvcmV2YWx1ZQBFbmNvZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBn
ZXRfc2NvcmluZ3N0cmluZwBnZXRfTGVuZ3RoAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18xYzUw
ZjRiNDM4ZTY0MGRmYTVhOWU4NjViMTgwMTg0Yi5kbGwAZ2V0X2lkX0lzTnVsbABzZXRfaWRfSXNO
dWxsAHNldF9jb21wYW55aWRfSXNOdWxsAGdldF9zY29yZXZhbHVlX0lzTnVsbABnZXRfc2Nvcmlu
Z3N0cmluZ19Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VN
YW4AU2NyaXB0TWFpbgBCbG9iQ29sdW1uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3Ry
aW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABDaGFyAElu
cHV0MEJ1ZmZlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRf
UmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ18xYzUw
ZjRiNDM4ZTY0MGRmYTVhOWU4NjViMTgwMTg0Yi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU0NfMWM1MGY0YjQzOGU2NDBkZmE1YTllODY1YjE4MDE4NGIuUHJv
cGVydGllcwBWYXJpYWJsZXMAR2V0Qnl0ZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5J
bmRleGVzAFNldHRpbmdzAEVxdWFscwBDb250YWlucwBDb25uZWN0aW9ucwBCdWZmZXJzAEZpbmlz
aE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBPYmplY3QAZ2V0X0VuZE9mUm93c2V0AFNldEVu
ZE9mUm93c2V0AFNwbGl0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50
AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENvbnZlcnQATWlj
cm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABQcmltZU91
dHB1dABTeXN0ZW0uVGV4dABBZGRSb3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdl
dF9Bc3NlbWJseQBzY29yZWRfY29tcGFueQAAAAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQBy
AHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEA
cwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABp
AG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAwAABxUwBDAF8A
MQBjADUAMABmADQAYgA0ADMAOABlADYANAAwAGQAZgBhADUAYQA5AGUAOAA2ADUAYgAxADgAMAAx
ADgANABiAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAOm/Om0P
uCFNpe4J6VDelesABCABAQgDIAABBSABARERBCABAQ4FIAEBEWEFFRI5AQ4KBwUIHQUdDh0OCAMg
AAkEAAEICQYgAh0FCAgEAAASdQUgAQ4dBQYgAR0OHQMFIAECEwADIAAIBSABARMABSABHQUOBSAB
AR0FCSADARJBHQgSRQMGEkEDBh0IBCABHAgEIAECCAQgAQgIAyAAAgUgAgEIHAcgAgIOEYCJBSAB
HQgIAwcBCAYAAggSRQ4IAAESgI0RgJEFIAASgJUHIAIBDhKAlQi3elxWGTTgiQiJhF3NgIDMkQYG
FRI5AQ4DBhIYAwYSHAMGEhACBggDBhJNAwYSWQMGEl0DBhIkBSABARIMBCAAEkkEIAEBAgkgBAEI
DhJBEkULIAQBCB0IHRJBEkUFIAEBEk0EAAASWQQAABJdBQABARJdBAAAEiQDAAABBCgAEkkDKAAC
AygACAMoAA4ECAASWQQIABJdBAgAEiQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBCAEAAgAAAAAAKAEAI1NDXzFjNTBmNGI0MzhlNjQwZGZhNWE5ZTg2NWIxODAxODRiAAAF
AQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
MAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAQBAAAAAAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAkDcAAAAAAAAAAAAAqjcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJw3AAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAMlloxcAAAEAyWWjFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AMQBjADUAMABmADQAYgA0ADMAOABlADYANAAwAGQAZgBhADUAYQA5AGUAOAA2ADUAYgAx
ADgAMAAxADgANABiAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYA
MAA1ADEALgAyADYAMAA1ADcAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBD
AF8AMQBjADUAMABmADQAYgA0ADMAOABlADYANAAwAGQAZgBhADUAYQA5AGUAOAA2ADUAYgAxADgA
MAAxADgANABiAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAEMAXwAxAGMANQAwAGYANABiADQAMwA4AGUANgA0ADAAZABmAGEANQBhADkAZQA4ADYA
NQBiADEAOAAwADEAOAA0AGIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBDAF8AMQBjADUAMABmADQAYgA0ADMAOABlADYANAAwAGQAZgBhADUAYQA5AGUAOAA2ADUA
YgAxADgAMAAxADgANABiAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA2ADAANQAxAC4AMgA2ADAANQA3AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA2ADAANQAxAC4AMgA2ADAANQA3AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAALw3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                              </arrayElements>
                            </property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                              name="VSTAProjectName"
                              typeConverter="NOTBROWSABLE">SC_1c50f4b438e640dfa5a9e865b180184b</property>
                            <property
                              dataType="System.String"
                              description="Specifies the programming language used by the script."
                              name="ScriptLanguage"
                              typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                            <property
                              dataType="System.String"
                              description="Specifies a comma-separated list of read-only variables."
                              name="ReadOnlyVariables"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                            <property
                              dataType="System.String"
                              description="Specifies a comma-separated list of read/write variables."
                              name="ReadWriteVariables"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                            <property
                              dataType="System.String"
                              description="List of breakpoints present on the script."
                              isArray="true"
                              name="BreakpointCollection"
                              typeConverter="NOTBROWSABLE">
                              <arrayElements
                                arrayElementCount="0" />
                            </property>
                            <property
                              dataType="System.String"
                              description="Checksum to match component metedata against compiled codes."
                              name="MetadataChecksum"
                              typeConverter="NOTBROWSABLE">f054b85f32d0e523bea5406a2505f86d</property>
                            <property
                              dataType="System.String"
                              description="Checksum to match component metedata against compiled codes."
                              name="MetadataShaChecksum"
                              typeConverter="NOTBROWSABLE">e8cc208984545d4a19753fb5e44127d8d1d0e4c9</property>
                            <property
                              dataType="System.String"
                              name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                          </properties>
                          <inputs>
                            <input
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Inputs[Input 0]"
                              hasSideEffects="true"
                              name="Input 0">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Inputs[Input 0].Columns[scoring_string]"
                                  cachedDataType="nText"
                                  cachedName="scoring_string"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Output].Columns[scoring_string]" />
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Inputs[Input 0].Columns[id]"
                                  cachedDataType="i4"
                                  cachedName="id"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Output].Columns[id]" />
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Outputs[Output 0]"
                              hasSideEffects="true"
                              name="Output 0">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Outputs[Output 0].Columns[score_value]"
                                  dataType="nText"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Outputs[Output 0].Columns[score_value]"
                                  name="score_value" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Outputs[Output 0].Columns[company_id]"
                                  dataType="wstr"
                                  length="50"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Outputs[Output 0].Columns[company_id]"
                                  name="company_id" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Outputs[Output 0].Columns[id]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Outputs[Output 0].Columns[id]"
                                  name="id" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Row Count"
                          componentClassID="Microsoft.RowCount"
                          contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                          name="Row Count">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the variable to hold the row count."
                              name="VariableName">User::varRowCount</property>
                          </properties>
                          <inputs>
                            <input
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Row Count.Inputs[Row Count Input 1]"
                              hasSideEffects="true"
                              name="Row Count Input 1">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Row Count.Outputs[Row Count Output 1]"
                              name="Row Count Output 1"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Row Count.Inputs[Row Count Input 1]">
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[Derived Column Output]"
                          endId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Row Count.Inputs[Row Count Input 1]"
                          name="Derived Column Output"
                          startId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Outputs[Derived Column Output]" />
                        <path
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[Multicast Output 1]"
                          endId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str.Inputs[OLE DB Command Input]"
                          name="Multicast Output 1"
                          startId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Multicast.Outputs[Multicast Output 1]" />
                        <path
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[Multicast Output 4]"
                          endId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Inputs[Conditional Split Input]"
                          name="Multicast Output 4"
                          startId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Multicast.Outputs[Multicast Output 4]" />
                        <path
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[OLE DB Source Output]"
                          endId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Inputs[Input 0]"
                          name="OLE DB Source Output"
                          startId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings.Outputs[OLE DB Source Output]" />
                        <path
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[Output 0]"
                          endId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name.Inputs[Derived Column Input]"
                          name="Output 0"
                          startId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string.Outputs[Output 0]" />
                        <path
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[Row Count Output 1]"
                          endId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Multicast.Inputs[Multicast Input 1]"
                          name="Row Count Output 1"
                          startId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Row Count.Outputs[Row Count Output 1]" />
                        <path
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[Score Exists]"
                          endId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Dynamic column-name update.Inputs[Input 0]"
                          name="Score Exists"
                          startId="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split.Outputs[Score Exists]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Execute Feature\Foreach Loop Container\Sequence Container.PrecedenceConstraints[Constraint 1]"
                  DTS:CreationName=""
                  DTS:DTSID="{3F44A8C1-5566-4E34-8BFF-5A91DE3AA121}"
                  DTS:EvalOp="3"
                  DTS:Expression="@[User::this_ScoreDataType]==&quot;nvarchar&quot;"
                  DTS:From="Package\Execute Feature\Foreach Loop Container\Sequence Container\Insert this scoring string in Manual Scoring action"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint 1"
                  DTS:To="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{EF610CDC-303A-4470-BF05-AA63C2A9C938}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_ScoringType]==&quot;ManualScore&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Parse ScoringParams"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Sequence Container" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{2BA4A8BE-D0A6-4347-AA49-5DB3E4173315}"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Parse ScoringParams"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Merge into company score" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{744C72B2-8B67-4C75-9866-B7FCD49E1BAD}"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Merge into company score"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Sequence Container" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{4E282527-9153-4DD9-8413-7D4A18211066}"
              DTS:ObjectName="{4E282527-9153-4DD9-8413-7D4A18211066}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::this_ScoringParam" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize - specific"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{4DE29B54-2658-482F-A18A-536C67C93417}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize - specific">
      <DTS:Variables />
      <DTS:Executables />
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize - template"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{BD5AF9D6-27F3-4348-BB9D-E37437C011B4}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize - template">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Get server configuration"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{BD45CDAE-7D7F-48F2-86A8-EAECF82A5547}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get server configuration"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
              SQLTask:SqlStatementSource="select @@ServerName AS DBServer, DB_NAME() AS DBName"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="DBServer"
                SQLTask:DtsVariableName="User::cfg_tpl_DBServer" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="DBName"
                SQLTask:DtsVariableName="User::cfg_tpl_DBName" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Initialize package configuration"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{EF05F2D1-D076-43E0-8687-E5805B7DA9F8}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Initialize package configuration"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_9560e13f3ccd474984696163ed602485"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName"
              ReadWriteVariables="User::cfg_pkg_Creator,User::cfg_pkg_ScoringParams">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_9560e13f3ccd474984696163ed602485.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0468E881-81F4-4705-81DD-986AAA4B302F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9560e13f3ccd474984696163ed602485</RootNamespace>
    <AssemblyName>ST_9560e13f3ccd474984696163ed602485</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_7.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig;
using Deloitte.PipelineFramework.PlatformConfig.Params;
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Reflection;
using System.Windows.Forms;
#endregion

namespace ST_9560e13f3ccd474984696163ed602485
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        #region Help:   Using Deloitte.PipelineFramework
        /*
         *      Examples of using the framework:
         * 
         *      //prepare a list that can be used in aa ssis foreach loop as a datasource:
         *      deloitte.SetCollectionForForEachLoopToVar<RetrievalParam>(deloitte.PackageConfig.RetrievalParams, "User::cfg_tpl_RetrievalParams");
         *
         *      //within a foreach loop, you could use User::cfg_tpl_RetrievalParams as a dataset,
         *      //then store each item in "User::this_RetrievalParam" and read and automatically decode that 
         *      //json string by using:
         *      var retrievalParam = deloitte.ReadVariable<RetrievalParam>("User::this_RetrievalParam");
         *
         *      //if you'd like to put every property of that class into variables, use this:
         *      //put the configuration of the current package into variables, prefixed with 'this_':
         *      deloitte.SetNonNullUserVariablesFor<RetrievalParam>(retrievalParam);
         *
         *      //to read a string that is stored in a System.Object data field:
         *      deloitte.ReadLongStringVariable("User::variableName");
         * 
         *      //to log an event:
         *      deloitte.Logger.LogEntry(LogStatus.Success, "Done!");
         *      
         *      //if the pipeline is executed from a website, and you'd like to communicate with 
         *      //that site:
         *      deloitte.UpdateApi(100, "Finished the job.");
         *      
         * */
        #endregion

        public void Main()
        {
            using (var deloitte = new DeloitteScript(Dts)) 
            {
                deloitte.SetupLogger();

                 // For example
                deloitte.SetCollectionForForEachLoopToVar<ScoringParam>(
                    deloitte.PackageConfig.ScoringParams,
                    "User::cfg_pkg_ScoringParams"
                );

                Dts.Variables["User::cfg_pkg_Creator"].Value = deloitte.Config.Header.Creator;
                deloitte.Logger.LogEntry(Deloitte.PipelineFramework.LogStatus.Progress, deloitte.Config.Header.Creator);
                deloitte.Logger.LogEntry(Deloitte.PipelineFramework.LogStatus.Progress, Dts.Variables["User::cfg_pkg_Creator"].Value.ToString());
                /* // Logging action
                 deloitte.Logger.LogEntry(Deloitte.PipelineFramework.LogStatus.Progress, deloitte.Config.Header.Creator);
                */

            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_9560e13f3ccd474984696163ed602485</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_9560e13f3ccd474984696163ed602485</msb:DisplayName>
		<msb:ProjectId>{9F216E4F-5C1A-40B1-881B-70F9ACA427D7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_9560e13f3ccd474984696163ed602485.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Settings.get_Default():ST_9560e13f3ccd474984696163ed602485.Properties.Sett" +
    "ings")]

namespace ST_9560e13f3ccd474984696163ed602485.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9560e13f3ccd474984696163ed602485")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9560e13f3ccd474984696163ed602485")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9560e13f3ccd474984696163ed602485.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9560e13f3ccd474984696163ed602485.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_9560e13f3ccd474984696163ed602485.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAN202lcAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAA2jAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIgwAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA4BAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC8
MAAAAAAAAEgAAAACAAUAiCEAAEgOAAABAAAAAAAAANAvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBACzAAAAAQAAEQIoEAAACnMRAAAKCgZvEgAACgYGbxMA
AApvFAAACnIBAABwbwEAACsmAigQAAAKbxYAAApyOQAAcG8XAAAKBm8YAAAKbxkAAApvGgAACm8b
AAAKBm8cAAAKGAZvGAAACm8ZAAAKbxoAAApvHQAACgZvHAAAChgCKBAAAApvFgAACnI5AABwbxcA
AApvHgAACm8fAAAKbx0AAAreCgYsBgZvIAAACtwCKBAAAAoWbyEAAAoqAAEQAAACAAwAkJwACgAA
AAAeAigiAAAKKh4CKCMAAAoqrn4BAAAELR5yZQAAcNADAAACKCQAAApvJQAACnMmAAAKgAEAAAR+
AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoJwAACioucwgAAAaAAwAABCoAAEJTSkIBAAEA
AAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAFgEAAAjfgAAxAQAAOgGAAAjU3RyaW5ncwAAAACs
CwAA2AAAACNVUwCEDAAAEAAAACNHVUlEAAAAlAwAALQBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkL
AAAA+gEzABYAAAEAAAAmAAAABQAAAAYAAAAJAAAAAQAAACcAAAACAAAAEAAAAAEAAAACAAAAAwAA
AAQAAAABAAAABQAAAAEAAAABAAAAAQAAAAAAHgQBAAAAAAAGAGICZgUGAPECZgUGAK4BUwUPANoF
AAAGANsBuAQGAEUCuAQGACYCuAQGANgCuAQGAIICuAQGAJsCuAQGAPIBuAQGAA0CcAMKALYCzQMK
ACUBzQMOAMEGkwMGAHIEawQGAJEBUwUGAJoGawQGABMFhgUGAMoEowQSAGEBCAQSAMIBCAQSAEEB
jgQGAHYBZgUKAPYDzQMOAFMERgMGAAEAbAAOAEYELwYWABwG0AAWAJcA0AAOALwGRgMOAAIFRgMO
ADMFkwMOAJAGkwMGAKAAawQGAPAAawQGAKwAawQGANQGuAQAAAAAMwAAAAAAAQABAAEAEACDBA8A
OQABAAEAAAAQAI0F6QVJAAEAAwAAARAAJgbpBV0AAwAHAAMBAACCBgAAQQAEAAoAEQB3BLcAEQAV
AbsAEQCHAL8ABgZbAMMAVoByBsYAVoD1AMYAUCAAAAAAhgCJBAYAAQAgIQAAAACGGEYFBgABACgh
AAAAAIMYRgUGAAEAMCEAAAAAkwgPBcoAAQBcIQAAAACTCP0AzwABAGMhAAAAAJMICQHUAAEAayEA
AAAAlgihBtoAAgByIQAAAACGGEYFBgACAHohAAAAAJEYTAXfAAIAAAABACMDCQBGBQEAEQBGBQYA
GQBGBQoAKQBGBRAAMQBGBRAAOQBGBRAAQQBGBRAASQBGBRAAUQBGBRAAWQBGBRAAYQBGBRAAaQBG
BQYAiQBGBQYAsQBGBRUAwQBGBQYAcQB6BiAAeQBGBSUAeQAuBQYAeQA0AysA0QBgBjAAeQDWBDkA
yQAYBkoA6QBiBE8AeQApA1UA+QD3BFoAAQE6BWAA8QAZA2QAeQAjBWkACQHdBm8A8QAPA3cAkQCK
A2AAGQFZAQYAyQCtBgEAcQBGBQYAkQBGBQYAIQG+AHsAIQHQBoQAmQBGBYoAuQBGBQYACAAUAK0A
CAAYALIAKQBzABoBLgALAPIALgATAPsALgAbABoBLgAjACMBLgArAEwBLgAzAEwBLgA7AEwBLgBD
ACMBLgBLAFIBLgBTAEwBLgBbAGkBQwBjALIASQBzABoBYQB7ALIAYwBrALIAGwADAAEABAADAAAA
EwXjAAAAHQHoAAAApQbtAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAA1hc+dgAAAAAA
AA8AAAAEAAAAAAAAAAAAAACSAGMAAAAAAAsAAAAAAAAAAAAAAJsArgMAAAAAAwAAAAAAAAAAAAAA
pACTAwAAAAAEAAAAAAAAAAAAAACSAGsEAAAAAAsAAAAAAAAAAAAAAJsAPAAAAAAAAAAAAAEAAACX
BQAABQACACsARQAAAAAAAElFbnVtZXJhYmxlYDEAU1RfOTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYz
ZWQ2MDI0ODUAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18A
bXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZGVmYXVsdEluc3RhbmNlAFZhcmlh
YmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
Z2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBnZXRfQ29uZmlnAGdldF9QYWNrYWdlQ29uZmlnAERl
bG9pdHRlLlBpcGVsaW5lRnJhbWV3b3JrLlBsYXRmb3JtQ29uZmlnAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAVG9TdHJpbmcARGVsb2l0dGUuUGlwZWxpbmVGcmFtZXdvcmsATWljcm9zb2Z0LlNx
bFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRh
c2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzk1NjBlMTNmM2Nj
ZDQ3NDk4NDY5NjE2M2VkNjAyNDg1LmRsbABTY29yaW5nUGFyYW0AQ29tcG9uZW50UGFyYW0AZ2V0
X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBT
ZXRDb2xsZWN0aW9uRm9yRm9yRWFjaExvb3BUb1ZhcgBnZXRfSGVhZGVyAENvbmZpZ0hlYWRlcgBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Mb2dnZXIAU2V0dXBMb2dnZXIAZ2V0X0NyZWF0b3IALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfOTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYzZWQ2MDI0ODUu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzk1NjBlMTNm
M2NjZDQ3NDk4NDY5NjE2M2VkNjAyNDg1LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5n
cwBEZWxvaXR0ZS5QaXBlbGluZUZyYW1ld29yay5QbGF0Zm9ybUNvbmZpZy5QYXJhbXMAZ2V0X1Nj
b3JpbmdQYXJhbXMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMATG9nU3RhdHVzAE9iamVj
dABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABSb290AERlbG9pdHRlU2NyaXB0AGdldF9Bc3Nl
bWJseQBMb2dFbnRyeQAAAAA3VQBzAGUAcgA6ADoAYwBmAGcAXwBwAGsAZwBfAFMAYwBvAHIAaQBu
AGcAUABhAHIAYQBtAHMAACtVAHMAZQByADoAOgBjAGYAZwBfAHAAawBnAF8AQwByAGUAYQB0AG8A
cgAAcVMAVABfADkANQA2ADAAZQAxADMAZgAzAGMAYwBkADQANwA0ADkAOAA0ADYAOQA2ADEANgAz
AGUAZAA2ADAAMgA0ADgANQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAAEl82M6+9JxFvGZl7GoX//cABCABAQgDIAABBSABARERBCABAQ4FIAEBEVUEBwESPQQgABJl
BSABARJlBCAAEmkIIAAVEm0BEnELMAECAhUSbQEeAA4ECgEScQQgABJ1BSABEnkcBCAAEn0FIAAS
gIEDIAAOBCABARwFIAASgIUHIAIBEYCJDgMgABwIAAESgJERgJUFIAASgJkHIAIBDhKAmQi3elxW
GTTgiQiJhF3NgIDMkQj5Ajo2DehLDAQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0E
AAASUQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYz
ZWQ2MDI0ODUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAARwEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0AAAA
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAALAwAAAAAAAAAAAAAMowAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8MAAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAD521hcAAAEAPnbWFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AOQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQANgA5ADYAMQA2ADMA
ZQBkADYAMAAyADQAOAA1AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADYAMQAwADIALgAzADAAMgA3ADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AOQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQANgA5ADYAMQA2ADMAZQBk
ADYAMAAyADQAOAA1AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwA5ADUANgAwAGUAMQAzAGYAMwBjAGMAZAA0ADcANAA5ADgANAA2ADkANgAx
ADYAMwBlAGQANgAwADIANAA4ADUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AOQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQANgA5ADYAMQA2
ADMAZQBkADYAMAAyADQAOAA1AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA2ADEAMAAyAC4AMwAwADIANwAwAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADEAMAAyAC4AMwAwADIANwAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAANwwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Set configuration through Invocation Handler"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{68B310C2-BA6E-48DC-9CFD-0E3FE09BD68B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set configuration through Invocation Handler"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
              SQLTask:SqlStatementSource="select value from ivh.run_paramvalue where run_id=? and parameter='api_config' "
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::cfg_tpl_jsonConfiguration" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::cfg_sla_RunID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{11E610F2-8E02-4E4E-AE54-ACC1CDD8961E}"
          DTS:From="Package\Initialize - template\Get server configuration"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Initialize - template\Set configuration through Invocation Handler" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{07AD3484-6102-4B76-9CBD-8D84DDBB2A69}"
          DTS:From="Package\Initialize - template\Set configuration through Invocation Handler"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Initialize - template\Initialize package configuration" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize SLA configuration"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DisableEventHandlers="True"
      DTS:DTSID="{3E10615C-8E18-4EDD-B2EF-EF0C305A9F5E}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize SLA configuration"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{B67950C9-7227-412A-98EF-FCFDCEF19BA9}"
          DTS:EventID="728010436"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{3A431EC5-C973-4C80-AEFF-57CB0957048C}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]\Log SLA property"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{8FB171C9-5AE5-4EE9-9693-FE07C3B1BC35}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log SLA property"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::cfg_sla_RunID]  +  ": SLA key [ComponentID] was set with value \"" +  @[User::cfg_sla_ComponentID] + "\". '"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
                  SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='CompanyScoringSynchronous.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run -1: SLA key [ComponentID] was set with value &quot;&quot;. '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7c98d941be6340a4afa5b23346e85fc7"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,User::cfg_tpl_jsonSLA,System::PackageName"
          ReadWriteVariables="User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerCatalog,User::cfg_sla_DatahandlerDataSource,User::cfg_sla_DatahandlerVersion,User::cfg_sla_JsonVersion,User::cfg_sla_PlatformCatalog,User::cfg_sla_PlatformDataSource,User::cfg_sla_PollEvery,User::cfg_sla_ProjectCatalog,User::cfg_sla_ProjectDataSource,User::cfg_sla_RunID,User::cfg_sla_TimeOutAfter">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig;
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Data;
using System.Data.SqlClient;
using System.Reflection;
using System.Windows.Forms;

#endregion

namespace ST_7c98d941be6340a4afa5b23346e85fc7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetNonNullUserVariablesFor<SLA>("User::cfg_tpl_jsonSLA", "cfg_sla_");
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_7c98d941be6340a4afa5b23346e85fc7.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9CD66199-FB02-4B5C-9A30-C7FB7ED47B51}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7c98d941be6340a4afa5b23346e85fc7</RootNamespace>
    <AssemblyName>ST_7c98d941be6340a4afa5b23346e85fc7</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_7.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_7c98d941be6340a4afa5b23346e85fc7</msb:CodeName>
		<msb:DisplayName>ST_7c98d941be6340a4afa5b23346e85fc7</msb:DisplayName>
		<msb:ProjectId>{2FE85E53-2960-4E7B-AF1B-D38BAF1E3336}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7c98d941be6340a4afa5b23346e85fc7.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Settings.get_Default():ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Sett" +
    "ings")]

namespace ST_7c98d941be6340a4afa5b23346e85fc7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7c98d941be6340a4afa5b23346e85fc7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7c98d941be6340a4afa5b23346e85fc7")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7c98d941be6340a4afa5b23346e85fc7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_7c98d941be6340a4afa5b23346e85fc7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAP812VYAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAPi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOgtAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
LgAAAAAAAEgAAAACAAUA0CEAABgMAAABAAAAAAAAABghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwA1AAAAAgAAEQIoFgAACnMXAAAKCgZycwAAcHKfAABwbwEAACve
CgYsBgZvGQAACtwCKBYAAAoWbxoAAAoqAAAAARAAAAIADAASHgAKAAAAAB4CKBsAAAoqtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMgDAAAjfgAANAQAALgF
AAAjU3RyaW5ncwAAAADsCQAAtAAAACNVUwCgCgAAEAAAACNHVUlEAAAAsAoAAGgBAAAjQmxvYgAA
AAAAAAACAAABVx2iAQkLAAAA+iUzABYAAAEAAAAeAAAABQAAAAYAAAAJAAAAAQAAABsAAAACAAAA
DwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAK
AN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUC
cAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAG
AAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAPkE3gQSAE0FIwUGAFEF
ugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAI
AAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAA
gxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACW
CAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACABAhAAAAAIYY
vAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8
AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4A
uQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A4QC8AZsA4QAIBaEA8QBdBRsA2QBlBV0AGQC8
ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbACMBLgAjACMBLgBjAEkBLgALALIALgATAPoALgAzAPoA
LgArACMBLgA7ACkBLgBDACMBLgBbAEABQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCtAAIAAQAD
AAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAATFwc6
AAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAA
AAAAAAAKAPUAAAAAAAMAAAAAAAAAAAAAAJIA3gQAAAAAAAAAAAEAAAB0BQAABQAEADEAqAAAAAAA
ADxNb2R1bGU+AFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2ZTg1ZmM3LmRsbABSZXNvdXJj
ZXMAU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTViMjMzNDZlODVmYzcuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2ZTg1ZmM3AFNjcmlwdFJl
c3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jl
c291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0
YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lz
dGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBB
c3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5
AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRU
YXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAERlbG9pdHRl
LlBpcGVsaW5lRnJhbWV3b3JrAERlbG9pdHRlU2NyaXB0AFNldE5vbk51bGxVc2VyVmFyaWFibGVz
Rm9yAERlbG9pdHRlLlBpcGVsaW5lRnJhbWV3b3JrLlBsYXRmb3JtQ29uZmlnAFNMQQBJRGlzcG9z
YWJsZQBEaXNwb3NlAHNldF9UYXNrUmVzdWx0AFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2
ZTg1ZmM3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwA3AGMAOQA4AGQA
OQA0ADEAYgBlADYAMwA0ADAAYQA0AGEAZgBhADUAYgAyADMAMwA0ADYAZQA4ADUAZgBjADcALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACtVAHMAZQByADoAOgBjAGYA
ZwBfAHQAcABsAF8AagBzAG8AbgBTAEwAQQAAEWMAZgBnAF8AcwBsAGEAXwAAAAAAW6fpq/obz0qE
C+UOF9Jt3AAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgA
EhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQg
ABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtCPkCOjYN6EsMBSABARJtBjAB
AgEODgQKARJ1BAcBEnFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTVi
MjMzNDZlODVmYzcAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzARAuAAAAAAAAAAAAAC4uAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAgLgAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAHOhMXAAABAAc6Exc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8ANwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYAYQA1AGIAMgAzADMANAA2AGUA
OAA1AGYAYwA3AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQAw
ADcALgAxADQAOAA1ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYAYQA1AGIAMgAzADMANAA2AGUAOAA1
AGYAYwA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8ANwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYA
YQA1AGIAMgAzADMANAA2AGUAOAA1AGYAYwA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADcAYwA5ADgAZAA5ADQAMQBiAGUANgAzADQAMABhADQAYQBmAGEA
NQBiADIAMwAzADQANgBlADgANQBmAGMANwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA5ADAANwAuADEANAA4ADUANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADAANwAuADEANAA4ADUANQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABAPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set initialized to True"
      DTS:CreationName="Microsoft.ExpressionTask"
      DTS:Description="Expression Task"
      DTS:DTSID="{69a945fc-0fcd-45f5-86a2-90f718268241}"
      DTS:ExecutableType="Microsoft.ExpressionTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set initialized to True"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExpressionTask
          Expression="@[User::cfg_tpl_IsPackageSlaInitialized] = True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Timeout expired"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{E42F1A93-1439-46E7-9569-33F7464A1819}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Timeout expired">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Timeout expired\Log - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5492BE3D-DE63-4A24-9A56-1FD4F3B0B641}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Timeout expired after " + (DT_WSTR, 16) @[User::cfg_sla_TimeOutAfter] + " seconds.'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='CompanyScoringSynchronous.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run 0: Timeout expired after 0 seconds.'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Timeout expired.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{A81AC4E0-AC0A-4081-BE0E-9E972966924D}"
          DTS:EventID="0"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{745E3515-AF95-4A2D-93EE-A9E7D00A77B6}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Timeout expired.EventHandlers[OnPostExecute]\Event - Fail executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{BAD8FB50-CD7C-4571-B0E6-C113A4E44C68}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - Fail executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='fail',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Critical'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='fail',@source_id='', @level='Critical'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WAIT FOR Dependencies"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{0B49AF16-A1B4-4A48-B09F-41FD0FE9436F}"
      DTS:EvalExpression="(! @[User::cfg_tpl_dependenciesChecked]) &amp;&amp; (DATEADD(&quot;ss&quot;, @[User::cfg_sla_TimeOutAfter], @[System::ContainerStartTime]) &gt; GETDATE())"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="WAIT FOR Dependencies">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\WAIT FOR Dependencies\Check dependencies"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6E943E88-2625-473D-9601-49609C735B88}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check dependencies"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sqlDependencies"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="depenciesChecked"
                SQLTask:DtsVariableName="User::cfg_tpl_dependenciesChecked" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::cfg_sla_ComponentID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{FDC8D166-2F6A-45A8-85D1-A3C5637A977D}"
      DTS:From="Package\Initialize - template"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Check PRE-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{FA381491-9620-4004-868C-EE5A8E981820}"
      DTS:From="Package\Initialize - specific"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Check PRE-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{E6EC1A3F-361B-4CA7-9865-38AF079007A9}"
      DTS:From="Package\Check PRE-conditions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\WAIT FOR Dependencies" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{E5DD23DF-A95A-4770-AA0B-8D7C936BD0A3}"
      DTS:EvalOp="3"
      DTS:Expression="(! @cfg_tpl_TimeoutExpired)"
      DTS:From="Package\WAIT FOR Dependencies"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Execute Feature" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{4B354D08-E246-4663-9981-33BACCF26A25}"
      DTS:From="Package\Execute Feature"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Check POST-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{067D23B0-DDAA-4C2E-9F58-9FEBFBAFF80D}"
      DTS:From="Package\Initialize SLA configuration"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Set initialized to True" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{42E07B53-8160-4202-88F5-A45EEFC50A37}"
      DTS:From="Package\Set initialized to True"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Initialize - template" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{42AD0D6A-29AF-49F1-8AC7-8DF527F02E2F}"
      DTS:EvalOp="3"
      DTS:Expression="@cfg_tpl_TimeoutExpired"
      DTS:From="Package\WAIT FOR Dependencies"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Timeout expired" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{61FAD4D3-229C-442A-93F1-5C5F66435ED5}"
      DTS:From="Package\Set initialized to True"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Initialize - specific" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{18AD7113-FD83-4FFF-95F9-B6BAFC371567}"
      DTS:EventID="218076652"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{D21B71C1-E502-4930-AA65-F41EFF1B5621}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Event - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{E64551B9-85FA-411F-86E5-57FA1E63B0E5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Event - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='fail',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Critical'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
              SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='fail',@source_id='', @level='Critical'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Log - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{344A4603-72AC-4FCE-96F8-D597B5151903}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Failed executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='CompanyScoringSynchronous.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run 0: Failed executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{97BCCACA-BE30-4179-B593-F65D1B6B3A8E}"
      DTS:EventID="217598736"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{87F67468-9792-402A-A9C7-081B58DC747A}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Log - End executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{A168E2DF-E4B0-4257-932A-D1B87E1F1DC8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - End executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='SUCCESS', @rowcount=" + (DT_WSTR, 16) @[User::varRowCount]  + ", @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Completed executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='CompanyScoringSynchronous.dtsx', @source_id=null, @action='END', @status='SUCCESS', @rowcount=0, @message = 'Run 0: Completed executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPreExecute]"
      DTS:CreationName="OnPreExecute"
      DTS:DTSID="{8E84CDC1-F376-430A-BEF3-99F4DFB8A6B0}"
      DTS:EventID="0"
      DTS:EventName="OnPreExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{D690B2E2-45B8-43F2-9C65-78EC086638B1}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\Log - Start executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{1E66EAD2-1577-4C49-AF4C-02038A5A1E92}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Start executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='START', @status='SUCCESS', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Starting executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B174A2D8-540B-4596-87E8-0901F8BED8E9}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='CompanyScoringSynchronous.dtsx', @source_id=null, @action='START', @status='SUCCESS', @message = 'Run 0: Starting executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="211,69"
          Size="211,112"
          Id="Package\Check POST-conditions"
          TopLeft="616,1631" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,55"
          Size="205,98"
          Id="Package\Check PRE-conditions"
          TopLeft="637.5,558.5" />
        <NodeLayout
          Size="203,42"
          Id="Package\Execute Feature\Foreach Loop Container\Merge into company score"
          TopLeft="220,18" />
        <NodeLayout
          Size="177,42"
          Id="Package\Execute Feature\Foreach Loop Container\Parse ScoringParams"
          TopLeft="19,20" />
        <NodeLayout
          Size="186,56"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Insert this scoring string in Manual Scoring action"
          TopLeft="18,16" />
        <NodeLayout
          Size="180,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score"
          TopLeft="24.400432900433,107.564935064935" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="112.700216450216,72">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.5649350649351"
              Start="0,0"
              End="0,28.0649350649351">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.0649350649351" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,6.03246753246754,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="229,205"
          Size="229,248"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container"
          TopLeft="110,113" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="107.5,62">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="80.1666666666667,51"
              Start="0,0"
              End="80.1666666666667,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.3876843018213" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.3876843018213"
                    Point2="0,30.3876843018213"
                    Point3="4,30.3876843018213" />
                  <mssgle:LineSegment
                    End="76.1666666666667,30.3876843018213" />
                  <mssgle:CubicBezierSegment
                    Point1="76.1666666666667,30.3876843018213"
                    Point2="80.1666666666667,30.3876843018213"
                    Point3="80.1666666666667,34.3876843018213" />
                  <mssgle:LineSegment
                    End="80.1666666666667,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="32.0833333333333,35.3876843018213,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="196,40">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24,0"
              Start="0,0"
              End="16.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="321.5,60">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-60.1666666666667,53"
              Start="0,0"
              End="-60.1666666666667,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5793581960104" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.5793581960104"
                    Point2="0,31.5793581960104"
                    Point3="-4,31.5793581960104" />
                  <mssgle:LineSegment
                    End="-56.1666666666667,31.5793581960104" />
                  <mssgle:CubicBezierSegment
                    Point1="-56.1666666666667,31.5793581960104"
                    Point2="-60.1666666666667,31.5793581960104"
                    Point3="-60.1666666666667,35.5793581960104" />
                  <mssgle:LineSegment
                    End="-60.1666666666667,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="450,416"
          Size="450,459"
          Id="Package\Execute Feature\Foreach Loop Container"
          TopLeft="57,29" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="552,543"
          Size="552,586"
          Id="Package\Execute Feature"
          TopLeft="439,989" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="297,236"
          Size="297,279"
          Id="Package\Initialize - specific"
          TopLeft="808,229.571428571429" />
        <NodeLayout
          Size="192,42"
          Id="Package\Initialize - template\Get server configuration"
          TopLeft="62,25" />
        <NodeLayout
          Size="225,42"
          Id="Package\Initialize - template\Initialize package configuration"
          TopLeft="49,200" />
        <NodeLayout
          Size="209,42"
          Id="Package\Initialize - template\Set configuration through Invocation Handler"
          TopLeft="48,108" />
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint]"
          TopLeft="155.25,67">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint 1]"
          TopLeft="152.5,150">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,50"
              Start="0,0"
              End="9,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21"
                    Point2="0,25"
                    Point3="4,25" />
                  <mssgle:LineSegment
                    End="5,25" />
                  <mssgle:CubicBezierSegment
                    Point1="5,25"
                    Point2="9,25"
                    Point3="9,29" />
                  <mssgle:LineSegment
                    End="9,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="364,297"
          Size="364,340"
          Id="Package\Initialize - template"
          TopLeft="339,187.642857142857" />
        <NodeLayout
          Size="204,42"
          Id="Package\Initialize SLA configuration"
          TopLeft="627,44" />
        <NodeLayout
          Size="176,42"
          Id="Package\Timeout expired\Log - Fail executable"
          TopLeft="35,35" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="241,131"
          Size="241,174"
          Id="Package\Timeout expired"
          TopLeft="982,713" />
        <NodeLayout
          Size="175,42"
          Id="Package\WAIT FOR Dependencies\Check dependencies"
          TopLeft="37.5714285714287,26.8571428571428" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="244,208"
          Size="244,251"
          Id="Package\WAIT FOR Dependencies"
          TopLeft="617.928571428572,679.535714285714" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="521,527.642857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="186.166666666667,30.857142857143"
              Start="0,0"
              End="186.166666666667,23.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.3709030562855" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.3709030562855"
                    Point2="0,18.3709030562855"
                    Point3="4,18.3709030562855" />
                  <mssgle:LineSegment
                    End="182.166666666667,18.3709030562855" />
                  <mssgle:CubicBezierSegment
                    Point1="182.166666666667,18.3709030562855"
                    Point2="186.166666666667,18.3709030562855"
                    Point3="186.166666666667,22.3709030562855" />
                  <mssgle:LineSegment
                    End="186.166666666667,23.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="956.5,508.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-183.666666666667,49.928571428571"
              Start="0,0"
              End="-183.666666666667,42.428571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.7251417507949" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.7251417507949"
                    Point2="0,29.7251417507949"
                    Point3="-4,29.7251417507949" />
                  <mssgle:LineSegment
                    End="-179.666666666667,29.7251417507949" />
                  <mssgle:CubicBezierSegment
                    Point1="-179.666666666667,29.7251417507949"
                    Point2="-183.666666666667,29.7251417507949"
                    Point3="-183.666666666667,33.7251417507949" />
                  <mssgle:LineSegment
                    End="-183.666666666667,42.428571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="739.964285714286,656.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.035714285714"
              Start="0,0"
              End="0,15.535714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.535714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="739.928571428572,930.535714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.928571428572,58.464285714286"
              Start="0,0"
              End="-24.928571428572,50.964285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.232142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.232142857143"
                    Point2="0,29.232142857143"
                    Point3="-4,29.232142857143" />
                  <mssgle:LineSegment
                    End="-20.928571428572,29.232142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.928571428572,29.232142857143"
                    Point2="-24.928571428572,29.232142857143"
                    Point3="-24.928571428572,33.232142857143" />
                  <mssgle:LineSegment
                    End="-24.928571428572,50.964285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.464285714286,34.232142857143,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="718.25,1575">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="861.928571428572,802.517857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120.071428571428,0"
              Start="0,0"
              End="112.571428571428,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="112.571428571428,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="48.285714285714,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="179,42"
          Id="Package\Set initialized to True"
          TopLeft="648,113" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="729,86">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.5,27"
              Start="0,0"
              End="8.5,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.5"
                    Point2="0,13.5"
                    Point3="4,13.5" />
                  <mssgle:LineSegment
                    End="4.5,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="4.5,13.5"
                    Point2="8.5,13.5"
                    Point3="8.5,17.5" />
                  <mssgle:LineSegment
                    End="8.5,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="737.5,155">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-216.5,32.642857142857"
              Start="0,0"
              End="-216.5,25.142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.3214285714285" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.3214285714285"
                    Point2="0,16.3214285714285"
                    Point3="-4,16.3214285714285" />
                  <mssgle:LineSegment
                    End="-212.5,16.3214285714285" />
                  <mssgle:CubicBezierSegment
                    Point1="-212.5,16.3214285714285"
                    Point2="-216.5,16.3214285714285"
                    Point3="-216.5,20.3214285714285" />
                  <mssgle:LineSegment
                    End="-216.5,25.142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="766,155">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="190.5,74.571428571429"
              Start="0,0"
              End="190.5,67.071428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.2249644043666" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.2249644043666"
                    Point2="0,30.2249644043666"
                    Point3="4,30.2249644043666" />
                  <mssgle:LineSegment
                    End="186.5,30.2249644043666" />
                  <mssgle:CubicBezierSegment
                    Point1="186.5,30.2249644043666"
                    Point2="190.5,30.2249644043666"
                    Point3="190.5,34.2249644043666" />
                  <mssgle:LineSegment
                    End="190.5,67.071428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package.EventHandlers[OnError]\Event - Fail executable"
          TopLeft="81,159" />
        <NodeLayout
          Size="176,42"
          Id="Package.EventHandlers[OnError]\Log - Fail executable"
          TopLeft="81,81" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="178,42"
          Id="Package.EventHandlers[OnPostExecute]\Log - End executable"
          TopLeft="100,92" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="183,42"
          Id="Package.EventHandlers[OnPreExecute]\Log - Start executable"
          TopLeft="52,58" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Check POST-conditions.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="188,42"
          Id="Package\Check POST-conditions.EventHandlers[OnPostExecute]\Event - End executable"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Check PRE-conditions.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="192,42"
          Id="Package\Check PRE-conditions.EventHandlers[OnPostExecute]\Event - Start executable"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="155,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Conditional Split"
          TopLeft="214,459" />
        <NodeLayout
          Size="223,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Dynamic column-name update"
          TopLeft="173,532" />
        <NodeLayout
          Size="224,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Merge into company_score_str"
          TopLeft="451,472" />
        <NodeLayout
          Size="239,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings"
          TopLeft="312,109" />
        <NodeLayout
          Size="234,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Multicast"
          TopLeft="317,389" />
        <NodeLayout
          Size="237,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Parse scoring string"
          TopLeft="313,181" />
        <NodeLayout
          Size="234,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Row Count"
          TopLeft="316,319" />
        <NodeLayout
          Size="235,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Add Score Name"
          TopLeft="315,248" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[Score Exists]"
          TopLeft="288,501">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.0732421875,6.97314453125,54.146484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[Row Count Output 1]"
          TopLeft="433.5,361">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[Output 0]"
          TopLeft="432,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[OLE DB Source Output]"
          TopLeft="431.5,151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[Multicast Output 4]"
          TopLeft="396.333333333333,431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-104.833333333333,28"
              Start="0,0"
              End="-104.833333333333,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.31409168081494" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.31409168081494"
                    Point2="0,11.3140916808149"
                    Point3="-4,11.3140916808149" />
                  <mssgle:LineSegment
                    End="-100.833333333333,11.3140916808149" />
                  <mssgle:CubicBezierSegment
                    Point1="-100.833333333333,11.3140916808149"
                    Point2="-104.833333333333,11.3140916808149"
                    Point3="-104.833333333333,15.3140916808149" />
                  <mssgle:LineSegment
                    End="-104.833333333333,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[Multicast Output 1]"
          TopLeft="471.666666666667,431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="91.3333333333334,41"
              Start="0,0"
              End="91.3333333333334,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5670628183362" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.5670628183362"
                    Point2="0,16.5670628183362"
                    Point3="4,16.5670628183362" />
                  <mssgle:LineSegment
                    End="87.3333333333334,16.5670628183362" />
                  <mssgle:CubicBezierSegment
                    Point1="87.3333333333334,16.5670628183362"
                    Point2="91.3333333333334,16.5670628183362"
                    Point3="91.3333333333334,20.5670628183362" />
                  <mssgle:LineSegment
                    End="91.3333333333334,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score.Paths[Derived Column Output]"
          TopLeft="432.75,290">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Sequence Container\String - Manual Score\Current Backlog of Scoring strings">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="160,42"
          Id="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]\Log SLA property"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Timeout expired.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Timeout expired.EventHandlers[OnPostExecute]\Event - Fail executable"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>