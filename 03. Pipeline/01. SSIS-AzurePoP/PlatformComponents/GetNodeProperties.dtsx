<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/13/2014 4:11:55 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NLLT005553"
  DTS:CreatorName="NL\PBaljon"
  DTS:DelayValidation="True"
  DTS:DTSID="{61750D97-7579-4550-8809-2C66F1F530A1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.98"
  DTS:LocaleID="1043"
  DTS:ObjectName="GetNodeProperties"
  DTS:PackageType="5"
  DTS:VersionBuild="267"
  DTS:VersionGUID="{A36E181A-2CB0-4B34-9CAC-6DFF67A77F5A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DatahandlerDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{39712E48-9B50-4732-BF2C-C58250CA073F}"
      DTS:ObjectName="DatahandlerDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_DatahandlerCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_DatahandlerDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_dev_dth;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{6D3AA5A9-8B96-4CD6-97AE-954275E9E0E5}"
      DTS:ObjectName="DatahandlerDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_DatahandlerCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_DatahandlerDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_dev_dth;Integrated Security=True;Application Name=SSIS-PackageTemplate-{6D3AA5A9-8B96-4CD6-97AE-954275E9E0E5}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PlatformDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
      DTS:ObjectName="PlatformDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_PlatformCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_PlatformDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_app_inh;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{50D20D1C-A40F-4283-AA1B-D5CFE211941F}"
      DTS:ObjectName="PlatformDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_PlatformCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_PlatformDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_app_inh;Integrated Security=True;Application Name=SSIS-PackageTemplate-{50D20D1C-A40F-4283-AA1B-D5CFE211941F}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProjectDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{672E2FBD-6A09-4C4C-828F-A4C16D688AAF}"
      DTS:ObjectName="ProjectDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_ProjectCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_ProjectDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_prj_deploytest;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProjectDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{293A7581-C5BB-4F32-B8C2-AC1F2A13A915}"
      DTS:ObjectName="ProjectDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_ProjectCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_ProjectDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_prj_deploytest;Integrated Security=True;Application Name=SSIS-PackageTemplate-{293A7581-C5BB-4F32-B8C2-AC1F2A13A915}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{4E093FB5-8751-4E03-A522-7975D8392D74}"
      DTS:ObjectName="IN_DEBUG_MODE">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{CD8EF08F-DA45-4B01-A774-603FB0713C5A}"
      DTS:ObjectName="JSON_CONFIG">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">{"ComponentParams":[{"PackageName":"GetNodeProperties","GetNodePropertiesParams" :[ 	{"PropertyLabel" : "Technology Class" 	, "PropertyMethod" : "NodeId" 	},{"PropertyLabel" : "Label" 	, "PropertyMethod" : "TechnologyClassLabel" 	},{"PropertyLabel" : "Extended Label" 	, "PropertyMethod" : "TechnologyClassExtendedLabel" 	},{"PropertyLabel" : "Size" 	, "PropertyMethod" : "TechnologyClassSize" 	},{"PropertyLabel" : "HighLevelLabel" 	, "PropertyMethod" : "HighLevelTechnologyLabel" 	, "PropertyParameters" : "H04:Software|G06:Software|B41:Printing|B42:Printing|B43:Printing|B44:Printing|C09:Inks and Dyes|C07:Raw material|C08:Raw material|C2:Raw material|B2:Finished part|B33:Additive manufacturing" 	} ] }]}</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C862CC48-C811-47CD-9230-7D2FF4BB99AF}"
      DTS:ObjectName="JSON_SLA">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">{"ComponentID": "D0E4F952-663C-42CA-89E8-318C931D42A9" , "RunID": "-1" , "PollEvery": "00:00:10" , "TimeOutAfter": "3600" , "PlatformDataSource": "nlagpdatacore" , "PlatformCatalog": "prv_dev_inh" , "DatahandlerDataSource": "nlagpdatacore" , "DatahandlerCatalog": "prv_dev_dth" , "DatahandlerVersion": "latest" , "ProjectDataSource":"nlagpdatacore" , "ProjectCatalog":"prv_prj_deploytest" }</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{3E58DB24-F64E-4F2D-A884-53DB5B7A05B9}"
      DTS:ObjectName="RUN_ID">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{42A97CF1-7CE4-4532-AD93-CBA25E464957}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_ComponentJSON">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{089B084C-DB55-4BF0-9005-FE2BC510A562}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_GetNodePropertiesParams">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F503BF57-B267-4C7B-A967-E27BE2BDDE59}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ComponentID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A0E4B654-F843-4CE2-A1ED-0CE4B601937A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_dev_dth</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{704C4837-C001-46CF-8018-729C7D7F7E6D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ACB3E572-496E-4F5A-8C03-188FB9B5817F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerVersion">
      <DTS:VariableValue
        DTS:DataType="8">janus</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2683BC6-ECD5-4F15-94AC-8E15FC5D8FCE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_JsonVersion">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ABB7A56D-D4C3-4034-B336-E8EFAB2AA2A9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PlatformCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_app_inh</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC1DC125-B8DD-44B0-ADD1-9172480FC451}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PlatformDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{44852E71-6C94-47EA-BD20-8B0D0B02B470}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PollEvery">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B3D632F6-3E6A-4589-AE75-6E5A733B15D1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ProjectCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_prj_deploytest</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4E96090C-6A81-4F06-8C2B-DD24D4FF1929}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ProjectDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BA8C93A2-CD91-43F3-AEBA-28D44822C648}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_RunID">
      <DTS:VariableValue
        DTS:DataType="3">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A65F34C4-2284-4F9C-A09E-B1B7C2095DBC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_TimeOutAfter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{42982636-AFE1-4647-8DC5-488A415A4C02}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMDatahandlerDB">
      <DTS:VariableValue
        DTS:DataType="8">DatahandlerDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DAC124C4-80B8-4368-840C-AA2A64287086}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMPlatformDB">
      <DTS:VariableValue
        DTS:DataType="8">PlatformDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD744920-1B7D-43EA-9ACB-688367A140D2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMProjectDB">
      <DTS:VariableValue
        DTS:DataType="8">ProjectDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{88C5AD8C-151A-46D3-9B55-AEBFEE822956}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_DBName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2B4EE13C-A3F0-466D-A889-3849F5CE1726}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_DBServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{126E5AA0-6D1C-4D6D-843C-ECCEDC559E32}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_depenciesChecked">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5DA0DFDA-6E1A-4D61-9D9A-C103CBE6266A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_EventLog">
      <DTS:VariableValue
        DTS:DataType="8">Application</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1429498B-C435-490D-88E9-C45379901B38}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_Feature">
      <DTS:VariableValue
        DTS:DataType="8">InvocationHandler</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B2A8BFE-2084-40B0-A7B3-E6A7F2286487}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_IsPackageSlaInitialized">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2BD0511B-6987-4891-8E93-79510ECA293D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_jsonConfiguration">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3126DE51-D4AA-4B95-8B6E-1429695DC9D3}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::JSON_SLA]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_jsonSLA">
      <DTS:VariableValue
        DTS:DataType="8">{"ComponentID": "D0E4F952-663C-42CA-89E8-318C931D42A9" , "RunID": "-1" , "PollEvery": "00:00:10" , "TimeOutAfter": "3600" , "PlatformDataSource": "nlagpdatacore" , "PlatformCatalog": "prv_dev_inh" , "DatahandlerDataSource": "nlagpdatacore" , "DatahandlerCatalog": "prv_dev_dth" , "DatahandlerVersion": "latest" , "ProjectDataSource":"nlagpdatacore" , "ProjectCatalog":"prv_prj_deploytest" }</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{97EE3B84-B43C-40D4-8479-2187C53C8DAF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_Pipeline">
      <DTS:VariableValue
        DTS:DataType="8">ApplicationPlatform</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5B9FB299-87A2-459E-BA87-253BB4F1FEB9}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT nlh.checkEvents(ivh.getDependencies('&quot; + @[User::cfg_sla_ComponentID]  + &quot;'), 'complete') AS depenciesChecked&#xA; IF ( SELECT nlh.checkEvents(ivh.getDependencies('&quot; + @[User::cfg_sla_ComponentID]  + &quot;'), 'complete')) = 0&#xA;&#x9;WAITFOR DELAY '&quot;+ @[User::cfg_sla_PollEvery]   +&quot;'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlDependencies">
      <DTS:VariableValue
        DTS:DataType="8">SELECT nlh.checkEvents(ivh.getDependencies(''), 'complete') AS depenciesChecked
 IF ( SELECT nlh.checkEvents(ivh.getDependencies(''), 'complete')) = 0
	WAITFOR DELAY ''</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{277FC68A-C19E-45E9-B0F3-F32CFAF893D1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::sqlHighLevelLabelTable] + &quot; select node_key, high_level_label from&#xA;&#x9;(select&#xA;&#x9;&#x9;node_key&#xA;&#x9;&#x9;, node_id&#xA;&#x9;&#x9;, cast(isnull(high_level_label,' ') as nvarchar(250)) as high_level_label&#xA;&#x9;&#x9;, row_number() over (partition by node_id order by pcl.parent_depth desc, len(high_level_label) desc) as rr&#xA;&#x9;from&#xA;&#x9;&#x9;@hll h JOIN&#xA;&#x9;&#x9;&quot;+ @[User::cfg_sla_DatahandlerDataSource] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerCatalog] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerVersion] +&quot;.patent_class pc ON left(pc.class_code,len(h.node_id_prefix))=h.node_id_prefix JOIN&#xA;&#x9;&#x9;&quot;+ @[User::cfg_sla_DatahandlerDataSource] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerCatalog] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerVersion] +&quot;.patent_class_lineage pcl ON pcl.parent_class_id=pc.class_id RIGHT OUTER JOIN&#xA;&#x9;&#x9;ls_node n ON n.node_key=pcl.child_class_id) a&#xA;where&#xA;&#x9;rr=1&#xA;order by&#xA;&#x9;node_id&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlGetNodeHighLevelLabel">
      <DTS:VariableValue
        DTS:DataType="8">declare @hll table(node_id_prefix nvarchar(100), high_level_label nvarchar(250)); insert into @hll values('H03','Software'); select node_key, high_level_label from
	(select
		node_key
		, node_id
		, cast(isnull(high_level_label,' ') as nvarchar(250)) as high_level_label
		, row_number() over (partition by node_id order by pcl.parent_depth desc, len(high_level_label) desc) as rr
	from
		@hll h JOIN
		NLAGPDATACORE.prv_dev_dth.janus.patent_class pc ON left(pc.class_code,len(h.node_id_prefix))=h.node_id_prefix JOIN
		NLAGPDATACORE.prv_dev_dth.janus.patent_class_lineage pcl ON pcl.parent_class_id=pc.class_id RIGHT OUTER JOIN
		ls_node n ON n.node_key=pcl.child_class_id) a
where
	rr=1
order by
	node_id</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3A1B8863-B273-4123-871D-34DA908FFBDC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;; with hll as (select&#xA;&#x9;cast(left(string,pos-1) as nvarchar(100)) as [node_id_prefix]&#xA;&#x9;, cast(right(string,len(string)-pos) as nvarchar(250)) as [high_level_label]&#xA;from&#xA;&#x9;(select string, charindex(':',string) as pos from &quot;+( @[User::cfg_sla_ProjectDataSource]==@[User::cfg_sla_PlatformDataSource] ? &quot;&quot; : @[User::cfg_sla_PlatformDataSource] +&quot;.&quot;) + @[User::cfg_sla_PlatformCatalog] +&quot;.&quot;+&quot;utl.splitString('&quot;+ @[User::this_PropertyParameters] +&quot;','|')) a&#xA;) select node_key, high_level_label from&#xA;&#x9;(select&#xA;&#x9;&#x9;node_key&#xA;&#x9;&#x9;, node_id&#xA;&#x9;&#x9;, cast(isnull(high_level_label,' ') as nvarchar(250)) as high_level_label&#xA;&#x9;&#x9;, row_number() over (partition by node_id order by pcl.parent_depth desc, len(high_level_label) desc) as rr&#xA;&#x9;from&#xA;&#x9;&#x9;hll h JOIN&#xA;&#x9;&#x9;&quot;+ ( @[User::cfg_sla_DatahandlerDataSource]== @[User::cfg_sla_PlatformDataSource] ? &quot;&quot; : @[User::cfg_sla_DatahandlerDataSource] +&quot;.&quot;) + @[User::cfg_sla_DatahandlerCatalog] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerVersion] +&quot;.patent_class pc ON left(pc.class_code,len(h.node_id_prefix))=h.node_id_prefix JOIN&#xA;&#x9;&#x9;&quot;+ ( @[User::cfg_sla_DatahandlerDataSource]== @[User::cfg_sla_PlatformDataSource] ? &quot;&quot; : @[User::cfg_sla_DatahandlerDataSource] +&quot;.&quot;) + @[User::cfg_sla_DatahandlerCatalog] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerVersion] +&quot;.patent_class_lineage pcl ON pcl.parent_class_id=pc.class_id RIGHT OUTER JOIN&#xA;&#x9;&#x9;dbo.ls_node n ON n.node_key=pcl.child_class_id) a&#xA;where&#xA;&#x9;rr=1&#xA;order by&#xA;&#x9;node_id&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlGetNodeHighLevelLabel_SplitString">
      <DTS:VariableValue
        DTS:DataType="8">; with hll as (select
	cast(left(string,pos-1) as nvarchar(100)) as [node_id_prefix]
	, cast(right(string,len(string)-pos) as nvarchar(250)) as [high_level_label]
from
	(select string, charindex(':',string) as pos from prv_app_inh.utl.splitString('','|')) a
) select node_key, high_level_label from
	(select
		node_key
		, node_id
		, cast(isnull(high_level_label,' ') as nvarchar(250)) as high_level_label
		, row_number() over (partition by node_id order by pcl.parent_depth desc, len(high_level_label) desc) as rr
	from
		hll h JOIN
		prv_dev_dth.janus.patent_class pc ON left(pc.class_code,len(h.node_id_prefix))=h.node_id_prefix JOIN
		prv_dev_dth.janus.patent_class_lineage pcl ON pcl.parent_class_id=pc.class_id RIGHT OUTER JOIN
		dbo.ls_node n ON n.node_key=pcl.child_class_id) a
where
	rr=1
order by
	node_id</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DC1ABB09-A2E6-46F1-94B4-55C28E269BC6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlHighLevelLabelTable">
      <DTS:VariableValue
        DTS:DataType="8">declare @hll table(node_id_prefix nvarchar(100), high_level_label nvarchar(250)); insert into @hll values('H03','Software');</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B4BA9C7E-3067-4CBB-BA2B-C22D6AF5A6E2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT class_id as node_key, class_code as node_id, class_label, full_class_label, aggregate_n_fam FROM &quot;+ @[User::cfg_sla_DatahandlerVersion] +&quot;.patent_class order by node_key&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlPatentClassFromDhVersion">
      <DTS:VariableValue
        DTS:DataType="8">SELECT class_id as node_key, class_code as node_id, class_label, full_class_label, aggregate_n_fam FROM janus.patent_class order by node_key</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DD617FD4-A092-441A-A429-727BD8EF08B6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;&#x9;node_key&#xA;&#x9;,POST/PRE as change&#xA;&#x9;,CASE WHEN POST/PRE &gt; 1.25&#xA;&#x9;&#x9;THEN '3.GROWTH'&#xA;&#x9;&#x9;ELSE CASE WHEN POST/PRE &lt; .75&#xA;&#x9;&#x9;&#x9;THEN '1.DECLINE'&#xA;&#x9;&#x9;&#x9;ELSE '2.STABLE' END END AS change_label&#xA;FROM&#xA;&#x9;(select&#xA;&#x9;&#x9;ci.node_key&#xA;&#x9;&#x9;, af.time_block as time_block&#xA;&#x9;&#x9;, count(distinct patent_family_id) / cast(a.n_tot as float) as fraction&#xA;&#x9;from&#xA;&#x9;&#x9;ls_node ci JOIN&#xA;&#x9;&#x9;(select distinct&#xA;&#x9;&#x9;&#x9;patent_family_id&#xA;&#x9;&#x9;&#x9;,class_id&#xA;&#x9;&#x9;&#x9;,case when year(min(priority_date)) in (2006, 2007, 2008, 2009)&#xA;&#x9;&#x9;&#x9;&#x9;THEN 'PRE'&#xA;&#x9;&#x9;&#x9;&#x9;ELSE case when year(min(priority_date)) in (2010, 2011, 2012, 2013) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'POST'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE 'OTHER' END end as time_block&#xA;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;&quot;+ @[User::cfg_sla_DatahandlerDataSource] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerCatalog] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerVersion] +&quot;.[appln_family_class_date]&#xA;&#x9;&#x9;where&#xA;&#x9;&#x9;&#x9;year(priority_date) = 2007&#xA;&#x9;&#x9;&#x9;or year(priority_date) = 2012&#xA;&#x9;&#x9;group by&#xA;&#x9;&#x9;&#x9;patent_family_id&#xA;&#x9;&#x9;&#x9;,class_id) af ON ci.node_key=af.class_id JOIN&#xA;&#x9;&#x9;(select&#xA;&#x9;&#x9;&#x9;case when year(af.priority_date) in (2006, 2007, 2008, 2009)&#xA;&#x9;&#x9;&#x9;&#x9;THEN 'PRE'&#xA;&#x9;&#x9;&#x9;&#x9;ELSE case when year(af.priority_date) in (2010, 2011, 2012, 2013) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'POST'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE 'OTHER' END END as time_block&#xA;&#x9;&#x9;&#x9;, count(distinct patent_family_id) as n_tot&#xA;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;ls_node ci JOIN&#xA;&#x9;&#x9;&#x9;&quot;+ @[User::cfg_sla_DatahandlerDataSource] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerCatalog] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerVersion] +&quot;.[appln_family_class_date] af ON ci.node_key=af.class_id&#xA;&#x9;&#x9;where&#xA;&#x9;&#x9;&#x9;year(af.priority_date) between 2006 and 2013&#xA;&#x9;&#x9;group by&#xA;&#x9;&#x9;&#x9;year(af.priority_date)) a ON a.time_block = af.time_block&#xA;&#x9;group by&#xA;&#x9;&#x9;ci.node_key&#xA;&#x9;&#x9;, af.time_block&#xA;&#x9;&#x9;, a.n_tot) a&#xA;&#x9;PIVOT( avg(fraction) FOR time_block IN ([PRE],[POST]) ) AS pvt&#xA;ORDER BY&#xA;&#x9;node_key&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlRelativeTrend">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
	node_key
	,POST/PRE as change
	,CASE WHEN POST/PRE &gt; 1.25
		THEN '3.GROWTH'
		ELSE CASE WHEN POST/PRE &lt; .75
			THEN '1.DECLINE'
			ELSE '2.STABLE' END END AS change_label
FROM
	(select
		ci.node_key
		, af.time_block as time_block
		, count(distinct patent_family_id) / cast(a.n_tot as float) as fraction
	from
		ls_node ci JOIN
		(select distinct
			patent_family_id
			,class_id
			,case when year(min(priority_date)) in (2006, 2007, 2008, 2009)
				THEN 'PRE'
				ELSE case when year(min(priority_date)) in (2010, 2011, 2012, 2013) 
					THEN 'POST'
					ELSE 'OTHER' END end as time_block
		from
			NLAGPDATACORE.prv_dev_dth.janus.[appln_family_class_date]
		where
			year(priority_date) = 2007
			or year(priority_date) = 2012
		group by
			patent_family_id
			,class_id) af ON ci.node_key=af.class_id JOIN
		(select
			case when year(af.priority_date) in (2006, 2007, 2008, 2009)
				THEN 'PRE'
				ELSE case when year(af.priority_date) in (2010, 2011, 2012, 2013) 
					THEN 'POST'
					ELSE 'OTHER' END END as time_block
			, count(distinct patent_family_id) as n_tot
		from
			ls_node ci JOIN
			NLAGPDATACORE.prv_dev_dth.janus.[appln_family_class_date] af ON ci.node_key=af.class_id
		where
			year(af.priority_date) between 2006 and 2013
		group by
			year(af.priority_date)) a ON a.time_block = af.time_block
	group by
		ci.node_key
		, af.time_block
		, a.n_tot) a
	PIVOT( avg(fraction) FOR time_block IN ([PRE],[POST]) ) AS pvt
ORDER BY
	node_key</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{85F3FDFD-2CFA-44C2-8850-7A73E13F6D31}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;select&#xA;&#x9;l.node_key&#xA;&#x9;, (cast(cm.[number_of_families_period_current&quot;+ (left(@[User::this_PropertyParameters],3)==&quot;agg&quot; ? &quot;_aggregate&quot; : &quot;&quot;)  +&quot;] as real) / sum_current)&#xA;      / nullif((cast(cm.[number_of_families_period_reference&quot;+ (left(@[User::this_PropertyParameters],3)==&quot;agg&quot; ? &quot;_aggregate&quot; : &quot;&quot;)  +&quot;] as real) / sum_reference),0) as relative_change&#xA;&#x9;, (cast(cm.[number_of_families_period_current&quot;+ (left(@[User::this_PropertyParameters],3)==&quot;agg&quot; ? &quot;_aggregate&quot; : &quot;&quot;)  +&quot;] as real) / sum_current)&#xA;      - (cast(cm.[number_of_families_period_reference&quot;+ (left(@[User::this_PropertyParameters],3)==&quot;agg&quot; ? &quot;_aggregate&quot; : &quot;&quot;)  +&quot;] as real) / sum_reference) as absolute_change&#xA;from&#xA;&#x9;ls_node l LEFT OUTER JOIN&#xA;&#x9;&quot;+ @[User::cfg_sla_DatahandlerDataSource] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerCatalog] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerVersion] +&quot;.patent_class_metric cm ON cm.class_id=l.node_key CROSS JOIN&#xA;&#x9;(select&#xA;&#x9;&#x9;sum([number_of_families_period_current&quot;+ (left(@[User::this_PropertyParameters],3)==&quot;aggls&quot; ? &quot;_aggregate&quot; : &quot;&quot;)  +&quot;]) as sum_current&#xA;&#x9;&#x9;, sum([number_of_families_period_reference&quot;+ (left(@[User::this_PropertyParameters],3)==&quot;aggls&quot; ? &quot;_aggregate&quot; : &quot;&quot;)  +&quot;]) as sum_reference&#xA;&#x9;from&#xA;&#x9;&#x9;&quot;+ @[User::cfg_sla_DatahandlerDataSource] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerCatalog] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerVersion] +&quot;.patent_class_metric&#xA;&#x9;&quot;+ (right(@[User::this_PropertyParameters],2)==&quot;ls&quot; ? &quot; where class_id IN (select node_key from ls_node)&quot;:&quot;&quot;) +&quot;&#xA;&#x9;) ss&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlTrend">
      <DTS:VariableValue
        DTS:DataType="8">select
	l.node_key
	, (cast(cm.[number_of_families_period_current] as real) / sum_current)
      / nullif((cast(cm.[number_of_families_period_reference] as real) / sum_reference),0) as relative_change
	, (cast(cm.[number_of_families_period_current] as real) / sum_current)
      - (cast(cm.[number_of_families_period_reference] as real) / sum_reference) as absolute_change
from
	ls_node l LEFT OUTER JOIN
	NLAGPDATACORE.prv_dev_dth.janus.patent_class_metric cm ON cm.class_id=l.node_key CROSS JOIN
	(select
		sum([number_of_families_period_current]) as sum_current
		, sum([number_of_families_period_reference]) as sum_reference
	from
		NLAGPDATACORE.prv_dev_dth.janus.patent_class_metric
	
	) ss</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C9AEBE10-01D0-402D-BF7C-31DD6A5C8D65}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="this_GetNodePropertiesParam">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8FE65706-42CB-4C39-97CA-5FD5D57CBE67}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_PropertyLabel">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D1E92E30-79DF-4CC6-84E6-A8EFBAA05642}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_PropertyMethod">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9A7CFCE9-65AD-4A9C-BCCF-B87919830344}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_PropertyParameters">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{13810D2B-76E9-4816-BBB8-108A6AA345FE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E7AF2FE2-79C3-4372-A70B-E27ED3C3B11C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::RUN_ID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varRunId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check POST-conditions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{5D6F4366-A1D0-4E83-A5FD-58FDBB125A4C}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check POST-conditions">
      <DTS:Variables />
      <DTS:Executables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Check POST-conditions.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{1F6B31BA-C0AF-4943-A2A4-1A16FA93372F}"
          DTS:EventID="631204784"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{A246A3B1-ADF4-47D0-92C0-38E7B45246E3}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check POST-conditions.EventHandlers[OnPostExecute]\Event - End executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{13758E19-5DAE-4855-B40F-8B19D40FA58B}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - End executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='complete',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Information'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='complete',@source_id='', @level='Information'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Check PRE-conditions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{1E0140F8-B8EE-470E-9E88-DA1964014760}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check PRE-conditions">
      <DTS:Variables />
      <DTS:Executables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Check PRE-conditions.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{E0D70294-1853-4A97-9BAA-C8F72095E501}"
          DTS:EventID="631219344"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{B2E0C4DE-6118-4CD2-856E-EAD0E0DCD9CB}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check PRE-conditions.EventHandlers[OnPostExecute]\Event - Start executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{F99C674F-D873-4053-B58C-377081E92EDD}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - Start executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='start',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Information'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='start',@source_id='', @level='Information'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute Feature"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{BF2A5B4E-B902-4C6A-B5C2-D271DB4CA38A}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute Feature">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{1F7B0B78-4F68-437F-8226-985C1248034E}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
            DTS:DTSID="{367C8388-C1FF-4DA0-ABA3-960BD13CE364}"
            DTS:ObjectName="{367C8388-C1FF-4DA0-ABA3-960BD13CE364}">
            <DTS:ObjectData>
              <FEEFVE
                VariableName="User::cfg_pkg_GetNodePropertiesParams" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Decode Parameters"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{7375187D-F4AD-422B-8010-DBF158BE0492}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Decode Parameters"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_fff0fb34078f476585907ecf9f32d73f"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMDatahandlerDB,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_CMProjectDB,User::cfg_tpl_jsonConfiguration,System::PackageName,User::this_GetNodePropertiesParam"
                  ReadWriteVariables="User::this_PropertyLabel,User::this_PropertyMethod,User::this_PropertyParameters">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fff0fb34078f476585907ecf9f32d73f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_fff0fb34078f476585907ecf9f32d73f")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Reflection;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig.Params;
#endregion

namespace ST_adb8bbf362354cf985607e70fb6e5c4a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        public void Main()
        {
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetupLogger();
                deloitte.SetNonNullUserVariablesFor<GetNodePropertiesParam>("User::this_GetNodePropertiesParam");
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_fff0fb34078f476585907ecf9f32d73f.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5751ECF2-79FE-476D-A77B-225BF8338A47}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_fff0fb34078f476585907ecf9f32d73f</RootNamespace>
    <AssemblyName>ST_fff0fb34078f476585907ecf9f32d73f</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\pbaljon\Documents\source\PRV\packages\Newtonsoft.Json.7.0.1\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_fff0fb34078f476585907ecf9f32d73f</msb:CodeName>
		<msb:DisplayName>ST_fff0fb34078f476585907ecf9f32d73f</msb:DisplayName>
		<msb:ProjectId>{1277CF9C-1DF4-4029-86F8-658E8F18903F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_fff0fb34078f476585907ecf9f32d73f.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fff0fb34078f476585907ecf9f32d73f.Properties.Settings.get_Default():ST_fff0fb34078f476585907ecf9f32d73f.Properties.Sett" +
    "ings")]

namespace ST_fff0fb34078f476585907ecf9f32d73f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fff0fb34078f476585907ecf9f32d73f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fff0fb34078f476585907ecf9f32d73f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fff0fb34078f476585907ecf9f32d73f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fff0fb34078f476585907ecf9f32d73f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fff0fb34078f476585907ecf9f32d73f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_fff0fb34078f476585907ecf9f32d73f.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAChm61gAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAOi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOgtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAQA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAc
LgAAAAAAAEgAAAACAAUADCEAACQMAAABAAAAAAAAADAtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgA2AAAAAQAAEQIoEAAACnMRAAAKCgZvEgAACgZyAQAA
cG8BAAAr3goGLAYGbxQAAArcAigQAAAKFm8VAAAKKgAAARAAAAIADAATHwAKAAAAAB4CKBYAAAoq
HgIoFwAACiqufgEAAAQtHnJFAABw0AMAAAIoGAAACm8ZAAAKcxoAAAqAAQAABH4BAAAEKhp+AgAA
BCoeAoACAAAEKhp+AwAABCoeAigbAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAzAMAACN+AAA4BAAAvAUAACNTdHJpbmdzAAAAAPQJAAC4AAAAI1VT
AKwKAAAQAAAAI0dVSUQAAAC8CgAAaAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQsAAAD6ATMAFgAA
AQAAAB4AAAAFAAAABgAAAAkAAAABAAAAGwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAE
AAAAAQAAAAEAAAABAAAAAABtAwEAAAAAAAYA8QFyBAYAgAJyBAYAPQFfBA8A5gQAAAYAagH5AwYA
1AH5AwYAtQH5AwYAZwL5AwYAEQL5AwYAKgL5AwYAgQH5AwYAnAHIAgoARQIcAwoAtAAcAw4AngXi
AgYAswOsAwYAIAFfBAYAfAWsAwYAGwSSBAYACwTkAxIA8ABXAxIAUQFXAxIA0ADPAwYABQFyBAoA
RQMcAw4AlQMtBQYATwCsAwYAfwCsAwYAWwCsAwYAsQX5AwAAAAABAAAAAAABAAEAAQAQAMQDEgA5
AAEAAQAAABAAmQT1BEkAAQADAAABEAAkBfUEXQADAAcAAwEAAG4FAABBAAQACgARALgDbgARAKQA
cgARAD8AdgAGBgoAegBWgF4FfQBWgIQAfQBQIAAAAACGAMoDBgABAKQgAAAAAIYYUgQGAAEArCAA
AAAAgxhSBAYAAQC0IAAAAACTCBcEgQABAOAgAAAAAJMIjACGAAEA5yAAAAAAkwiYAIsAAQDvIAAA
AACWCIMFkQACAPYgAAAAAIYYUgQGAAIA/iAAAAAAkRhYBJYAAgAAAAEAngIJAFIEAQARAFIEBgAZ
AFIECgApAFIEEAAxAFIEEAA5AFIEEABBAFIEEABJAFIEEABRAFIEEABZAFIEEABhAFIEEABpAFIE
BgCJAFIEBgCxAFIEFQDBAFIEBgBxAGYFIAB5AFIEJQB5ACsEBgB5ADcEKwDZAOgABgDJAI8FAQBx
AFIEBgCRAFIEBgDhAG0ANgDhAK0FPQCZAFIEQgC5AFIEBgAIABQAZAAIABgAaQApAHMA0QAuAAsA
qQAuABMAsgAuABsA0QAuACMA2gAuACsAAwEuADMAAwEuADsAAwEuAEMA2gAuAEsACQEuAFMAAwEu
AFsAIAFDAGMAaQBJAHMA0QBhAHsAaQBjAGsAaQAbAAMAAQAEAAMAAAAbBJoAAACsAJ8AAACHBaQA
AgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAAClGKRbAAAAAAAApAIAAAQAAAAAAAAAAAAA
AEkANgAAAAAACwAAAAAAAAAAAAAAUgD9AgAAAAADAAAAAAAAAAAAAABbAOICAAAAAAQAAAAAAAAA
AAAAAEkArAMAAAAAAAAAAAEAAACjBAAABQACACcAMQAAAAAAADxNb2R1bGU+AHZhbHVlX18AU1Rf
YWRiOGJiZjM2MjM1NGNmOTg1NjA3ZTcwZmI2ZTVjNGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNl
AElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFR5cGUARmFp
bHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0
T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAFNUX2ZmZjBmYjM0MDc4ZjQ3NjU4NTkwN2VjZjlm
MzJkNzNmAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARGVsb2l0dGUuUGlwZWxpbmVGcmFtZXdv
cmsATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFNUX2ZmZjBmYjM0MDc4ZjQ3NjU4NTkwN2VjZjlmMzJkNzNmLmRsbABHZXROb2RlUHJvcGVydGll
c1BhcmFtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8A
Z2V0X1Jlc291cmNlTWFuYWdlcgBTZXR1cExvZ2dlcgBTZXROb25OdWxsVXNlclZhcmlhYmxlc0Zv
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9mZmYwZmIzNDA3OGY0NzY1ODU5MDdlY2Y5ZjMy
ZDczZi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZmZm
MGZiMzQwNzhmNDc2NTg1OTA3ZWNmOWYzMmQ3M2YuUHJvcGVydGllcwBTZXR0aW5ncwBEZWxvaXR0
ZS5QaXBlbGluZUZyYW1ld29yay5QbGF0Zm9ybUNvbmZpZy5QYXJhbXMAU3VjY2VzcwBnZXRfRHRz
AFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AERlbG9pdHRl
U2NyaXB0AGdldF9Bc3NlbWJseQAAAABDVQBzAGUAcgA6ADoAdABoAGkAcwBfAEcAZQB0AE4AbwBk
AGUAUAByAG8AcABlAHIAdABpAGUAcwBQAGEAcgBhAG0AAHFTAFQAXwBmAGYAZgAwAGYAYgAzADQA
MAA3ADgAZgA0ADcANgA1ADgANQA5ADAANwBlAGMAZgA5AGYAMwAyAGQANwAzAGYALgBQAHIAbwBw
AGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAA/EOw9NOmoRJfQfH3lkf/VAAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFVBAcBEj0EIAASZQUgAQESZQUwAQEBDgQKARJpBgABEnERdQQg
ABJ5BiACAQ4SeQi3elxWGTTgiQiJhF3NgIDMkQj5Ajo2DehLDAQAAAAABAEAAAADBhJNAwYSUQMG
EhACBggDBhEUBAAAEk0EAAASUQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfZmZmMGZiMzQw
NzhmNDc2NTg1OTA3ZWNmOWYzMmQ3M2YAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAARwEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVU
IEZyYW1ld29yayA0tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABAuAAAAAAAAAAAAACouAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAcLgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCkW6UYAAABAKRbpRg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGYAZgBmADAAZgBiADMANAAwADcAOABmADQANwA2ADUAOAA1ADkAMAA3AGUAYwBm
ADkAZgAzADIAZAA3ADMAZgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADMAMAA5AC4AMgAzADQANgAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGYAZgBmADAAZgBiADMANAAwADcAOABmADQANwA2ADUAOAA1ADkAMAA3AGUAYwBmADkA
ZgAzADIAZAA3ADMAZgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AZgBmAGYAMABmAGIAMwA0ADAANwA4AGYANAA3ADYANQA4ADUAOQAwADcA
ZQBjAGYAOQBmADMAMgBkADcAMwBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGYAZgBmADAAZgBiADMANAAwADcAOABmADQANwA2ADUAOAA1ADkAMAA3AGUA
YwBmADkAZgAzADIAZAA3ADMAZgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAzADAAOQAuADIAMwA0ADYAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAzADAAOQAuADIAMwA0ADYAMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAA8PgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Get Class Size"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{96ff4ddf-d945-49ce-9254-f53ddae70e42}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Class Size"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Outputs[Derived Column Output].Columns[node_property_type]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="150"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Outputs[Derived Column Output].Columns[node_property_type]"
                              name="node_property_type"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTr,150)@[User::this_PropertyLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTr,150)@[User::this_PropertyLabel]</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Inputs[Merge Join Left Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Output].Columns[node_key]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Inputs[Merge Join Right Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Inputs[Merge Join Right Input].Columns[aggregate_n_fam]"
                              cachedDataType="i4"
                              cachedName="aggregate_n_fam"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].Columns[aggregate_n_fam]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Outputs[Merge Join Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Outputs[Merge Join Output].Columns[node_key]"
                              name="node_key"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Inputs[Merge Join Left Input].Columns[node_key]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Outputs[Merge Join Output].Columns[aggregate_n_fam]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Outputs[Merge Join Output].Columns[aggregate_n_fam]"
                              name="aggregate_n_fam">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Inputs[Merge Join Right Input].Columns[aggregate_n_fam]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Node List"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select node_key from ls_node order by node_key</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Output]"
                          isSorted="true"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Output].Columns[node_key]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Output].Columns[node_key]"
                              name="node_key"
                              sortKeyPosition="1"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              name="node_key" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_property_numeric]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              cachedSortKeyPosition="1"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Outputs[Merge Join Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_property_type]"
                              cachedDataType="wstr"
                              cachedLength="150"
                              cachedName="node_property_type"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Outputs[Derived Column Output].Columns[node_property_type]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[aggregate_n_fam]"
                              cachedDataType="i4"
                              cachedName="aggregate_n_fam"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Outputs[Merge Join Output].Columns[aggregate_n_fam]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                              dataType="wstr"
                              length="150"
                              name="node_property_type" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                              dataType="numeric"
                              name="node_property_value"
                              precision="30"
                              scale="10" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Patent Class"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable">User::sqlPatentClassFromDhVersion</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[DatahandlerDB]"
                          connectionManagerRefId="Package.ConnectionManagers[DatahandlerDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output]"
                          isSorted="true"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].Columns[node_key]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].Columns[node_key]"
                              name="node_key"
                              sortKeyPosition="1"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].Columns[aggregate_n_fam]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[aggregate_n_fam]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].Columns[aggregate_n_fam]"
                              name="aggregate_n_fam"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[class_label]"
                              codePage="1252"
                              dataType="str"
                              length="400"
                              name="class_label" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[node_id]"
                              dataType="wstr"
                              length="16"
                              name="node_id" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[full_class_label]"
                              dataType="nText"
                              name="full_class_label" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[aggregate_n_fam]"
                              dataType="i4"
                              name="aggregate_n_fam" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              name="node_key" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Error Output].Columns[aggregate_n_fam]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Error Output].Columns[aggregate_n_fam]"
                              name="aggregate_n_fam" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Class Size.Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Row Count.Inputs[Row Count Input 1]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Class Size.Paths[Merge Join Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Class Size.Paths[OLE DB Source Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Inputs[Merge Join Left Input]"
                      name="OLE DB Source Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Class Size.Paths[OLE DB Source Output1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join.Inputs[Merge Join Right Input]"
                      name="OLE DB Source Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Class Size.Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Class Size\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{24FB224A-9850-49AC-BFA1-9DE027567620}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Extended Label"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Inputs[Derived Column Input].Columns[full_class_label]"
                              cachedDataType="nText"
                              cachedName="full_class_label"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Outputs[Merge Join Output].Columns[full_class_label]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Output].Columns[node_property_type]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="150"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Output].Columns[node_property_type]"
                              name="node_property_type"
                              truncationRowDisposition="IgnoreFailure">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTr,150)@[User::this_PropertyLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTr,150)@[User::this_PropertyLabel]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Output].Columns[node_property_value]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="1000"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Output].Columns[node_property_value]"
                              name="node_property_value"
                              truncationRowDisposition="IgnoreFailure">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,1000)#{Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Outputs[Merge Join Output].Columns[full_class_label]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,1000)full_class_label</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="List of Nodes"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select node_key from ls_node order by node_key</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Output]"
                          isSorted="true"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Output].Columns[node_key]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Output].Columns[node_key]"
                              name="node_key"
                              sortKeyPosition="1"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              name="node_key" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Inputs[Merge Join Left Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Output].Columns[node_key]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Inputs[Merge Join Right Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Inputs[Merge Join Right Input].Columns[full_class_label]"
                              cachedDataType="nText"
                              cachedName="full_class_label"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].Columns[full_class_label]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Outputs[Merge Join Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Outputs[Merge Join Output].Columns[node_key]"
                              name="node_key"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Inputs[Merge Join Left Input].Columns[node_key]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Outputs[Merge Join Output].Columns[full_class_label]"
                              dataType="nText"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Outputs[Merge Join Output].Columns[full_class_label]"
                              name="full_class_label">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Inputs[Merge Join Right Input].Columns[full_class_label]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_property_str]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              cachedSortKeyPosition="1"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Outputs[Merge Join Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_property_type]"
                              cachedDataType="wstr"
                              cachedLength="150"
                              cachedName="node_property_type"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Output].Columns[node_property_type]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_property_value]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="node_property_value"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Output].Columns[node_property_value]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                              dataType="wstr"
                              length="150"
                              name="node_property_type" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                              dataType="nText"
                              name="node_property_value" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Patent Class"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable">User::sqlPatentClassFromDhVersion</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[DatahandlerDB]"
                          connectionManagerRefId="Package.ConnectionManagers[DatahandlerDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output]"
                          isSorted="true"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].Columns[node_key]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].Columns[node_key]"
                              name="node_key"
                              sortKeyPosition="1"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].Columns[full_class_label]"
                              dataType="nText"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[full_class_label]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].Columns[full_class_label]"
                              name="full_class_label"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[class_label]"
                              codePage="1252"
                              dataType="str"
                              length="400"
                              name="class_label" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[node_id]"
                              dataType="wstr"
                              length="16"
                              name="node_id" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[full_class_label]"
                              dataType="nText"
                              name="full_class_label" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[aggregate_n_fam]"
                              dataType="i4"
                              name="aggregate_n_fam" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              name="node_key" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[full_class_label]"
                              dataType="nText"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[full_class_label]"
                              name="full_class_label" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label.Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Row Count.Inputs[Row Count Input 1]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label.Paths[Merge Join Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label.Paths[OLE DB Source Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Inputs[Merge Join Left Input]"
                      name="OLE DB Source Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label.Paths[OLE DB Source Output1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join.Inputs[Merge Join Right Input]"
                      name="OLE DB Source Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Extended Label.Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Get High-level label"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{F0E3EAA6-58CD-4B9D-A5B2-72ADF8F5D2D8}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get High-level label"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Inputs[Derived Column Input].Columns[high_level_label]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="high_level_label"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output].Columns[high_level_label]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Output].Columns[node_property_type]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="150"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Output].Columns[node_property_type]"
                              name="node_property_type"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTr,150)@[User::this_PropertyLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTr,150)@[User::this_PropertyLabel]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Output].Columns[node_property_value]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="500"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Output].Columns[node_property_value]"
                              name="node_property_value"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,500)#{Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output].Columns[high_level_label]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,500)high_level_label</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_property_str]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_property_type]"
                              cachedDataType="wstr"
                              cachedLength="150"
                              cachedName="node_property_type"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Output].Columns[node_property_type]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_property_value]"
                              cachedDataType="wstr"
                              cachedLength="500"
                              cachedName="node_property_value"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Output].Columns[node_property_value]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                              dataType="wstr"
                              length="150"
                              name="node_property_type" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                              dataType="nText"
                              name="node_property_value" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="OLE DB Source"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable">User::sqlGetNodeHighLevelLabel_SplitString</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_key]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_key]"
                              name="node_key"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output].Columns[high_level_label]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[high_level_label]"
                              length="250"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output].Columns[high_level_label]"
                              name="high_level_label"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[high_level_label]"
                              dataType="wstr"
                              length="250"
                              name="high_level_label" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              name="node_key" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[high_level_label]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[high_level_label]"
                              name="high_level_label" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get High-level label.Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Row Count.Inputs[Row Count Input 1]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get High-level label.Paths[OLE DB Source Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column.Inputs[Derived Column Input]"
                      name="OLE DB Source Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get High-level label.Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Get High-level label\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Get high-level-label table SQL"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:Disabled="True"
              DTS:DTSID="{05E9E4D1-08E5-45A1-9516-3FB581AF5EE0}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get high-level-label table SQL"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_8b3b1e5a49e34a6c82de7f8f1fc800ee"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::this_PropertyParameters"
                  ReadWriteVariables="User::sqlHighLevelLabelTable">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8b3b1e5a49e34a6c82de7f8f1fc800ee")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8b3b1e5a49e34a6c82de7f8f1fc800ee")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_8b3b1e5a49e34a6c82de7f8f1fc800ee
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			string sql = "declare @hll table(node_id_prefix nvarchar(100), high_level_label nvarchar(250)); ";
            string highLevelLabels = (string)Dts.Variables["this_PropertyParameters"].Value;

            string[] labels= highLevelLabels.Split('|');
            string[] kv;
            foreach (string label in labels)
            {
                kv = label.Split(':');
                sql = sql + String.Format("INSERT INTO @hll VALUES('{0}','{1}'); ",kv[0],kv[1]);
            }
                 
            Dts.Variables["sqlHighLevelLabelTable"].Value = sql;

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_8b3b1e5a49e34a6c82de7f8f1fc800ee.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{98d34591-ea9b-401c-a5de-9c75dddaa6bf}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8b3b1e5a49e34a6c82de7f8f1fc800ee</RootNamespace>
    <AssemblyName>ST_8b3b1e5a49e34a6c82de7f8f1fc800ee</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_8b3b1e5a49e34a6c82de7f8f1fc800ee</msb:CodeName>
		<msb:DisplayName>ST_8b3b1e5a49e34a6c82de7f8f1fc800ee</msb:DisplayName>
		<msb:ProjectId>{9B30DF73-33B5-4B82-B485-9E9D48BB9BCE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_8b3b1e5a49e34a6c82de7f8f1fc800ee.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8b3b1e5a49e34a6c82de7f8f1fc800ee.Properties.Settings.get_Default():ST_8b3b1e5a49e34a6c82de7f8f1fc800ee.Properties.Sett" +
    "ings")]

namespace ST_8b3b1e5a49e34a6c82de7f8f1fc800ee.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8b3b1e5a49e34a6c82de7f8f1fc800ee.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8b3b1e5a49e34a6c82de7f8f1fc800ee.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8b3b1e5a49e34a6c82de7f8f1fc800ee.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8b3b1e5a49e34a6c82de7f8f1fc800ee.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8b3b1e5a49e34a6c82de7f8f1fc800ee.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_8b3b1e5a49e34a6c82de7f8f1fc800ee.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPL9ulYAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAADjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALQvAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
LwAAAAAAAEgAAAACAAUAQCIAAHQNAAABAAAAAAAAAIghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBQCxAAAAAgAAEXJzAABwCgIoFgAACm8XAAAKchoBAHBvGAAACm8Z
AAAKdB4AAAELBxeNHwAAARMFEQUWH3ydEQVvGgAACgwIEwYWEwcrPBEGEQeaEwQRBBeNHwAAARMI
EQgWHzqdEQhvGgAACg0GckoBAHAJFpoJF5ooGwAACigcAAAKChEHF1gTBxEHEQaOaTK8AigWAAAK
bxcAAApymAEAcG8YAAAKBm8dAAAKAigWAAAKFm8eAAAKKh4CKB8AAAoqAAAAAAAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADcAwAAI34AAEgEAADQBQAA
I1N0cmluZ3MAAAAAGAoAAMgBAAAjVVMA4AsAABAAAAAjR1VJRAAAAPALAACEAQAAI0Jsb2IAAAAA
AAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAHwAAAAUAAAAGAAAACQAAAAEAAAAfAAAAAgAAAA8A
AAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAO
AD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUCcAIGAO4C
cAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAGAAIEugAG
ACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F/QQSADUF/QQGAFEFugAGAFgF
ugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAI
AAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAA
gxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACW
CAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACAHkhAAAAAIYY
vAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8
AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4A
uQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAnBZIA4QA+BZcA6QBHBZ0A8QBdBaEA8QBj
BagA8QBqBa8A6QBxBbUA2QB7BV0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbADwBLgAjADwB
LgBjAGIBLgALAMsALgATABMBLgAzABMBLgArADwBLgA7AEIBLgBDADwBLgBbAFkBQwBrAFMASQCT
AIAAYQCbAFMAgwCrAFMAdQC6AAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUA
AQAEAAUAAgAFAAcABIAAAAEAAAD8FkFHAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAA
AAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAAAAAAAAoA3gQAAAAA
AAAAAAEAAACKBQAABQAEAAAAADxNb2R1bGU+AFNUXzhiM2IxZTVhNDllMzRhNmM4MmRlN2Y4ZjFm
YzgwMGVlLmRsbABSZXNvdXJjZXMAU1RfOGIzYjFlNWE0OWUzNGE2YzgyZGU3ZjhmMWZjODAwZWUu
UHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUXzhiM2IxZTVhNDllMzRhNmM4MmRlN2Y4
ZjFmYzgwMGVlAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdl
cgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1
bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBD
dWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBT
dWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5
Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNz
ZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
LmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2Rl
bABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVt
AGdldF9WYWx1ZQBTdHJpbmcAQ2hhcgBTcGxpdABGb3JtYXQAQ29uY2F0AHNldF9WYWx1ZQBzZXRf
VGFza1Jlc3VsdABTVF84YjNiMWU1YTQ5ZTM0YTZjODJkZTdmOGYxZmM4MDBlZS5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMAAAAAAHFTAFQAXwA4AGIAMwBiADEAZQA1AGEANAA5AGUAMwA0
AGEANgBjADgAMgBkAGUANwBmADgAZgAxAGYAYwA4ADAAMABlAGUALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAIClZABlAGMAbABhAHIAZQAgAEAAaABsAGwAIAB0AGEA
YgBsAGUAKABuAG8AZABlAF8AaQBkAF8AcAByAGUAZgBpAHgAIABuAHYAYQByAGMAaABhAHIAKAAx
ADAAMAApACwAIABoAGkAZwBoAF8AbABlAHYAZQBsAF8AbABhAGIAZQBsACAAbgB2AGEAcgBjAGgA
YQByACgAMgA1ADAAKQApADsAIAAAL3QAaABpAHMAXwBQAHIAbwBwAGUAcgB0AHkAUABhAHIAYQBt
AGUAdABlAHIAcwAATUkATgBTAEUAUgBUACAASQBOAFQATwAgAEAAaABsAGwAIABWAEEATABVAEUA
UwAoACcAewAwAH0AJwAsACcAewAxAH0AJwApADsAIAABLXMAcQBsAEgAaQBnAGgATABlAHYAZQBs
AEwAYQBiAGUAbABUAGEAYgBsAGUAAAAAZihfb3ZEZU6Tv7NzFZbtswAIt3pcVhk04IkIiYRdzYCA
zJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYI
AwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEA
AgAAAAAAAwAAAQQgABJtBCAAEnEFIAESdRwDIAAcBiABHQ4dAwYAAw4OHBwFAAIODg4EIAEBHBAH
CQ4OHQ4dDg4dAx0OCB0DRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUXzhiM2IxZTVhNDllMzRhNmM4MmRl
N2Y4ZjFmYzgwMGVlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAADcLwAAAAAAAAAAAAD+LwAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAA8C8AAAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAEFH/BYAAAEAQUf8Fj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA4AGIAMwBiADEAZQA1AGEANAA5AGUAMwA0AGEANgBjADgAMgBkAGUANwBmADgAZgAxAGYAYwA4
ADAAMABlAGUAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA4ADgA
NAAuADEAOAAyADQAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA4
AGIAMwBiADEAZQA1AGEANAA5AGUAMwA0AGEANgBjADgAMgBkAGUANwBmADgAZgAxAGYAYwA4ADAA
MABlAGUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAFQAXwA4AGIAMwBiADEAZQA1AGEANAA5AGUAMwA0AGEANgBjADgAMgBk
AGUANwBmADgAZgAxAGYAYwA4ADAAMABlAGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBUAF8AOABiADMAYgAxAGUANQBhADQAOQBlADMANABhADYAYwA4ADIAZABl
ADcAZgA4AGYAMQBmAGMAOAAwADAAZQBlAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA1ADgAOAA0AC4AMQA4ADIANAAxAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADgAOAA0AC4AMQA4ADIANAAxAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Get Label"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{93412456-1277-4846-80A4-991CCF3EB4A0}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Label"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="List of Nodes"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select node_key from dbo.ls_node order by node_key</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Output]"
                          isSorted="true"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Output].Columns[node_key]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Output].Columns[node_key]"
                              name="node_key"
                              sortKeyPosition="1"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              name="node_key" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Inputs[Merge Join Left Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Output].Columns[node_key]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Inputs[Merge Join Right Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Inputs[Merge Join Right Input].Columns[class_label]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="400"
                              cachedName="class_label"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].Columns[class_label]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Outputs[Merge Join Output].Columns[class_label]"
                              codePage="1252"
                              dataType="str"
                              length="400"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Outputs[Merge Join Output].Columns[class_label]"
                              name="class_label">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Inputs[Merge Join Right Input].Columns[class_label]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Outputs[Merge Join Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Outputs[Merge Join Output].Columns[node_key]"
                              name="node_key"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Inputs[Merge Join Left Input].Columns[node_key]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_property_str]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              cachedSortKeyPosition="1"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Outputs[Merge Join Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_property_type]"
                              cachedDataType="wstr"
                              cachedLength="150"
                              cachedName="node_property_type"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Output].Columns[node_property_type]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_property_value]"
                              cachedDataType="wstr"
                              cachedLength="500"
                              cachedName="node_property_value"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Output].Columns[node_property_value]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                              dataType="wstr"
                              length="150"
                              name="node_property_type" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                              dataType="nText"
                              name="node_property_value" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Patent Class"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable">User::sqlPatentClassFromDhVersion</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[DatahandlerDB]"
                          connectionManagerRefId="Package.ConnectionManagers[DatahandlerDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output]"
                          isSorted="true"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].Columns[node_key]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].Columns[node_key]"
                              name="node_key"
                              sortKeyPosition="1"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].Columns[class_label]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[class_label]"
                              length="400"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].Columns[class_label]"
                              name="class_label"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[class_label]"
                              codePage="1252"
                              dataType="str"
                              length="400"
                              name="class_label" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[node_id]"
                              dataType="wstr"
                              length="16"
                              name="node_id" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[full_class_label]"
                              dataType="nText"
                              name="full_class_label" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output].ExternalColumns[aggregate_n_fam]"
                              dataType="i4"
                              name="aggregate_n_fam" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              name="node_key" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[class_label]"
                              codePage="1252"
                              dataType="str"
                              length="400"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Error Output].Columns[class_label]"
                              name="class_label" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Label\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Label\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Type cast values"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Inputs[Derived Column Input].Columns[class_label]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="400"
                              cachedName="class_label"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Outputs[Merge Join Output].Columns[class_label]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Output].Columns[node_property_type]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="150"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Output].Columns[node_property_type]"
                              name="node_property_type"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTr,150)@[User::this_PropertyLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTr,150)@[User::this_PropertyLabel]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Output].Columns[node_property_value]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="500"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Output].Columns[node_property_value]"
                              name="node_property_value"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,500)#{Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Outputs[Merge Join Output].Columns[class_label]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,500)class_label</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Label.Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Label\Row Count.Inputs[Row Count Input 1]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Label.Paths[Merge Join Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Label.Paths[OLE DB Source Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Inputs[Merge Join Left Input]"
                      name="OLE DB Source Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Label.Paths[OLE DB Source Output1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join.Inputs[Merge Join Right Input]"
                      name="OLE DB Source Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Label.Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Label\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Get Node ID"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{158ba36e-94ee-43ca-ad45-89665ef85d39}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Node ID"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Outputs[Derived Column Output].Columns[node_property_type]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="150"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Outputs[Derived Column Output].Columns[node_property_type]"
                              name="node_property_type"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTr,150)@[User::this_PropertyLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTr,150)@[User::this_PropertyLabel]</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="OLE DB Destination"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node_property_str]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_key]"
                              cachedDataType="i4"
                              cachedName="node_key"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_key]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_property_type]"
                              cachedDataType="wstr"
                              cachedLength="150"
                              cachedName="node_property_type"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Outputs[Derived Column Output].Columns[node_property_type]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[node_id]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="node_id"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_id]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                              dataType="wstr"
                              length="150"
                              name="node_property_type" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                              dataType="nText"
                              name="node_property_value" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="OLE DB Source"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ls_node]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">0</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_key]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_key]"
                              name="node_key"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_id]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[node_id]"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_id]"
                              name="node_id"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                              dataType="i4"
                              name="node_key" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[node_id]"
                              dataType="wstr"
                              length="100"
                              name="node_id" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[node_retrieval_key]"
                              dataType="wstr"
                              length="50"
                              name="node_retrieval_key" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[node_key]"
                              name="node_key" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[node_id]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[node_id]"
                              name="node_id" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Node ID.Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Row Count.Inputs[Row Count Input 1]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Node ID.Paths[OLE DB Source Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column.Inputs[Derived Column Input]"
                      name="OLE DB Source Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Get Node ID.Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Get Node ID\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Sequence Container"
              DTS:CreationName="STOCK:SEQUENCE"
              DTS:Description="Sequence Container"
              DTS:DTSID="{F78C505B-AE75-4BD0-9768-9EDC2FDFD65B}"
              DTS:ExecutableType="STOCK:SEQUENCE"
              DTS:LocaleID="-1"
              DTS:ObjectName="Sequence Container">
              <DTS:Variables />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape"
                  DTS:CreationName="Microsoft.Pipeline"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{43df66f9-c21f-4646-88ec-612d9fab3c81}"
                  DTS:ExecutableType="Microsoft.Pipeline"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Get Trend Relative To Landscape"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <pipeline
                      version="1">
                      <components>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column"
                          componentClassID="Microsoft.DerivedColumn"
                          contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                          name="Derived Column"
                          usesDispositions="true">
                          <inputs>
                            <input
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Inputs[Derived Column Input]"
                              description="Input to the Derived Column Transformation"
                              name="Derived Column Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Inputs[Derived Column Input].Columns[relative_change]"
                                  cachedDataType="r4"
                                  cachedName="relative_change"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[relative_change]" />
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Inputs[Derived Column Input].Columns[absolute_change]"
                                  cachedDataType="r4"
                                  cachedName="absolute_change"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[absolute_change]" />
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output]"
                              description="Default Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              name="Derived Column Output"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output].Columns[str_node_property_type]"
                                  dataType="wstr"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  length="150"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output].Columns[str_node_property_type]"
                                  name="str_node_property_type"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">(DT_WSTR,150)@[User::this_PropertyLabel]</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">(DT_WSTR,150)@[User::this_PropertyLabel]</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output].Columns[str_node_property_value]"
                                  dataType="wstr"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  length="15"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output].Columns[str_node_property_value]"
                                  name="str_node_property_value"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">(DT_WSTR,15)([ISNULL](#{Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[relative_change]}) ? (#{Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[absolute_change]} &gt; 0 ? "3. Growth" : (#{Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[absolute_change]} &lt; 0 ? "1. Decline" : "2. Stable")) : (#{Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[relative_change]} &gt; 1.25 ? "3. Growth" : (#{Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[relative_change]} &lt; 0.75 ? "1. Decline" : "2. Stable")))</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">(DT_WSTR,15)(ISNULL(relative_change) ? (absolute_change &gt; 0 ? "3. Growth" : (absolute_change &lt; 0 ? "1. Decline" : "2. Stable")) : (relative_change &gt; 1.25 ? "3. Growth" : (relative_change &lt; 0.75 ? "1. Decline" : "2. Stable")))</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output].Columns[num_node_property_value]"
                                  dataType="numeric"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output].Columns[num_node_property_value]"
                                  name="num_node_property_value"
                                  precision="30"
                                  scale="10"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">(DT_NUMERIC,30,10)#{Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[relative_change]}</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">(DT_NUMERIC,30,10)relative_change</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output].Columns[num_node_property_type]"
                                  dataType="wstr"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  length="150"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output].Columns[num_node_property_type]"
                                  name="num_node_property_type"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">(DT_WSTR,150)(@[User::this_PropertyLabel] + " Value")</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">(DT_WSTR,150)(@[User::this_PropertyLabel] + " Value")</property>
                                  </properties>
                                </outputColumn>
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Error Output]"
                              description="Error Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="Derived Column Error Output"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label"
                          componentClassID="Microsoft.OLEDBDestination"
                          contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                          description="OLE DB Destination"
                          name="Growth Label"
                          usesDispositions="true"
                          version="4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[dbo].[ls_node_property_str]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">false</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepIdentity">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepNulls">false</property>
                            <property
                              dataType="System.String"
                              description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                              name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                              name="FastLoadMaxInsertCommitSize">2147483647</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                              connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Inputs[OLE DB Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="OLE DB Destination Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Inputs[OLE DB Destination Input].Columns[node_key]"
                                  cachedDataType="i4"
                                  cachedName="node_key"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_key]" />
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Inputs[OLE DB Destination Input].Columns[str_node_property_type]"
                                  cachedDataType="wstr"
                                  cachedLength="150"
                                  cachedName="str_node_property_type"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output].Columns[str_node_property_type]" />
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Inputs[OLE DB Destination Input].Columns[str_node_property_value]"
                                  cachedDataType="wstr"
                                  cachedLength="15"
                                  cachedName="str_node_property_value"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output].Columns[str_node_property_value]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                                  dataType="i4"
                                  name="node_key" />
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                                  dataType="wstr"
                                  length="150"
                                  name="node_property_type" />
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                                  dataType="nText"
                                  name="node_property_value" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Outputs[OLE DB Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="OLE DB Destination Error Output"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Inputs[OLE DB Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric"
                          componentClassID="Microsoft.OLEDBDestination"
                          contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                          description="OLE DB Destination"
                          name="Growth Numeric"
                          usesDispositions="true"
                          version="4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[dbo].[ls_node_property_numeric]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">false</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepIdentity">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepNulls">false</property>
                            <property
                              dataType="System.String"
                              description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                              name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                              name="FastLoadMaxInsertCommitSize">2147483647</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                              connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Inputs[OLE DB Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="OLE DB Destination Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Inputs[OLE DB Destination Input].Columns[node_key]"
                                  cachedDataType="i4"
                                  cachedName="node_key"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_key]" />
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Inputs[OLE DB Destination Input].Columns[num_node_property_type]"
                                  cachedDataType="wstr"
                                  cachedLength="150"
                                  cachedName="num_node_property_type"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output].Columns[num_node_property_type]" />
                                <inputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Inputs[OLE DB Destination Input].Columns[num_node_property_value]"
                                  cachedDataType="numeric"
                                  cachedName="num_node_property_value"
                                  cachedPrecision="30"
                                  cachedScale="10"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output].Columns[num_node_property_value]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Inputs[OLE DB Destination Input].ExternalColumns[node_key]"
                                  dataType="i4"
                                  name="node_key" />
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Inputs[OLE DB Destination Input].ExternalColumns[node_property_type]"
                                  dataType="wstr"
                                  length="150"
                                  name="node_property_type" />
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Inputs[OLE DB Destination Input].ExternalColumns[node_property_value]"
                                  dataType="numeric"
                                  name="node_property_value"
                                  precision="30"
                                  scale="10" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Outputs[OLE DB Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="OLE DB Destination Error Output"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Inputs[OLE DB Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Multicast"
                          componentClassID="Microsoft.Multicast"
                          contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                          name="Multicast">
                          <inputs>
                            <input
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Multicast.Inputs[Multicast Input 1]"
                              name="Multicast Input 1">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Multicast.Outputs[Multicast Output 1]"
                              deleteOutputOnPathDetached="true"
                              name="Multicast Output 1"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Multicast.Inputs[Multicast Input 1]">
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Multicast.Outputs[Multicast Output 2]"
                              deleteOutputOnPathDetached="true"
                              name="Multicast Output 2"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Multicast.Inputs[Multicast Input 1]">
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Multicast.Outputs[Multicast Output 3]"
                              dangling="true"
                              deleteOutputOnPathDetached="true"
                              name="Multicast Output 3"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Multicast.Inputs[Multicast Input 1]">
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source"
                          componentClassID="Microsoft.OLEDBSource"
                          contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                          description="OLE DB Source"
                          name="OLE DB Source"
                          usesDispositions="true"
                          validateExternalMetadata="False"
                          version="7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[dbo].[ls_node]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                            <property
                              dataType="System.String"
                              description="The variable that contains the SQL command to be executed."
                              name="SqlCommandVariable">User::sqlTrend</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">false</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.String"
                              description="The mappings between the parameters in the SQL command and variables."
                              name="ParameterMapping"></property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                              connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output]"
                              name="OLE DB Source Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_key]"
                                  dataType="i4"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[node_key]"
                                  name="node_key"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[relative_change]"
                                  dataType="r4"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[relative_change]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[relative_change]"
                                  name="relative_change"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[absolute_change]"
                                  dataType="r4"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[absolute_change]"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].Columns[absolute_change]"
                                  name="absolute_change"
                                  truncationRowDisposition="FailComponent" />
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[node_key]"
                                  dataType="i4"
                                  name="node_key" />
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[relative_change]"
                                  dataType="r4"
                                  name="relative_change" />
                                <externalMetadataColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[absolute_change]"
                                  dataType="r4"
                                  name="absolute_change" />
                              </externalMetadataColumns>
                            </output>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Error Output]"
                              isErrorOut="true"
                              name="OLE DB Source Error Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[relative_change]"
                                  dataType="r4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[relative_change]"
                                  name="relative_change" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[absolute_change]"
                                  dataType="r4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[absolute_change]"
                                  name="absolute_change" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                                <outputColumn
                                  refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[node_key]"
                                  dataType="i4"
                                  lineageId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[node_key]"
                                  name="node_key" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Row Count"
                          componentClassID="Microsoft.RowCount"
                          contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                          name="Row Count">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the variable to hold the row count."
                              name="VariableName">User::varRowCount</property>
                          </properties>
                          <inputs>
                            <input
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Row Count.Inputs[Row Count Input 1]"
                              hasSideEffects="true"
                              name="Row Count Input 1">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Row Count.Outputs[Row Count Output 1]"
                              name="Row Count Output 1"
                              synchronousInputId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Row Count.Inputs[Row Count Input 1]">
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape.Paths[Derived Column Output]"
                          endId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Row Count.Inputs[Row Count Input 1]"
                          name="Derived Column Output"
                          startId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Outputs[Derived Column Output]" />
                        <path
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape.Paths[Multicast Output 1]"
                          endId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label.Inputs[OLE DB Destination Input]"
                          name="Multicast Output 1"
                          startId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Multicast.Outputs[Multicast Output 1]" />
                        <path
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape.Paths[Multicast Output 2]"
                          endId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric.Inputs[OLE DB Destination Input]"
                          name="Multicast Output 2"
                          startId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Multicast.Outputs[Multicast Output 2]" />
                        <path
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape.Paths[OLE DB Source Output]"
                          endId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column.Inputs[Derived Column Input]"
                          name="OLE DB Source Output"
                          startId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source.Outputs[OLE DB Source Output]" />
                        <path
                          refId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape.Paths[Row Count Output 1]"
                          endId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Multicast.Inputs[Multicast Input 1]"
                          name="Row Count Output 1"
                          startId="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Row Count.Outputs[Row Count Output 1]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{E7AE9C5F-1C36-47C4-84FC-4DE0C165568A}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_PropertyMethod]==&quot;TechnologyClassLabel&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Decode Parameters"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Get Label" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{2EA40DFA-8087-4ECE-9258-FA861DE2C204}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_PropertyMethod]==&quot;TechnologyClassExtendedLabel&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Decode Parameters"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Get Extended Label" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{F5A9B8D7-44DB-4D73-A740-1235A6A8BA3B}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_PropertyMethod]==&quot;TechnologyClassSize&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Decode Parameters"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Get Class Size" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{CB48BE7A-370A-4AF1-ADA5-72187AB2F3E9}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_PropertyMethod]==&quot;HighLevelTechnologyLabel&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Decode Parameters"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Get High-level label" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{520A1B74-8B92-4B8C-8FEF-6EB598FD75E8}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_PropertyMethod]==&quot;NodeId&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Decode Parameters"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Get Node ID" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{37ADD9A9-420B-4CF9-8F2A-E33D44E65813}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_PropertyMethod]==&quot;TechnologyTrend&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Decode Parameters"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Sequence Container" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{50039A66-432B-40EF-9546-165AEE5B07BF}"
              DTS:ObjectName="{50039A66-432B-40EF-9546-165AEE5B07BF}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::this_GetNodePropertiesParam" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Truncate node properties"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1A1BFEC8-4887-4F89-AD7B-380D08CB1863}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate node properties"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{672E2FBD-6A09-4C4C-828F-A4C16D688AAF}"
              SQLTask:SqlStatementSource="truncate table ls_node_property_numeric;&#xA;truncate table ls_node_property_str;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{E3D9CA81-CCD9-427B-B0E6-A1619FB96F49}"
          DTS:From="Package\Execute Feature\Truncate node properties"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Execute Feature\Foreach Loop Container" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize - specific"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{42E1D7FA-B325-4C50-98D3-F089C74D89B0}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize - specific">
      <DTS:Variables />
      <DTS:Executables />
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize - template"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{FEBFCB4E-1C72-4913-A653-8E4598CA3F2A}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize - template">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Get server configuration"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C0B19FDC-F70B-4495-9450-D1F3FCF2797B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get server configuration"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
              SQLTask:SqlStatementSource="select @@ServerName AS DBServer, DB_NAME() AS DBName"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="DBServer"
                SQLTask:DtsVariableName="User::cfg_tpl_DBServer" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="DBName"
                SQLTask:DtsVariableName="User::cfg_tpl_DBName" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Initialize package configuration"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{982E3D4C-5954-42D6-A97D-56699E5815F2}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Initialize package configuration"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_9560e13f3ccd474984696163ed602485"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName"
              ReadWriteVariables="User::cfg_pkg_GetNodePropertiesParams">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9560e13f3ccd474984696163ed602485")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9560e13f3ccd474984696163ed602485")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Settings.get_Default():ST_9560e13f3ccd474984696163ed602485.Properties.Sett" +
    "ings")]

namespace ST_9560e13f3ccd474984696163ed602485.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Reflection;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig.Params;
#endregion

namespace ST_9560e13f3ccd474984696163ed602485
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        public void Main()
        {
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetupLogger();

                deloitte.SetCollectionForForEachLoopToVar<GetNodePropertiesParam>(
                    deloitte.PackageConfig.GetNodePropertiesParams,
                    "User::cfg_pkg_GetNodePropertiesParams"
                );

            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_9560e13f3ccd474984696163ed602485</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_9560e13f3ccd474984696163ed602485</msb:DisplayName>
		<msb:ProjectId>{9F216E4F-5C1A-40B1-881B-70F9ACA427D7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_9560e13f3ccd474984696163ed602485.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="d2d91c33a3d846f3925b9e39c50b2f58">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>13</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>104</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_9560e13f3ccd474984696163ed602485.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0468E881-81F4-4705-81DD-986AAA4B302F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9560e13f3ccd474984696163ed602485</RootNamespace>
    <AssemblyName>ST_9560e13f3ccd474984696163ed602485</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_7.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9560e13f3ccd474984696163ed602485.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9560e13f3ccd474984696163ed602485.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_9560e13f3ccd474984696163ed602485.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANyG4VYAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAPi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPAuAABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
LwAAAAAAAEgAAAACAAUA4CEAABANAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwBCAAAAAgAAEQIoFgAACnMXAAAKCgZvGAAACgYGbxkAAApvGgAA
CnJzAABwbwEAACsm3goGLAYGbxwAAArcAigWAAAKFm8dAAAKKgAAARAAAAIADAAfKwAKAAAAAB4C
KB4AAAoqAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADkAwAAI34AAFAEAAB0BgAAI1N0cmluZ3MAAAAAxAoAAMAAAAAjVVMAhAsAABAAAAAjR1VJRAAA
AJQLAAB8AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJCwAAAPolMwAWAAABAAAAIAAAAAUAAAAGAAAA
CQAAAAEAAAAeAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAEAAAAA
AAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnAC
BgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3ACBgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCv
A28DBgDgA80DBgD9A7oABgACBLoABgAmBHACCgBSBDwECgBrBDwEBgCABG8DDgCiBBQBDgDEBBQB
EgD5BN4EEgA+BRQFBgB6BV8FEgC5BYgFBgANBroAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQAB
AAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEArAEXABEA
9gE5AAYGHwJHAFaAJwJKAFaALwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACT
CNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY
mwSJAAIAvCAAAAAAhgAaAhsAAgAcIQAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFY
AFEAvAFYAFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkA
vAEbAAkAvAEbAKEAFARiAKEALwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA1gSN
AOEAvAGbAOEACAUbAOEATQWhAOkA0AWmAOEA7AWvAAEBGQYbANkAIQZdABkAvAEbAAgAFABOAAgA
GABTACkAkwCAAC4AGwA2AS4AIwA2AS4AYwBcAS4ACwDFAC4AEwANAS4AMwANAS4AKwA2AS4AOwA8
AS4AQwA2AS4AWwBTAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAHUAwAACAAEAAwADAAAAbwEvAAAA
7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAGRf2bQAAAAAAAH8AAAAE
AAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAA
AAADAAAAAAAAAAAAAACSAN4EAAAAAAAAAAABAAAAMAYAAAUABAA3ALsAAAAAPE1vZHVsZT4AU1Rf
OTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYzZWQ2MDI0ODUuZGxsAFJlc291cmNlcwBTVF85NTYwZTEz
ZjNjY2Q0NzQ5ODQ2OTYxNjNlZDYwMjQ4NS5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4A
U1RfOTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYzZWQ2MDI0ODUAU2NyaXB0UmVzdWx0cwBtc2Nvcmxp
YgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3Rl
bS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0
aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZh
dWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlv
bgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lv
bkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVs
YXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRp
YWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMARGVsb2l0dGUuUGlwZWxpbmVGcmFt
ZXdvcmsARGVsb2l0dGVTY3JpcHQAU2V0dXBMb2dnZXIARGVsb2l0dGUuUGlwZWxpbmVGcmFtZXdv
cmsuUGxhdGZvcm1Db25maWcAQ29tcG9uZW50UGFyYW0AZ2V0X1BhY2thZ2VDb25maWcAU3lzdGVt
LkNvbGxlY3Rpb25zLkdlbmVyaWMASUVudW1lcmFibGVgMQBEZWxvaXR0ZS5QaXBlbGluZUZyYW1l
d29yay5QbGF0Zm9ybUNvbmZpZy5QYXJhbXMAR2V0Tm9kZVByb3BlcnRpZXNQYXJhbQBnZXRfR2V0
Tm9kZVByb3BlcnRpZXNQYXJhbXMAU2V0Q29sbGVjdGlvbkZvckZvckVhY2hMb29wVG9WYXIASURp
c3Bvc2FibGUARGlzcG9zZQBzZXRfVGFza1Jlc3VsdABTVF85NTYwZTEzZjNjY2Q0NzQ5ODQ2OTYx
NjNlZDYwMjQ4NS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAABxUwBUAF8AOQA1ADYA
MABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQANgA5ADYAMQA2ADMAZQBkADYAMAAyADQAOAA1
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABLVQBzAGUAcgA6ADoA
YwBmAGcAXwBwAGsAZwBfAEcAZQB0AE4AbwBkAGUAUAByAG8AcABlAHIAdABpAGUAcwBQAGEAcgBh
AG0AcwAAAPbnGPvKbkNGryzE4JDPEFYACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAA
EhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCAB
AQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQj5
Ajo2DehLDAUgAQESbQQgABJ1CCAAFRJ5ARJ9CzABAgIVEnkBHgAOBAoBEn0EBwEScUcBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFt
ZXdvcmsgNCgBACNTVF85NTYwZTEzZjNjY2Q0NzQ5ODQ2OTYxNjNlZDYwMjQ4NQAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDE1AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBABgvAAAAAAAAAAAAAC4vAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgLwAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQD2bRkXAAABAPZtGRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AOQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQANgA5ADYAMQA2ADMAZQBkADYA
MAAyADQAOAA1AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQAx
ADMALgAyADgAMQA1ADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
OQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQANgA5ADYAMQA2ADMAZQBkADYAMAAy
ADQAOAA1AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AOQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQA
NgA5ADYAMQA2ADMAZQBkADYAMAAyADQAOAA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADkANQA2ADAAZQAxADMAZgAzAGMAYwBkADQANwA0ADkAOAA0ADYA
OQA2ADEANgAzAGUAZAA2ADAAMgA0ADgANQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA5ADEAMwAuADIAOAAxADUAMAAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADEAMwAuADIAOAAxADUAMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABAPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="104"
                Column="13" />
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Set configuration through Invocation Handler"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8591f623-187c-44d9-b733-91e6da2b1ab9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set configuration through Invocation Handler"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
              SQLTask:SqlStatementSource="select value from ivh.run_paramvalue where run_id=? and parameter='api_config' "
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::cfg_tpl_jsonConfiguration" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::cfg_sla_RunID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{2C8BD807-FC9E-4E17-8837-4678CF284FAD}"
          DTS:From="Package\Initialize - template\Get server configuration"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Initialize - template\Set configuration through Invocation Handler" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{6F0C06D7-5C51-4F56-BD96-3B9212483FD6}"
          DTS:From="Package\Initialize - template\Set configuration through Invocation Handler"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Initialize - template\Initialize package configuration" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize SLA configuration"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DisableEventHandlers="True"
      DTS:DTSID="{CA3DCE22-16F9-428D-A193-04695B499BB3}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize SLA configuration"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{AEAB899A-63B5-4A79-BEB9-E13599660D43}"
          DTS:EventID="728010436"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{49A124CF-9C5A-42F1-82FA-229C253EC87A}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]\Log SLA property"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{5165BC7E-F106-486A-9919-9C0AB0EEFFC8}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log SLA property"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::cfg_sla_RunID]  +  ": SLA key [ComponentID] was set with value \"" +  @[User::cfg_sla_ComponentID] + "\". '"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
                  SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='GetNodeProperties.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run -1: SLA key [ComponentID] was set with value &quot;&quot;. '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7c98d941be6340a4afa5b23346e85fc7"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,User::cfg_tpl_jsonSLA,System::PackageName"
          ReadWriteVariables="User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerCatalog,User::cfg_sla_DatahandlerDataSource,User::cfg_sla_DatahandlerVersion,User::cfg_sla_JsonVersion,User::cfg_sla_PlatformCatalog,User::cfg_sla_PlatformDataSource,User::cfg_sla_PollEvery,User::cfg_sla_ProjectCatalog,User::cfg_sla_ProjectDataSource,User::cfg_sla_RunID,User::cfg_sla_TimeOutAfter">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Settings.get_Default():ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Sett" +
    "ings")]

namespace ST_7c98d941be6340a4afa5b23346e85fc7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig;
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Data;
using System.Data.SqlClient;
using System.Reflection;
using System.Windows.Forms;

#endregion

namespace ST_7c98d941be6340a4afa5b23346e85fc7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts)) 
            {
                deloitte.SetNonNullUserVariablesFor<SLA>("User::cfg_tpl_jsonSLA", "cfg_sla_");
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7c98d941be6340a4afa5b23346e85fc7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_7c98d941be6340a4afa5b23346e85fc7</msb:CodeName>
		<msb:DisplayName>ST_7c98d941be6340a4afa5b23346e85fc7</msb:DisplayName>
		<msb:ProjectId>{2FE85E53-2960-4E7B-AF1B-D38BAF1E3336}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7c98d941be6340a4afa5b23346e85fc7.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="DeloitteScript.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7c98d941be6340a4afa5b23346e85fc7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7c98d941be6340a4afa5b23346e85fc7")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="DeloitteScript.cs"
            Encoding="UTF8"><![CDATA[]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_7c98d941be6340a4afa5b23346e85fc7.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9CD66199-FB02-4B5C-9A30-C7FB7ED47B51}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7c98d941be6340a4afa5b23346e85fc7</RootNamespace>
    <AssemblyName>ST_7c98d941be6340a4afa5b23346e85fc7</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_7.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="DeloitteScript.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_7c98d941be6340a4afa5b23346e85fc7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALUx2VYAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAPi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOgtAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
LgAAAAAAAEgAAAACAAUA0CEAABgMAAABAAAAAAAAABghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwA1AAAAAgAAEQIoFgAACnMXAAAKCgZycwAAcHKfAABwbwEAACve
CgYsBgZvGQAACtwCKBYAAAoWbxoAAAoqAAAAARAAAAIADAASHgAKAAAAAB4CKBsAAAoqtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMgDAAAjfgAANAQAALgF
AAAjU3RyaW5ncwAAAADsCQAAtAAAACNVUwCgCgAAEAAAACNHVUlEAAAAsAoAAGgBAAAjQmxvYgAA
AAAAAAACAAABVx2iAQkLAAAA+iUzABYAAAEAAAAeAAAABQAAAAYAAAAJAAAAAQAAABsAAAACAAAA
DwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAK
AN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUC
cAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAG
AAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAPkE3gQSAE0FIwUGAFEF
ugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAI
AAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAA
gxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACW
CAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACABAhAAAAAIYY
vAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8
AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4A
uQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A4QC8AZsA4QAIBaEA8QBdBRsA2QBlBV0AGQC8
ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbACMBLgAjACMBLgBjAEkBLgALALIALgATAPoALgAzAPoA
LgArACMBLgA7ACkBLgBDACMBLgBbAEABQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCtAAIAAQAD
AAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAATF+I3
AAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAA
AAAAAAAKAPUAAAAAAAMAAAAAAAAAAAAAAJIA3gQAAAAAAAAAAAEAAAB0BQAABQAEADEAqAAAAAAA
ADxNb2R1bGU+AFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2ZTg1ZmM3LmRsbABSZXNvdXJj
ZXMAU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTViMjMzNDZlODVmYzcuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2ZTg1ZmM3AFNjcmlwdFJl
c3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jl
c291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0
YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lz
dGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBB
c3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5
AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRU
YXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAERlbG9pdHRl
LlBpcGVsaW5lRnJhbWV3b3JrAERlbG9pdHRlU2NyaXB0AFNldE5vbk51bGxVc2VyVmFyaWFibGVz
Rm9yAERlbG9pdHRlLlBpcGVsaW5lRnJhbWV3b3JrLlBsYXRmb3JtQ29uZmlnAFNMQQBJRGlzcG9z
YWJsZQBEaXNwb3NlAHNldF9UYXNrUmVzdWx0AFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2
ZTg1ZmM3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwA3AGMAOQA4AGQA
OQA0ADEAYgBlADYAMwA0ADAAYQA0AGEAZgBhADUAYgAyADMAMwA0ADYAZQA4ADUAZgBjADcALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACtVAHMAZQByADoAOgBjAGYA
ZwBfAHQAcABsAF8AagBzAG8AbgBTAEwAQQAAEWMAZgBnAF8AcwBsAGEAXwAAAAAAosQvvOf7Wkir
EsbhdxM55AAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgA
EhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQg
ABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtCPkCOjYN6EsMBSABARJtBjAB
AgEODgQKARJ1BAcBEnFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTVi
MjMzNDZlODVmYzcAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzARAuAAAAAAAAAAAAAC4uAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAgLgAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDiNxMXAAABAOI3Exc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8ANwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYAYQA1AGIAMgAzADMANAA2AGUA
OAA1AGYAYwA3AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQAw
ADcALgAxADQAMwAwADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYAYQA1AGIAMgAzADMANAA2AGUAOAA1
AGYAYwA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8ANwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYA
YQA1AGIAMgAzADMANAA2AGUAOAA1AGYAYwA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADcAYwA5ADgAZAA5ADQAMQBiAGUANgAzADQAMABhADQAYQBmAGEA
NQBiADIAMwAzADQANgBlADgANQBmAGMANwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA5ADAANwAuADEANAAzADAANgAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADAANwAuADEANAAzADAANgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABAPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{3bae759b-de1f-47bb-876b-0f51e3e1a51f}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\NotifySsisApi"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{391bf7da-47b1-439c-bde8-ac762be75fe2}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="NotifySsisApi"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_d656538dd5e840edba35b341b67eba25"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using System.Collections;
using System.Collections.Generic;
using Deloitte.PipelineFramework.PlatformConfig;
#endregion

namespace ST_065500ea46124711b2237a3a9fbb2b8c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.UpdateApi(
                    code: (int)DeloitteScript.UpdateCodes.ComponentFinished,
                    message: deloitte.PackageName
                );
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_d656538dd5e840edba35b341b67eba25.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{CED7755E-802E-4832-8212-AE5EFAE0331F}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_065500ea46124711b2237a3a9fbb2b8c</RootNamespace><AssemblyName>ST_d656538dd5e840edba35b341b67eba25</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL"><SpecificVersion>False</SpecificVersion><HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath></Reference><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_065500ea46124711b2237a3a9fbb2b8c</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_065500ea46124711b2237a3a9fbb2b8c</msb:DisplayName>
		<msb:ProjectId>{C8A952E6-277A-4655-8AE6-661FAAD948D7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d656538dd5e840edba35b341b67eba25.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Settings.get_Default():ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Sett" +
    "ings")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_7e16b314de4b4f208ea1b087f6566596.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOcP4VYAAAAAAAAAAOAAAiELAQsAAA4AAAAIAAAAAAAA7i0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJQtAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
LQAAAAAAAEgAAAACAAUA0CEAAMQLAAABAAAAAAAAABghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwA2AAAAAgAAEQIoFgAACnMXAAAKCgYg6AMAAAZvGAAACm8ZAAAK
3goGLAYGbxoAAArcAigWAAAKFm8bAAAKKgAAARAAAAIADAATHwAKAAAAAB4CKBwAAAoqtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMADAAAjfgAALAQAAKwF
AAAjU3RyaW5ncwAAAADYCQAAdAAAACNVUwBMCgAAEAAAACNHVUlEAAAAXAoAAGgBAAAjQmxvYgAA
AAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAdAAAABQAAAAYAAAAJAAAAAQAAABwAAAACAAAA
DwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDI
AA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA
7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNvAwYABATxAwYAIQS6AAYAJgS6
AAYASgRwAgoAdgRgBAoAjwRgBAYApARvAw4AxgQUAQ4A6AQUARIAHQUCBQYARgW6AAAAAAABAAAA
AAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAAR
AAQACgARAH8BEwARAKwBFwARAPYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwBGwABAFgg
AAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAA
AAAAhhi8ARsAAgCnIAAAAACRGL8EiQACALwgAAAAAIYAGgIbAAIAECEAAAAAhhi8ARsAAgAAAAEA
NwI5ALwBWABBALwBWABJALwBWABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwBWACB
ALwBWACJALwBXQCRALwBGwCZALwBGwAJALwBGwChADgEYgChAFMEaQApALwBbgC5ALwBegDJALwB
GwARALwBGwDRALwBGwAZAPoEjQDhALwBmwDhACwFoQDhADwFpQDpAFIFGwDZAFoFXQAZALwBGwAI
ABQATgAIABgAUwApAJMAgAAuABsAIQEuACMAIQEuAGMARwEuAAsAsAAuABMA+AAuADMA+AAuACsA
IQEuADsAJwEuAEMAIQEuAFsAPgFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1AKsAAgABAAMAAwAA
AG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAABkXezIAAAAA
AADNAwAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAA
AAoA9QAAAAAAAwAAAAAAAAAAAAAAkgACBQAAAAAAAAAAAQAAAGkFAAAFAAQAAAAAAAA8TW9kdWxl
PgBTVF83ZTE2YjMxNGRlNGI0ZjIwOGVhMWIwODdmNjU2NjU5Ni5kbGwAUmVzb3VyY2VzAFNUXzA2
NTUwMGVhNDYxMjQ3MTFiMjIzN2EzYTlmYmIyYjhjLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0
TWFpbgBTVF8wNjU1MDBlYTQ2MTI0NzExYjIyMzdhM2E5ZmJiMmI4YwBTY3JpcHRSZXN1bHRzAG1z
Y29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0A
U3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZs
ZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlW
ZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF83
ZTE2YjMxNGRlNGI0ZjIwOGVhMWIwODdmNjU2NjU5NgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0
T2JqZWN0TW9kZWwAZ2V0X0R0cwBEZWxvaXR0ZS5QaXBlbGluZUZyYW1ld29yawBEZWxvaXR0ZVNj
cmlwdABnZXRfUGFja2FnZU5hbWUAVXBkYXRlQXBpAElEaXNwb3NhYmxlAERpc3Bvc2UAc2V0X1Rh
c2tSZXN1bHQAU1RfMDY1NTAwZWE0NjEyNDcxMWIyMjM3YTNhOWZiYjJiOGMuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAABxUwBUAF8AMAA2ADUANQAwADAAZQBhADQANgAxADIANAA3ADEA
MQBiADIAMgAzADcAYQAzAGEAOQBmAGIAYgAyAGIAOABjAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAA1eoDi5dJCkKHIibf77VhTQAIt3pcVhk04IkIiYRdzYCAzJED
BhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYR
FAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAA
AAAAAwAAAQQgABJtCPkCOjYN6EsMBSABARJtAyAADgUgAgEIDgQHARJxRwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
KAEAI1NUXzA2NTUwMGVhNDYxMjQ3MTFiMjIzN2EzYTlmYmIyYjhjAAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAALwt
AAAAAAAAAAAAAN4tAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQLQAAAAAAAAAAAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAezIZFwAAAQB7MhkXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAw
ADAAMAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADAANgA1ADUAMAAwAGUAYQA0ADYAMQAyADQANwAxADEAYgAyADIAMwA3AGEAMwBhADkAZgBi
AGIAMgBiADgAYwAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADkA
MQAzAC4AMQAyADkAMgAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADcAZQAxADYAYgAzADEANABkAGUANABiADQAZgAyADAAOABlAGEAMQBiADAAOAA3AGYANgA1ADYA
NgA1ADkANgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYA
aQBsAGUAbgBhAG0AZQAAAFMAVABfADcAZQAxADYAYgAzADEANABkAGUANABiADQAZgAyADAAOABl
AGEAMQBiADAAOAA3AGYANgA1ADYANgA1ADkANgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMA
dABOAGEAbQBlAAAAAABTAFQAXwAwADYANQA1ADAAMABlAGEANAA2ADEAMgA0ADcAMQAxAGIAMgAy
ADMANwBhADMAYQA5AGYAYgBiADIAYgA4AGMAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADUAOQAxADMALgAxADIAOQAyADMAAAAAAEgADwABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOQAxADMALgAxADIAOQAyADMAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAA8D0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set initialized to True"
      DTS:CreationName="Microsoft.ExpressionTask"
      DTS:Description="Expression Task"
      DTS:DTSID="{02F4279C-01BE-45DA-9057-78369C9515D1}"
      DTS:ExecutableType="Microsoft.ExpressionTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set initialized to True"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExpressionTask
          Expression="@[User::cfg_tpl_IsPackageSlaInitialized] = True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Timeout expired"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{C5FA487D-AF5E-4795-9157-D80F982B1574}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Timeout expired">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Timeout expired\Log - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6501A464-59AC-4EB1-BE8F-BDBEAD5691FD}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Timeout expired after " + (DT_WSTR, 16) @[User::cfg_sla_TimeOutAfter] + " seconds.'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='GetNodeProperties.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run 0: Timeout expired after 0 seconds.'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Timeout expired.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{38FB97F8-3A1E-4E02-BE26-93D5BAA62022}"
          DTS:EventID="4456530"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{1F3518A4-6FCE-4ABF-A153-F7F31C67428A}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Timeout expired.EventHandlers[OnPostExecute]\Event - Fail executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{ae8d264e-9a94-4f68-a9f0-7b258c076bb6}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - Fail executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='fail',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Critical'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='fail',@source_id='', @level='Critical'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WAIT FOR Dependencies"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{CD9B679D-7A7E-4BC9-BE23-D72449F0D53D}"
      DTS:EvalExpression="(! @cfg_tpl_depenciesChecked) &amp;&amp; (DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &gt; GETDATE())"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="WAIT FOR Dependencies">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\WAIT FOR Dependencies\Check dependencies"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5848052C-0839-40CA-877B-036C497AC09F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check dependencies"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sqlDependencies"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="depenciesChecked"
                SQLTask:DtsVariableName="User::cfg_tpl_depenciesChecked" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{DDC7B46D-126A-4D28-A143-9018EF3C48A6}"
      DTS:From="Package\Initialize - template"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Check PRE-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{034DC209-DB0E-4669-B0B9-C3375B3E5F32}"
      DTS:From="Package\Initialize - specific"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Check PRE-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{105C7619-9689-40C5-BE1A-3D1A6083E2D3}"
      DTS:From="Package\Check PRE-conditions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\WAIT FOR Dependencies" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{3A7B87C6-50C3-4012-A56D-23799DB88605}"
      DTS:EvalOp="3"
      DTS:Expression="(DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &gt; GETDATE())"
      DTS:From="Package\WAIT FOR Dependencies"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Execute Feature" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{791DA4F5-FD08-417E-A9B8-8DF4BDD49DF8}"
      DTS:From="Package\Execute Feature"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Check POST-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{59428A95-5D24-494F-84B7-153E0FBEFD10}"
      DTS:From="Package\Initialize SLA configuration"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Set initialized to True" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{39135CE8-4C39-4971-9A66-F3C0D54DB942}"
      DTS:From="Package\Set initialized to True"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Initialize - template" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{F70871B6-02C9-436D-8ECC-5897FBCC8BB5}"
      DTS:EvalOp="3"
      DTS:Expression="(DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &lt;= GETDATE())"
      DTS:From="Package\WAIT FOR Dependencies"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Timeout expired" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{C7F0DC83-56BD-4860-9BDF-A9242DD2AB72}"
      DTS:From="Package\Check POST-conditions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Sequence Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{15E40AE7-A724-4603-A145-D8709366E52B}"
      DTS:From="Package\Set initialized to True"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Initialize - specific" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{FCC6D9D7-6A08-466D-B5EF-DBEA30FD891F}"
      DTS:EventID="218076652"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{16F8990B-C773-4AD8-8D0A-5BAEBE1963C7}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Event - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{56EC7A11-A70A-4549-AF1E-68762B3A69B6}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Event - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='fail',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Critical'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
              SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='fail',@source_id='', @level='Critical'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Log - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{77226AF9-DB48-457A-ACFE-740B6FAA8C75}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Failed executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='GetNodeProperties.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run 0: Failed executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{CC4F0E9D-5C3E-4B2E-A33E-786A30D5626E}"
      DTS:EventID="217598736"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{502A6759-2652-4C3A-A52A-3F67EFB1F5A6}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Log - End executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{C8A1C457-5355-4805-B5F7-1FDB06A790CE}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - End executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='SUCCESS', @rowcount=" + (DT_WSTR, 16) @[User::varRowCount]  + ", @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Completed executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='GetNodeProperties.dtsx', @source_id=null, @action='END', @status='SUCCESS', @rowcount=0, @message = 'Run 0: Completed executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPreExecute]"
      DTS:CreationName="OnPreExecute"
      DTS:DTSID="{81941F71-AC7B-4232-B03F-8BC0DEDA2C65}"
      DTS:EventID="0"
      DTS:EventName="OnPreExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{4CACA920-B8AD-409B-B314-82C6642907C9}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\Log - Start executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{FCD56EEA-F8CF-483C-B91B-034A786C5430}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Start executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='START', @status='SUCCESS', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Starting executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{04A654E8-A2A8-44BB-9058-7FABDBEBCA5C}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='ApplicationPlatform_InvocationHandler',@source_type='PCK',@source_name='GetNodeProperties.dtsx', @source_id=null, @action='START', @status='SUCCESS', @message = 'Run 0: Starting executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="211,55"
          Size="211,98"
          Id="Package\Check POST-conditions"
          TopLeft="653,1636" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,55"
          Size="205,98"
          Id="Package\Check PRE-conditions"
          TopLeft="635.5,535.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Foreach Loop Container\Decode Parameters"
          TopLeft="278,27" />
        <NodeLayout
          Size="145,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Class Size"
          TopLeft="497,160" />
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Extended Label"
          TopLeft="174,159" />
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get High-level label"
          TopLeft="815,148" />
        <NodeLayout
          Size="163,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get high-level-label table SQL"
          TopLeft="823,287" />
        <NodeLayout
          Size="123,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Label"
          TopLeft="42,161" />
        <NodeLayout
          Size="138,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Node ID"
          TopLeft="351,188" />
        <NodeLayout
          Size="155,58"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape"
          TopLeft="9,15.3333333333333" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="174,88"
          Size="174,131"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container"
          TopLeft="1004.33333333333,124.666666666667" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="302.375,69">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-198.875,92"
              Start="0,0"
              End="-198.875,84.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4095563139932" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.4095563139932"
                    Point2="0,20.4095563139932"
                    Point3="-4,20.4095563139932" />
                  <mssgle:LineSegment
                    End="-194.875,20.4095563139932" />
                  <mssgle:CubicBezierSegment
                    Point1="-194.875,20.4095563139932"
                    Point2="-198.875,20.4095563139932"
                    Point3="-198.875,24.4095563139932" />
                  <mssgle:LineSegment
                    End="-198.875,84.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-107.4375,25.4095563139932,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="322.75,69">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-63.25,90"
              Start="0,0"
              End="-63.25,82.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.9213051823417" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.9213051823417"
                    Point2="0,30.9213051823417"
                    Point3="-4,30.9213051823417" />
                  <mssgle:LineSegment
                    End="-59.25,30.9213051823417" />
                  <mssgle:CubicBezierSegment
                    Point1="-59.25,30.9213051823417"
                    Point2="-63.25,30.9213051823417"
                    Point3="-63.25,34.9213051823417" />
                  <mssgle:LineSegment
                    End="-63.25,82.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-39.625,35.9213051823417,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="363.5,69">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="206,91"
              Start="0,0"
              End="206,83.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.5"
                    Point2="0,45.5"
                    Point3="4,45.5" />
                  <mssgle:LineSegment
                    End="202,45.5" />
                  <mssgle:CubicBezierSegment
                    Point1="202,45.5"
                    Point2="206,45.5"
                    Point3="206,49.5" />
                  <mssgle:LineSegment
                    End="206,83.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="95,50.5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="404.25,69">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="496.25,79"
              Start="0,0"
              End="496.25,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.1420345489443" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.1420345489443"
                    Point2="0,27.1420345489443"
                    Point3="4,27.1420345489443" />
                  <mssgle:LineSegment
                    End="492.25,27.1420345489443" />
                  <mssgle:CubicBezierSegment
                    Point1="492.25,27.1420345489443"
                    Point2="496.25,27.1420345489443"
                    Point3="496.25,31.1420345489443" />
                  <mssgle:LineSegment
                    End="496.25,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="240.125,32.1420345489443,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="343.125,69">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="76.875,119"
              Start="0,0"
              End="76.875,111.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.4514522821577" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.4514522821577"
                    Point2="0,51.4514522821577"
                    Point3="4,51.4514522821577" />
                  <mssgle:LineSegment
                    End="72.875,51.4514522821577" />
                  <mssgle:CubicBezierSegment
                    Point1="72.875,51.4514522821577"
                    Point2="76.875,51.4514522821577"
                    Point3="76.875,55.4514522821577" />
                  <mssgle:LineSegment
                    End="76.875,111.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="30.4375,56.4514522821577,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="424.625,69">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="666.708333333333,55.666666666667"
              Start="0,0"
              End="666.708333333333,48.166666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.34926052332202" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.34926052332202"
                    Point2="0,12.349260523322"
                    Point3="4,12.349260523322" />
                  <mssgle:LineSegment
                    End="662.708333333333,12.349260523322" />
                  <mssgle:CubicBezierSegment
                    Point1="662.708333333333,12.349260523322"
                    Point2="666.708333333333,12.349260523322"
                    Point3="666.708333333333,16.349260523322" />
                  <mssgle:LineSegment
                    End="666.708333333333,48.166666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="325.354166666667,17.349260523322,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1189,491"
          Size="1189,534"
          Id="Package\Execute Feature\Foreach Loop Container"
          TopLeft="42,134" />
        <NodeLayout
          Size="198,42"
          Id="Package\Execute Feature\Truncate node properties"
          TopLeft="329,44" />
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint]"
          TopLeft="428,86">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="208.5,48"
              Start="0,0"
              End="208.5,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="204.5,24" />
                  <mssgle:CubicBezierSegment
                    Point1="204.5,24"
                    Point2="208.5,24"
                    Point3="208.5,28" />
                  <mssgle:LineSegment
                    End="208.5,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1269,723"
          Size="1269,766"
          Id="Package\Execute Feature"
          TopLeft="356,895" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="297,179"
          Size="297,222"
          Id="Package\Initialize - specific"
          TopLeft="795,235.571428571429" />
        <NodeLayout
          Size="192,42"
          Id="Package\Initialize - template\Get server configuration"
          TopLeft="32,14" />
        <NodeLayout
          Size="225,42"
          Id="Package\Initialize - template\Initialize package configuration"
          TopLeft="16,236" />
        <NodeLayout
          Size="192,58"
          Id="Package\Initialize - template\Set configuration through Invocation Handler"
          TopLeft="32,125" />
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint]"
          TopLeft="128,56">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,69"
              Start="0,0"
              End="0,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint 1]"
          TopLeft="128.25,183">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="287,352"
          Size="287,395"
          Id="Package\Initialize - template"
          TopLeft="379,230.642857142857" />
        <NodeLayout
          Size="204,42"
          Id="Package\Initialize SLA configuration"
          TopLeft="623,75" />
        <NodeLayout
          Size="139,42"
          Id="Package\Sequence Container\NotifySsisApi"
          TopLeft="36,24" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,121"
          Size="205,164"
          Id="Package\Sequence Container"
          TopLeft="650,1806" />
        <NodeLayout
          Size="179,42"
          Id="Package\Set initialized to True"
          TopLeft="636,147" />
        <NodeLayout
          Size="176,42"
          Id="Package\Timeout expired\Log - Fail executable"
          TopLeft="35,35" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="241,131"
          Size="241,174"
          Id="Package\Timeout expired"
          TopLeft="995,681" />
        <NodeLayout
          Size="175,42"
          Id="Package\WAIT FOR Dependencies\Check dependencies"
          TopLeft="49.5714285714286,29.8571428571428" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="270,127"
          Size="270,170"
          Id="Package\WAIT FOR Dependencies"
          TopLeft="610.928571428572,676.535714285714" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="666,428.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.1666666666666,107.357142857143"
              Start="0,0"
              End="39.1666666666666,99.857142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="35.1666666666666,0" />
                  <mssgle:CubicBezierSegment
                    Point1="35.1666666666666,0"
                    Point2="39.1666666666666,0"
                    Point3="39.1666666666666,4" />
                  <mssgle:LineSegment
                    End="39.1666666666666,99.857142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="943.5,457.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-172.666666666667,77.928571428571"
              Start="0,0"
              End="-172.666666666667,70.428571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.3950352648317" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.3950352648317"
                    Point2="0,46.3950352648317"
                    Point3="-4,46.3950352648317" />
                  <mssgle:LineSegment
                    End="-168.666666666667,46.3950352648317" />
                  <mssgle:CubicBezierSegment
                    Point1="-168.666666666667,46.3950352648317"
                    Point2="-172.666666666667,46.3950352648317"
                    Point3="-172.666666666667,50.3950352648317" />
                  <mssgle:LineSegment
                    End="-172.666666666667,70.428571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="741.964285714286,633.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.0357142857141"
              Start="0,0"
              End="0,35.5357142857141">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5357142857141" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="745.928571428572,846.535714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="244.571428571428,48.464285714286"
              Start="0,0"
              End="244.571428571428,40.964285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.232142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.232142857143"
                    Point2="0,24.232142857143"
                    Point3="4,24.232142857143" />
                  <mssgle:LineSegment
                    End="240.571428571428,24.232142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="240.571428571428,24.232142857143"
                    Point2="244.571428571428,24.232142857143"
                    Point3="244.571428571428,28.232142857143" />
                  <mssgle:LineSegment
                    End="244.571428571428,40.964285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="114.285714285714,29.232142857143,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="990.5,1661">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-126.5,24"
              Start="0,0"
              End="-119,24">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="-4,24" />
                  <mssgle:LineSegment
                    End="-119,24" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="725.25,117">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="697,189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-174.5,41.642857142857"
              Start="0,0"
              End="-174.5,34.142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.8785002373042" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.8785002373042"
                    Point2="0,16.8785002373042"
                    Point3="-4,16.8785002373042" />
                  <mssgle:LineSegment
                    End="-170.5,16.8785002373042" />
                  <mssgle:CubicBezierSegment
                    Point1="-170.5,16.8785002373042"
                    Point2="-174.5,16.8785002373042"
                    Point3="-174.5,20.8785002373042" />
                  <mssgle:LineSegment
                    End="-174.5,34.142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="880.928571428572,764.767857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114.071428571428,0"
              Start="0,0"
              End="106.571428571428,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="106.571428571428,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="45.285714285714,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="755.5,1734">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72"
              Start="0,0"
              End="0,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="754,189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="189.5,46.571428571429"
              Start="0,0"
              End="189.5,39.071428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.8761271950643" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.8761271950643"
                    Point2="0,18.8761271950643"
                    Point3="4,18.8761271950643" />
                  <mssgle:LineSegment
                    End="185.5,18.8761271950643" />
                  <mssgle:CubicBezierSegment
                    Point1="185.5,18.8761271950643"
                    Point2="189.5,18.8761271950643"
                    Point3="189.5,22.8761271950643" />
                  <mssgle:LineSegment
                    End="189.5,39.071428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Event - Fail executable"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Log - Fail executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\Log - End executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPreExecute]\Log - Start executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Check POST-conditions.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Check POST-conditions.EventHandlers[OnPostExecute]\Event - End executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Check PRE-conditions.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Check PRE-conditions.EventHandlers[OnPostExecute]\Event - Start executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Class Size">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination"
          TopLeft="268,449" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Class Size\Merge Join"
          TopLeft="285,184" />
        <NodeLayout
          Size="123,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List"
          TopLeft="155.555555555556,64.4444444444444" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Class Size\Row Count"
          TopLeft="291.555555555556,373.333333333333" />
        <NodeLayout
          Size="154,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Class Size\Derived Column"
          TopLeft="282,290" />
        <NodeLayout
          Size="136,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class"
          TopLeft="379.333333333333,56" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Class Size.Paths[Row Count Output 1]"
          TopLeft="355.027777777778,415.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.6666666666666"
              Start="0,0"
              End="0,26.1666666666666">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.1666666666666" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Class Size.Paths[OLE DB Source Output1]"
          TopLeft="447.333333333333,98">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-76.9999999999997,86"
              Start="0,0"
              End="-76.9999999999997,78.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.9726443768997" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46.9726443768997"
                    Point2="0,50.9726443768997"
                    Point3="-4,50.9726443768997" />
                  <mssgle:LineSegment
                    End="-72.9999999999997,50.9726443768997" />
                  <mssgle:CubicBezierSegment
                    Point1="-72.9999999999997,50.9726443768997"
                    Point2="-76.9999999999997,50.9726443768997"
                    Point3="-76.9999999999997,54.9726443768997" />
                  <mssgle:LineSegment
                    End="-76.9999999999997,78.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Class Size.Paths[OLE DB Source Output]"
          TopLeft="217.055555555556,106.444444444444">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="112.611111111111,77.5555555555556"
              Start="0,0"
              End="112.611111111111,70.0555555555556">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.96757852077" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.96757852077"
                    Point2="0,45.96757852077"
                    Point3="4,45.96757852077" />
                  <mssgle:LineSegment
                    End="108.611111111111,45.96757852077" />
                  <mssgle:CubicBezierSegment
                    Point1="108.611111111111,45.96757852077"
                    Point2="112.611111111111,45.96757852077"
                    Point3="112.611111111111,49.96757852077" />
                  <mssgle:LineSegment
                    End="112.611111111111,70.0555555555556" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Class Size.Paths[Merge Join Output]"
          TopLeft="350,226">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,64"
              Start="0,0"
              End="9,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28"
                    Point2="0,32"
                    Point3="4,32" />
                  <mssgle:LineSegment
                    End="5,32" />
                  <mssgle:CubicBezierSegment
                    Point1="5,32"
                    Point2="9,32"
                    Point3="9,36" />
                  <mssgle:LineSegment
                    End="9,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Class Size.Paths[Derived Column Output]"
          TopLeft="357.777777777778,332">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.3333333333334"
              Start="0,0"
              End="0,33.8333333333334">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.8333333333334" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Class Size\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Class Size\Node List">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Class Size\Patent Class">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Extended Label">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination"
          TopLeft="392.428571428571,558.285714285714" />
        <NodeLayout
          Size="140,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes"
          TopLeft="280,111.666666666667" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Row Count"
          TopLeft="411.428571428571,465.857142857143" />
        <NodeLayout
          Size="136,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class"
          TopLeft="503.5,118.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Derived Column"
          TopLeft="392.714285714286,393.571428571429" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Merge Join"
          TopLeft="406,253" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Extended Label.Paths[Derived Column Output]"
          TopLeft="473.071428571429,435.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.2857142857142"
              Start="0,0"
              End="0,22.7857142857142">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.7857142857142" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Extended Label.Paths[Row Count Output 1]"
          TopLeft="477.178571428571,507.857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.4285714285716"
              Start="0,0"
              End="0,42.9285714285716">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.9285714285716" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Extended Label.Paths[OLE DB Source Output1]"
          TopLeft="571.5,160.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-80.1666666666667,92.5"
              Start="0,0"
              End="-80.1666666666667,85">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.8252279635258" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.8252279635258"
                    Point2="0,54.8252279635258"
                    Point3="-4,54.8252279635258" />
                  <mssgle:LineSegment
                    End="-76.1666666666667,54.8252279635258" />
                  <mssgle:CubicBezierSegment
                    Point1="-76.1666666666667,54.8252279635258"
                    Point2="-80.1666666666667,54.8252279635258"
                    Point3="-80.1666666666667,58.8252279635258" />
                  <mssgle:LineSegment
                    End="-80.1666666666667,85" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Extended Label.Paths[OLE DB Source Output]"
          TopLeft="350,153.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="121,99.333333333333"
              Start="0,0"
              End="121,91.833333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.6666666666665" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.6666666666665"
                    Point2="0,49.6666666666665"
                    Point3="4,49.6666666666665" />
                  <mssgle:LineSegment
                    End="117,49.6666666666665" />
                  <mssgle:CubicBezierSegment
                    Point1="117,49.6666666666665"
                    Point2="121,49.6666666666665"
                    Point3="121,53.6666666666665" />
                  <mssgle:LineSegment
                    End="121,91.833333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Extended Label.Paths[Merge Join Output]"
          TopLeft="470.357142857143,295">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,98.571428571429"
              Start="0,0"
              End="0,91.071428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,91.071428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Extended Label\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Extended Label\List of Nodes">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Extended Label\Patent Class">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get High-level label">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get High-level label\Row Count"
          TopLeft="381,235" />
        <NodeLayout
          Size="150,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source"
          TopLeft="365,64" />
        <NodeLayout
          Size="154,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get High-level label\Derived Column"
          TopLeft="368,153" />
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination"
          TopLeft="361,317" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get High-level label.Paths[Row Count Output 1]"
          TopLeft="446.25,277">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get High-level label.Paths[OLE DB Source Output]"
          TopLeft="442.5,106">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get High-level label.Paths[Derived Column Output]"
          TopLeft="445.5,195">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get High-level label\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Label">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="157,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Label\Type cast values"
          TopLeft="298,326" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Label\Row Count"
          TopLeft="316,411" />
        <NodeLayout
          Size="136,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class"
          TopLeft="405,54" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Label\Merge Join"
          TopLeft="318,202" />
        <NodeLayout
          Size="140,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes"
          TopLeft="178,57" />
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination"
          TopLeft="296,504" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Label.Paths[OLE DB Source Output]"
          TopLeft="248,99">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114.666666666667,103"
              Start="0,0"
              End="114.666666666667,95.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.048632218845" />
                  <mssgle:CubicBezierSegment
                    Point1="0,57.048632218845"
                    Point2="0,61.048632218845"
                    Point3="4,61.048632218845" />
                  <mssgle:LineSegment
                    End="110.666666666667,61.048632218845" />
                  <mssgle:CubicBezierSegment
                    Point1="110.666666666667,61.048632218845"
                    Point2="114.666666666667,61.048632218845"
                    Point3="114.666666666667,65.048632218845" />
                  <mssgle:LineSegment
                    End="114.666666666667,95.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Label.Paths[Merge Join Output]"
          TopLeft="379.75,244">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,82"
              Start="0,0"
              End="0,74.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,74.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Label.Paths[Derived Column Output]"
          TopLeft="378.75,368">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Label.Paths[Row Count Output 1]"
          TopLeft="381.25,453">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Label.Paths[OLE DB Source Output1]"
          TopLeft="473,96">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-69.6666666666667,106"
              Start="0,0"
              End="-69.6666666666667,98.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.8267477203647" />
                  <mssgle:CubicBezierSegment
                    Point1="0,58.8267477203647"
                    Point2="0,62.8267477203647"
                    Point3="-4,62.8267477203647" />
                  <mssgle:LineSegment
                    End="-65.6666666666667,62.8267477203647" />
                  <mssgle:CubicBezierSegment
                    Point1="-65.6666666666667,62.8267477203647"
                    Point2="-69.6666666666667,62.8267477203647"
                    Point3="-69.6666666666667,66.8267477203647" />
                  <mssgle:LineSegment
                    End="-69.6666666666667,98.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Label\Patent Class">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Label\List of Nodes">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Label\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Node ID">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="150,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source"
          TopLeft="70,60" />
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination"
          TopLeft="58,374" />
        <NodeLayout
          Size="154,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Node ID\Derived Column"
          TopLeft="70,161" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Get Node ID\Row Count"
          TopLeft="76,285" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Node ID.Paths[Row Count Output 1]"
          TopLeft="142.25,327">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Node ID.Paths[OLE DB Source Output]"
          TopLeft="146,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Get Node ID.Paths[Derived Column Output]"
          TopLeft="144,203">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,82"
              Start="0,0"
              End="0,74.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,74.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Get Node ID\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Row Count"
          TopLeft="88,285" />
        <NodeLayout
          Size="155,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric"
          TopLeft="281,468" />
        <NodeLayout
          Size="150,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source"
          TopLeft="76,136" />
        <NodeLayout
          Size="141,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Label"
          TopLeft="68,467" />
        <NodeLayout
          Size="154,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Derived Column"
          TopLeft="72,215" />
        <NodeLayout
          Size="120,42"
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Multicast"
          TopLeft="86,362" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape.Paths[Derived Column Output]"
          TopLeft="151,257">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape.Paths[Row Count Output 1]"
          TopLeft="149.5,327">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape.Paths[OLE DB Source Output]"
          TopLeft="150,178">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape.Paths[Multicast Output 2]"
          TopLeft="164.666666666667,404">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="193.833333333333,64"
              Start="0,0"
              End="193.833333333333,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.1052631578947" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.1052631578947"
                    Point2="0,26.1052631578947"
                    Point3="4,26.1052631578947" />
                  <mssgle:LineSegment
                    End="189.833333333333,26.1052631578947" />
                  <mssgle:CubicBezierSegment
                    Point1="189.833333333333,26.1052631578947"
                    Point2="193.833333333333,26.1052631578947"
                    Point3="193.833333333333,30.1052631578947" />
                  <mssgle:LineSegment
                    End="193.833333333333,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape.Paths[Multicast Output 1]"
          TopLeft="142.25,404">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63"
              Start="0,0"
              End="0,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\Growth Numeric">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Sequence Container\Get Trend Relative To Landscape\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="160,42"
          Id="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]\Log SLA property"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Timeout expired.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Timeout expired.EventHandlers[OnPostExecute]\Event - Fail executable"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>