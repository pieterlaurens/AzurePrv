<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/13/2014 4:11:55 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="NLLT005553"
  DTS:CreatorName="NL\PBaljon"
  DTS:DTSID="{D4C01DB3-721D-4CC0-BC7C-2BF5474A59C8}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1043"
  DTS:ObjectName="CreatePrepareEnvironment_Original"
  DTS:PackageType="5"
  DTS:VersionBuild="297"
  DTS:VersionGUID="{4BD38C9B-0224-4B69-9329-C32E784CB393}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DatahandlerDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{AC05D197-654B-4BE1-AED6-EF0A8FE8ED5C}"
      DTS:ObjectName="DatahandlerDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_DatahandlerCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_DatahandlerDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_dev_dth;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PlatformDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
      DTS:ObjectName="PlatformDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_PlatformCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_PlatformDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_dev_inh;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{7192E010-5484-4EF6-9D6E-E77BCABD6A62}"
      DTS:ObjectName="PlatformDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_PlatformCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_PlatformDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_dev_inh;Integrated Security=True;Application Name=SSIS-CreatePrepareEnvironment-{7192E010-5484-4EF6-9D6E-E77BCABD6A62}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProjectDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{C599640B-07A4-44F3-8653-7D5C4CC5C312}"
      DTS:ObjectName="ProjectDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::varProjectCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_ProjectDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_prj_testDeployment;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{5C4F03B4-F61F-46E8-A3A5-0C6925B67C0E}"
      DTS:ObjectName="IN_DEBUG_MODE">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F88B551B-AEC4-498A-A459-AC9D2ED4934F}"
      DTS:ObjectName="JSON_CONFIG">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">{}</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{171329D9-7FB9-473F-BFB4-CBF0B39E99C0}"
      DTS:ObjectName="JSON_SLA">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">{"ComponentID": "D0E4F952-663C-42CA-89E8-318C931D42A9" , "RunID": "-1" , "PollEvery": "00:00:10" , "TimeOutAfter": "3600" , "PlatformDataSource": "nlagpdatacore" , "PlatformCatalog": "prv_dev_inh" , "DatahandlerDataSource": "nlagpdatacore" , "DatahandlerCatalog": "prv_dev_dth" , "DatahandlerVersion": "latest" , "ProjectDataSource":"nlagpdatacore" , "ProjectCatalog":"prv_prj_deploytest" }</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{B59F7FB7-BA2A-47D3-843E-E9E37047C6D0}"
      DTS:ObjectName="RUN_ID">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{968ABF6F-B998-45F0-972E-0FD3AD53B994}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_HeaderProperties">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D1AC8D4F-A73B-43ED-9552-228193A025E8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ComponentID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{85D1D011-1FF2-4E60-A1A4-D5B7EA51E4B8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_dev_dth</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A244B95D-89F1-4338-B246-BD98521959FF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{16DE8FC4-F938-43B3-AD38-FE9C34E3D5E8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerVersion">
      <DTS:VariableValue
        DTS:DataType="8">spang</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EFA12B44-E744-49C0-B3FE-6E62F5311718}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PlatformCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_dev_inh</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B02C52F4-F652-4A8D-B00B-45D1F15843D6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PlatformDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EFB515EA-5791-4A2B-9FD8-5BCC6E07F4D1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PollEvery">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB251018-7D9F-4C92-B80B-6FA7B34A5AEB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ProjectCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_prj_deploytest</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6E12480E-3C2C-41B6-B349-6DB0E16E0BCB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ProjectDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A5F5249D-599D-4A69-BC0B-7718BAA94ABC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_RunID">
      <DTS:VariableValue
        DTS:DataType="3">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0D52B3E-DFC8-457D-AD3A-893936E4D2AB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_TimeOutAfter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{64F44059-9A8B-4299-96C6-D318EE9AE11B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMPlatformDB">
      <DTS:VariableValue
        DTS:DataType="8">PlatformDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{71309B60-1E0F-459E-965E-50916225CAF8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_DBName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A99F80B2-039C-4BB4-9408-0759D2058312}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_DBServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8CE21447-5F1D-4720-AD23-58D4E86DC931}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_depenciesChecked">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{06EF3BDD-0E64-4838-B330-04EBAD41CE66}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_EventLog">
      <DTS:VariableValue
        DTS:DataType="8">Application</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{652393CE-2537-4653-911E-0126B2C5AD64}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_Feature">
      <DTS:VariableValue
        DTS:DataType="8">CreateEnvironment</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D0B94544-2BDE-4965-A02B-1A37B9808836}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_IsPackageSlaInitialized">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{887C79F7-0834-4C91-AD4D-ADFC7241168B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_jsonConfiguration">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8CA8C1D9-8366-453F-9097-212E5AC4923E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::JSON_SLA]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_jsonSLA">
      <DTS:VariableValue
        DTS:DataType="8">{"ComponentID": "D0E4F952-663C-42CA-89E8-318C931D42A9" , "RunID": "-1" , "PollEvery": "00:00:10" , "TimeOutAfter": "3600" , "PlatformDataSource": "nlagpdatacore" , "PlatformCatalog": "prv_dev_inh" , "DatahandlerDataSource": "nlagpdatacore" , "DatahandlerCatalog": "prv_dev_dth" , "DatahandlerVersion": "latest" , "ProjectDataSource":"nlagpdatacore" , "ProjectCatalog":"prv_prj_deploytest" }</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{87ECBE3D-57DE-45AF-8E0F-67AB4B457B04}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_Pipeline">
      <DTS:VariableValue
        DTS:DataType="8">Longlist</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A92AA7BA-9516-46D0-8CEB-E8A26983DDAD}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cgf_pkg_">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ABBF3A1C-8DEA-49BE-B8DB-390353D15783}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DECLARE @l TINYINT&#xA;SET @l = (SELECT &#xA;&#x9;&#x9;&#x9;CASE WHEN last_log_backup_lsn IS NULL THEN 0&#xA;&#x9;&#x9;&#x9;&#x9;ELSE 1 END AS log_backup_possible&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;sys.database_recovery_status&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;database_id = DB_ID('&quot;+ @[User::cfg_sla_ProjectCatalog] +&quot;'))&#xA;&#xA;IF(@l=1)&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;BACKUP DATABASE &quot;+ @[User::cfg_sla_ProjectCatalog] +&quot; TO DISK = '&quot;+ @[User::cfg_sla_ProjectCatalog] +&quot;.bak' WITH DIFFERENTIAL&#xA;&#x9;END&#xA;ELSE&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;BACKUP DATABASE &quot;+ @[User::cfg_sla_ProjectCatalog] +&quot; TO DISK = '&quot;+ @[User::cfg_sla_ProjectCatalog] +&quot;.bak'&#xA;&#x9;END&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlCreateBackup">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE @l TINYINT
SET @l = (SELECT 
			CASE WHEN last_log_backup_lsn IS NULL THEN 0
				ELSE 1 END AS log_backup_possible
		FROM
			sys.database_recovery_status
		WHERE
			database_id = DB_ID('prv_prj_deploytest'))

IF(@l=1)
	BEGIN
		BACKUP DATABASE prv_prj_deploytest TO DISK = 'prv_prj_deploytest.bak' WITH DIFFERENTIAL
	END
ELSE
	BEGIN
		BACKUP DATABASE prv_prj_deploytest TO DISK = 'prv_prj_deploytest.bak'
	END
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6BD1F497-4345-474A-B7C6-22D776029ACD}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&#xA;DECLARE @i TINYINT = 0&#xA;&#xA;WHILE 1=1&#xA;BEGIN&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;CREATE DATABASE [$DBNAME$]&#xA;&#x9;&#x9;BREAK;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;IF DB_ID('$DBNAME$') IS NULL&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;IF @i &lt;= 3&#xA;&#x9;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;&#x9;SET @i += 1&#xA;&#x9;&#x9;&#x9;&#x9;WAITFOR DELAY '00:00:10'&#xA;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;ELSE THROW;&#xA;&#x9;&#x9;END&#xA;&#x9;&#x9;ELSE BREAK;&#xA;&#x9;END CATCH&#xA;END&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlCreateDatabase">
      <DTS:VariableValue
        DTS:DataType="8">
DECLARE @i TINYINT = 0

WHILE 1=1
BEGIN
	BEGIN TRY
		CREATE DATABASE [$DBNAME$]
		BREAK;
	END TRY
	BEGIN CATCH
		IF DB_ID('$DBNAME$') IS NULL
		BEGIN
			IF @i &lt;= 3
			BEGIN
				SET @i += 1
				WAITFOR DELAY '00:00:10'
			END
			ELSE THROW;
		END
		ELSE BREAK;
	END CATCH
END
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F8E23F7-122A-4631-B43A-2DE8F6E1C76A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&#xA;BEGIN TRY&#xA;&#x9;EXEC sp_executesql N'CREATE SCHEMA temp'&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF NOT EXISTS (&#xA;&#x9;SELECT  schema_name&#xA;&#x9;FROM    information_schema.schemata&#xA;&#x9;WHERE   schema_name = 'temp' )&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;&#xA;BEGIN TRY&#xA;&#x9;EXEC sp_executesql N'CREATE SCHEMA custom'&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF NOT EXISTS (&#xA;&#x9;SELECT  schema_name&#xA;&#x9;FROM    information_schema.schemata&#xA;&#x9;WHERE   schema_name = 'custom' )&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;&#xA;BEGIN TRY&#xA;&#x9;EXEC sp_executesql N'CREATE SCHEMA questionnaire'&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF NOT EXISTS (&#xA;&#x9;SELECT  schema_name&#xA;&#x9;FROM    information_schema.schemata&#xA;&#x9;WHERE   schema_name = 'questionnaire' )&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;&#xA;BEGIN TRY&#xA;&#x9;EXEC sp_executesql N'CREATE SCHEMA report'&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF NOT EXISTS (&#xA;&#x9;SELECT  schema_name&#xA;&#x9;FROM    information_schema.schemata&#xA;&#x9;WHERE   schema_name = 'report' )&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlCreateSchemas">
      <DTS:VariableValue
        DTS:DataType="8">
BEGIN TRY
	EXEC sp_executesql N'CREATE SCHEMA temp'
END TRY
BEGIN CATCH
	IF NOT EXISTS (
	SELECT  schema_name
	FROM    information_schema.schemata
	WHERE   schema_name = 'temp' )
		THROW;
END CATCH

BEGIN TRY
	EXEC sp_executesql N'CREATE SCHEMA custom'
END TRY
BEGIN CATCH
	IF NOT EXISTS (
	SELECT  schema_name
	FROM    information_schema.schemata
	WHERE   schema_name = 'custom' )
		THROW;
END CATCH

BEGIN TRY
	EXEC sp_executesql N'CREATE SCHEMA questionnaire'
END TRY
BEGIN CATCH
	IF NOT EXISTS (
	SELECT  schema_name
	FROM    information_schema.schemata
	WHERE   schema_name = 'questionnaire' )
		THROW;
END CATCH

BEGIN TRY
	EXEC sp_executesql N'CREATE SCHEMA report'
END TRY
BEGIN CATCH
	IF NOT EXISTS (
	SELECT  schema_name
	FROM    information_schema.schemata
	WHERE   schema_name = 'report' )
		THROW;
END CATCH
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{21792298-D8AA-4684-84F1-3AEDD565A803}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;BEGIN TRY&#xA;create table report.requested_profile(&#xA;&#x9;run_id INT&#xA;&#x9;, bag_of_words nvarchar(1000)&#xA;&#x9;, minimal_class_size int&#xA;&#x9;, number_of_classes int&#xA;&#x9;, profile_criterion nvarchar(100)&#xA;&#x9;, profile_type nvarchar(100)&#xA;&#x9;, scope_to_project bit&#xA;&#x9;, class_code nvarchaR(50)&#xA;&#x9;, keyword_count int&#xA;&#x9;, keyword_weight real)&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('report.requested_profile','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;create table report.test_report(&#xA;&#x9;api varchar(100)&#xA;&#x9;, test_result varchar(10)&#xA;&#x9;, test_name varchar(50)&#xA;&#x9;, test_comment varchar(1000)&#xA;&#x9;, executed_on datetime default getdate()&#xA;&#x9;, run_id int&#xA;&#x9;, component_id nvarchar(50))&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('report.test_report','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[company_long_list] (&#xA;&#x9;&#x9;[row_i]         INT            IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;[company_id]    NVARCHAR (50)  NOT NULL PRIMARY KEY,&#xA;&#x9;&#x9;[match]         REAL           NULL,&#xA;&#x9;&#x9;[company_name]  NVARCHAR (255) NULL,&#xA;&#x9;&#x9;[retrieval_key] NVARCHAR (50)  NULL&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].company_long_list','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[company_score](&#xA;&#x9;&#x9;[score_id]&#x9;&#x9;&#x9;INT IDENTITY(1,1)&#x9;NOT NULL,&#xA;    &#x9;[score_generic_name] AS             CONCAT('a',RIGHT('00000'+CAST([score_id] AS VARCHAR(5)),5)),  --(concat('companyAttribute',right(concat('0',[score_id]),(len([score_id])+(1))+sign((1)-len([score_id]))))),&#xA;&#x9;&#x9;[score_label]&#x9;&#x9;NVARCHAR (100)&#x9;&#x9;NULL,&#xA;&#x9;&#x9;[is_numeric]&#x9;&#x9;BIT&#x9;&#x9;&#x9;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;[display_in_fe]&#x9;&#x9;BIT&#x9;&#x9;&#x9;&#x9;&#x9;NULL DEFAULT ((1)),&#xA;&#x9;&#x9;[column_order]&#x9;&#x9;SMALLINT&#x9;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;[data_type]&#x9;&#x9;&#x9;NVARCHAR (25)&#x9;&#x9;NULL,&#xA;&#x9;&#x9;[flex_width]&#x9;&#x9;SMALLINT&#x9;&#x9;&#x9;NULL DEFAULT ((4)),&#xA;&#x9;&#x9;[default_scale]&#x9;&#x9;INT&#x9;&#x9;&#x9;&#x9;&#x9;NULL DEFAULT ((3)),&#xA;&#x9;&#x9;[precision]&#x9;&#x9;&#x9;INT&#x9;&#x9;&#x9;&#x9;&#x9;NULL DEFAULT ((2)),&#xA;&#x9;&#x9;[unit]&#x9;&#x9;&#x9;&#x9;NVARCHAR (10)&#x9;&#x9;NULL,&#xA;&#x9;&#x9;[uni_polar]&#x9;&#x9;&#x9;BIT&#x9;&#x9;&#x9;&#x9;&#x9;NULL DEFAULT ((1)),&#xA;&#x9;&#x9;[is_temporal]&#x9;&#x9;&#x9;BIT&#x9;&#x9;&#x9;&#x9;&#x9;NULL DEFAULT ((0))&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].company_score','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[company_score_int] (&#xA;&#x9;&#x9;[company_id]        NVARCHAR (50) NULL,&#xA;&#x9;&#x9;[score_name]&#x9;&#x9;NVARCHAR (50) NULL,&#xA;&#x9;&#x9;[score_value]       BIGINT        NULL&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].company_score_int','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[company_score_real] (&#xA;&#x9;&#x9;[company_id]        NVARCHAR (50) NULL,&#xA;&#x9;&#x9;[score_name]&#x9;&#x9;NVARCHAR (50) NULL,&#xA;&#x9;&#x9;[score_value]       REAL          NULL&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].company_score_real','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[company_score_str] (&#xA;&#x9;&#x9;[company_id]        NVARCHAR (50)&#x9;NULL,&#xA;&#x9;&#x9;[score_name]&#x9;&#x9;NVARCHAR (50)&#x9;NULL,&#xA;&#x9;&#x9;[score_value]             NVARCHAR (MAX)&#x9;NULL&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].company_score_str','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[company_time_score_int] (&#xA;&#x9;&#x9;[company_id]        NVARCHAR (50) NULL,&#xA;&#x9;&#x9;score_name&#x9;&#x9;&#x9;NVARCHAR (50) NULL,&#xA;&#x9;&#x9;score_time&#x9;&#x9;&#x9;INT NULL,&#xA;&#x9;&#x9;score_value         BIGINT        NULL&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].company_time_score_int','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[company_time_score_real] (&#xA;&#x9;&#x9;[company_id]        NVARCHAR (50) NULL,&#xA;&#x9;&#x9;score_name&#x9;&#x9;&#x9;NVARCHAR (50) NULL,&#xA;&#x9;&#x9;score_time&#x9;&#x9;&#x9;INT NULL,&#xA;&#x9;&#x9;score_value         real        NULL&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].company_time_score_real','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [questionnaire].[user_answer_checked](&#xA;&#x9;&#x9;[id] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;[id_answer] [int] NOT NULL,&#xA;&#x9;&#x9;[id_user_answer] [int] NOT NULL,&#xA;&#x9;&#x9;[reference] [nvarchar](1000) NULL,&#xA;&#x9;&#x9;[comment] [nvarchar](max) NULL,&#xA;&#x9;PRIMARY KEY CLUSTERED &#xA;&#x9;(&#xA;&#x9;&#x9;[id] ASC&#xA;&#x9;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)&#xA;&#x9;)&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[questionnaire].[user_answer_checked]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [questionnaire].[user_answer](&#xA;&#x9;&#x9;[id] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;[bvd_id] [varchar](25) NOT NULL,&#xA;&#x9;&#x9;[id_question] [int] NOT NULL,&#xA;&#x9;&#x9;[is_latest] [bit] NOT NULL DEFAULT 1,&#xA;&#x9;&#x9;[text_answer] [nvarchar](max) NULL,&#xA;&#x9;&#x9;[added_on] [datetime2](7) NOT NULL DEFAULT getdate(),&#xA;&#x9;&#x9;[added_by] [nvarchar](100) NULL,&#xA;&#x9;&#x9;[status] [nvarchar](10) NULL,&#xA;&#x9;&#x9;[reference] [nvarchar](1000) NULL,&#xA;&#x9;&#x9;[comment] [nvarchar](max) NULL,&#xA;&#x9;PRIMARY KEY CLUSTERED &#xA;&#x9;(&#xA;&#x9;&#x9;[id] ASC&#xA;&#x9;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)&#xA;&#x9;)&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[questionnaire].[user_answer]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [questionnaire].[tab](&#xA;&#x9;&#x9;[id] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;[label] [nvarchar](25) NOT NULL,&#xA;&#x9;&#x9;[default_state] [int] NOT NULL DEFAULT 0,&#xA;&#x9;&#x9;[editable_on_tab_finish] [nvarchar](50) NULL,&#xA;&#x9; CONSTRAINT [PK_tab] PRIMARY KEY CLUSTERED &#xA;&#x9;(&#xA;&#x9;&#x9;[id] ASC&#xA;&#x9;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]&#xA;&#x9;)&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[questionnaire].[tab]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [questionnaire].[question_tab](&#xA;&#x9;&#x9;[id] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;[question_id] [int] NOT NULL,&#xA;&#x9;&#x9;[tab_id] [int] NOT NULL,&#xA;&#x9;&#x9;[sequence] [int] NOT NULL DEFAULT 0,&#xA;&#x9; CONSTRAINT [PK_question_tab] PRIMARY KEY CLUSTERED &#xA;&#x9;(&#xA;&#x9;&#x9;[id] ASC&#xA;&#x9;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)&#xA;&#x9;)&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[questionnaire].[question_tab]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [questionnaire].[question](&#xA;&#x9;&#x9;[id] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;[input_type] [varchar](15) NOT NULL,&#xA;&#x9;&#x9;[data_type] [varchar](15) NOT NULL,&#xA;&#x9;&#x9;[label] [nvarchar](500) NOT NULL,&#xA;&#x9;&#x9;[sidenote] [nvarchar](max) NULL,&#xA;&#x9;&#x9;[score_name] [nvarchar](50) NOT NULL,&#xA;&#x9;&#x9;[default_value] [nvarchar](150) NULL,&#xA;&#x9;&#x9;[order] [smallint] NOT NULL,&#xA;&#x9;&#x9;[is_linked] [bit] NOT NULL,&#xA;&#x9;&#x9;[required] [bit] NOT NULL DEFAULT 1,&#xA;&#x9;&#x9;[show_reference] [bit] NOT NULL DEFAULT 0,&#xA;&#x9;&#x9;[show_comment] [bit] NOT NULL DEFAULT 0,&#xA;&#x9;&#x9;[show_in_longlist] [bit] NOT NULL DEFAULT 0,&#xA;&#x9;PRIMARY KEY CLUSTERED &#xA;&#x9;(&#xA;&#x9;&#x9;[id] ASC&#xA;&#x9;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[questionnaire].[question]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [questionnaire].[faq](&#xA;&#x9;&#x9;[id] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;[tab_ids] [varchar](50) NULL,&#xA;&#x9;&#x9;[question] [nvarchar](250) NOT NULL,&#xA;&#x9;&#x9;[answer_html] [nvarchar](max) NOT NULL,&#xA;&#x9; CONSTRAINT [PK_questionnaire_faq] PRIMARY KEY CLUSTERED &#xA;&#x9;(&#xA;&#x9;&#x9;[id] ASC&#xA;&#x9;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[questionnaire].[faq]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [questionnaire].[company_tab](&#xA;&#x9;&#x9;[id] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;[bvd_id] [nvarchar](25) NOT NULL,&#xA;&#x9;&#x9;[tab_id] [int] NOT NULL,&#xA;&#x9;&#x9;[state] [int] NOT NULL DEFAULT 0,&#xA;&#x9; CONSTRAINT [PK_company_tab] PRIMARY KEY CLUSTERED &#xA;&#x9;(&#xA;&#x9;&#x9;[id] ASC&#xA;&#x9;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[questionnaire].[company_tab]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [questionnaire].[answer](&#xA;&#x9;&#x9;[id] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;[question_id] [int] NOT NULL,&#xA;&#x9;&#x9;[text] [nvarchar](500) NOT NULL,&#xA;&#x9;&#x9;[value] [nvarchar](150) NOT NULL,&#xA;&#x9;&#x9;[order] [smallint] NOT NULL,&#xA;&#x9;&#x9;[linked_questions] [nvarchar](200) NULL,&#xA;&#x9;&#x9;[report_text] [nvarchar](500) NULL,&#xA;&#x9;&#x9;[show_reference] [bit] NOT NULL DEFAULT 0,&#xA;&#x9;&#x9;[show_comment] [bit] NOT NULL DEFAULT 0,&#xA;&#x9;PRIMARY KEY CLUSTERED &#xA;&#x9;(&#xA;&#x9;&#x9;[id] ASC&#xA;&#x9;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[questionnaire].[answer]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[focus_list] (&#xA;&#x9;&#x9;[focuslist_id] INT   NOT NULL IDENTITY(1,1) PRIMARY KEY&#xA;&#x9;&#x9;,[label] nvarchar(255) NOT NULL&#xA;&#x9;&#x9;,[created_by] nvarchar(50) not null&#xA;&#x9;&#x9;,[created_on] datetime not null&#xA;&#x9;&#x9;,[status] nvarchar(15) not null default 'open'&#xA;&#x9;&#x9;,[comment] nvarchar(500)&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[focus_list]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[focus_list_company]&#xA;&#x9;(&#xA;&#x9;&#x9;[id] INT NOT NULL IDENTITY(1,1) PRIMARY KEY, &#xA;&#x9;&#x9;[focuslist_id] INT NULL, &#xA;&#x9;&#x9;company_id NVARCHAR(50) NULL&#xA;&#x9;)&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[focus_list_company]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[ls_node] (&#xA;&#x9;&#x9;node_key        int not null,&#xA;&#x9;&#x9;node_id&#x9;&#x9;&#x9;NVARCHAR (100) NOT NULL,&#xA;&#x9;&#x9;node_retrieval_key NVARCHAR(50) NULL,&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].ls_node','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[ls_node_list_item](&#xA;&#x9;&#x9;[node_key] INT NOT NULL -- the identifier of the landscape node&#xA;&#x9;&#x9;, item_type nvarchar(50) not null -- the type of items that can be retrieved; 'company', 'patent' but also other things&#xA;&#x9;&#x9;, item_rank smallint not null -- in the case of ranked items, this column can be used&#xA;&#x9;&#x9;, item_id nvarchar(100) null -- the internal identifier of this item; could be BvD ID for companies or publication number of patents; this may also be used 'in reverse' to look for other CPC classes a patent is assigned to.&#xA;&#x9;&#x9;, item_attribute nvarchar(100) not null -- the various columns for the item enumeration: 'Title',  'Filing date' for patents, 'website', 'company name' for companies&#xA;&#x9;&#x9;, item_value nvarchar(max) null -- the value for each item per column&#xA;&#x9;&#x9;, primary key (node_key, item_type, item_rank,item_attribute)&#xA;&#x9;)&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[ls_node_list_item]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[ls_node_position] (&#xA;&#x9;&#x9;node_key        int not null,&#xA;&#x9;&#x9;node_id&#x9;&#x9;&#x9;NVARCHAR (100) NOT NULL,&#xA;&#x9;&#x9;node_x&#x9;REAL NOT NULL,&#xA;&#x9;&#x9;node_y&#x9;REAL NOT NULL&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].ls_node_position','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[ls_node_property_numeric] (&#xA;&#x9;&#x9;node_key        int not null,&#xA;&#x9;&#x9;node_property_type&#x9;&#x9;&#x9;NVARCHAR (150) NOT NULL,&#xA;&#x9;&#x9;node_property_value numeric(30,10) NULL&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].ls_node_property_numeric','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[ls_node_property_str] (&#xA;&#x9;&#x9;node_key        int not null,&#xA;&#x9;&#x9;node_property_type&#x9;&#x9;&#x9;NVARCHAR (150) NOT NULL,&#xA;&#x9;&#x9;node_property_value nvarchar(max) NULL&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].ls_node_property_str','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[ls_node_score_numeric]&#xA;&#x9;(&#xA;&#x9;&#x9;node_key INT NOT NULL&#xA;&#x9;&#x9;, node_score_group nvarchar(100) not null&#xA;&#x9;&#x9;, node_score_series_group nvarchar(100) null&#xA;&#x9;&#x9;, node_score_series_key nvarchar(100) not null&#xA;&#x9;&#x9;, node_score_view nvarchar(100) null&#xA;&#x9;&#x9;, node_score_value numeric(30,10) not null&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].ls_node_score_numeric','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[ls_node_score_str]&#xA;&#x9;(&#xA;&#x9;&#x9;node_key INT NOT NULL&#xA;&#x9;&#x9;, node_score_group nvarchar(100) not null&#xA;&#x9;&#x9;, node_score_series_group nvarchar(100) null&#xA;&#x9;&#x9;, node_score_series_key nvarchar(100) not null&#xA;&#x9;&#x9;, node_score_view nvarchar(100) null&#xA;&#x9;&#x9;, node_score_value nvarchar(max) not null&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].ls_node_score_str','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[manual_scoring_action]&#xA;&#x9;(&#xA;&#x9;&#x9;[id] INT NOT NULL IDENTITY(1,1) PRIMARY KEY&#xA;&#x9;&#x9;, score_label nvarchar(100) NOT NULL&#xA;&#x9;&#x9;, scoring_string nvarchar(max)&#xA;&#x9;&#x9;, executed_on datetime NOT NULL DEFAULT GETDATE()&#xA;&#x9;&#x9;, executed_by nvarchar(100)&#xA;&#x9;&#x9;, [status] nvarchar(10)&#xA;&#x9;&#x9;, modified_on datetime&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].manual_scoring_action','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[scored_company](&#xA;&#x9;&#x9;[company_id]&#x9;&#x9;NVARCHAR (50)&#x9;NOT NULL,&#xA;&#x9;&#x9;[score_id]&#x9;&#x9;&#x9;INT&#x9;&#x9;&#x9;&#x9;NOT NULL&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].scored_company','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[series_properties] (&#xA;&#x9;&#x9;[series_id]         INT            IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;[SeriesToPlot_NAME] NVARCHAR (100) NOT NULL,&#xA;&#x9;&#x9;[stroke_color]      NVARCHAR (15)  NULL,&#xA;&#x9;&#x9;[fill_color]        NVARCHAR (15)  NULL,&#xA;&#x9;&#x9;[fill_override]     TINYINT        NULL,&#xA;&#x9;&#x9;PRIMARY KEY CLUSTERED ([series_id] ASC)&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[series_properties]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[tile_attribute] (&#xA;&#x9;&#x9;[id]                        INT            IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;[tile_id]                   SMALLINT       NOT NULL,&#xA;&#x9;&#x9;[tile_name]                 NVARCHAR (50)  NULL,&#xA;&#x9;&#x9;[bvd_id]                    VARCHAR (50)   NOT NULL,&#xA;&#x9;&#x9;[company_name]              NVARCHAR (150) NULL,&#xA;&#x9;&#x9;[attribute_name]            NVARCHAR (500) NOT NULL,&#xA;&#x9;&#x9;[attribute_seq]             SMALLINT       NOT NULL,&#xA;&#x9;&#x9;[attribute_value]           NVARCHAR (MAX) NULL,&#xA;&#x9;&#x9;[attribute_benchmark_value] NVARCHAR (MAX) NULL,&#xA;&#x9;&#x9;[attribute_link]            NVARCHAR (500) NULL,&#xA;&#x9;&#x9;PRIMARY KEY CLUSTERED ([tile_id] ASC, [bvd_id] ASC, [attribute_seq] ASC)&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[tile_attribute]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[tile_event_stream] (&#xA;&#x9;&#x9;[id]                  INT            IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;[tile_id]             SMALLINT       NOT NULL,&#xA;&#x9;&#x9;[tile_name]           NVARCHAR (50)  NULL,&#xA;&#x9;&#x9;[bvd_id]              VARCHAR (50)   NOT NULL,&#xA;&#x9;&#x9;[company_name]        NVARCHAR (150) NULL,&#xA;&#x9;&#x9;[event_id]            NVARCHAR (100) NOT NULL,&#xA;&#x9;&#x9;[event_seq]           SMALLINT       NULL,&#xA;&#x9;&#x9;[event_attribute]     NVARCHAR (25)  NOT NULL,&#xA;&#x9;&#x9;[event_attribute_seq] SMALLINT       NOT NULL,&#xA;&#x9;&#x9;[event_value]         NVARCHAR (MAX) NULL,&#xA;&#x9;&#x9;[event_date]          DATE           NULL,&#xA;&#x9;&#x9;[event_type]          NVARCHAR (25)  NULL,&#xA;&#x9;&#x9;PRIMARY KEY CLUSTERED ([tile_id] ASC, [bvd_id] ASC, [event_id] ASC, [event_attribute_seq] ASC)&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[tile_event_stream]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[tile_profile] (&#xA;&#x9;&#x9;[id]             INT             IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;[tile_id]        SMALLINT        NOT NULL,&#xA;&#x9;&#x9;[tile_name]      NVARCHAR (50)   NULL,&#xA;&#x9;&#x9;[bvd_id]         VARCHAR (50)    NOT NULL,&#xA;&#x9;&#x9;[company_name]   NVARCHAR (150)  NULL,&#xA;&#x9;&#x9;[series_name]    NVARCHAR (100)  NOT NULL,&#xA;&#x9;&#x9;[category]       NVARCHAR (100)  NOT NULL,&#xA;&#x9;&#x9;[category_short] NVARCHAR (25)   NULL,&#xA;&#x9;&#x9;[category_seq]   SMALLINT        NOT NULL,&#xA;&#x9;&#x9;[series_value]   NUMERIC (30, 3) NULL,&#xA;&#x9;&#x9;PRIMARY KEY CLUSTERED ([tile_id] ASC, [bvd_id] ASC, [series_name] ASC, [category_seq] ASC)&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[tile_profile]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[tile_timeseries] (&#xA;&#x9;&#x9;[id]           INT             IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;[tile_id]      SMALLINT        NOT NULL,&#xA;&#x9;&#x9;[tile_name]    NVARCHAR (50)   NULL,&#xA;&#x9;&#x9;[bvd_id]       VARCHAR (50)    NOT NULL,&#xA;&#x9;&#x9;[company_name] NVARCHAR (150)  NULL,&#xA;&#x9;&#x9;[series_name]  NVARCHAR (100)  NOT NULL,&#xA;&#x9;&#x9;[series_x]     NUMERIC (30)    NOT NULL,&#xA;&#x9;&#x9;[series_y]     NUMERIC (30, 3) NULL,&#xA;&#x9;&#x9;[series_seq]   SMALLINT        NULL,&#xA;&#x9;&#x9;PRIMARY KEY CLUSTERED ([tile_id] ASC, [bvd_id] ASC, [series_name] ASC, [series_x] ASC)&#xA;&#x9;);&#x9;&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[tile_timeseries]','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [custom].[ls_node_property_numeric] (&#xA;&#x9;&#x9;node_key        int not null,&#xA;&#x9;&#x9;node_property_type&#x9;&#x9;&#x9;NVARCHAR (150) NOT NULL,&#xA;&#x9;&#x9;node_property_value numeric(30,10) NULL&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[custom].ls_node_property_numeric','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [custom].[ls_node_score_numeric]&#xA;&#x9;(&#xA;&#x9;&#x9;node_key INT NOT NULL&#xA;&#x9;&#x9;, node_score_group nvarchar(100) not null&#xA;&#x9;&#x9;, node_score_series_group nvarchar(100) null&#xA;&#x9;&#x9;, node_score_series_key nvarchar(100) not null&#xA;&#x9;&#x9;, node_score_view nvarchar(100) null&#xA;&#x9;&#x9;, node_score_value numeric(30,10) not null&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[custom].ls_node_score_numeric','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[longlist_histograms]&#xA;&#x9;(&#xA;&#x9;&#x9;score_label nvarchar(50) not null&#xA;&#x9;);&#xA;&#x9;INSERT INTO [dbo].[longlist_histograms] VALUES('Industry'),('Country')&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].longlist_histograms','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;CREATE TABLE [dbo].[longlist_column_groups] (&#xA;&#x9;    [score_label]       NVARCHAR (100) NOT NULL,&#xA;&#x9;    [column_group_name] NVARCHAR (50)  NOT NULL,&#xA;&#x9;    [default_visible]   TINYINT        DEFAULT ((1)) NOT NULL,&#xA;&#x9;    PRIMARY KEY CLUSTERED ([score_label] ASC, [column_group_name] ASC)&#xA;&#x9;);&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].longlist_column_groups','U') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;exec(N'CREATE FUNCTION [dbo].[onFocusList]( @company_id nvarchar(25), @focuslist_id int) RETURNS tinyint&#xA;&#x9;AS&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;&#x9;declare @n int&#xA;&#x9;&#x9;declare @r tinyint&#xA;&#x9;&#x9;set @n = (SELECT COUNT(*) FROM [dbo].focus_list_company where company_id=@company_id and focuslist_id=@focuslist_id)&#xA;&#x9;&#x9;IF @n&gt;0&#xA;&#x9;&#x9;&#x9;SET @r = 1&#xA;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;SET @r = 0&#xA;&#xA;&#x9;&#x9;RETURN @r&#xA;&#x9;END')&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].onFocusList','FN') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;IF OBJECT_ID('[dbo].[DEF_COMPANYLONGLIST_FILTERS]','U') is not null&#xA;&#x9;&#x9;DROP TABLE [dbo].[DEF_COMPANYLONGLIST_FILTERS]&#xA;&#x9;&#x9;&#xA;&#x9;exec(N'CREATE view [dbo].[DEF_COMPANYLONGLIST_FILTERS] as&#xA;&#x9;&#x9;select&#xA;&#x9;&#x9;&#x9;focuslist_id as id&#xA;&#x9;&#x9;&#x9;, label as [title]&#xA;&#x9;&#x9;&#x9;, concat(''[dbo].[onFocusList](companyPrimKey,'',cast(focuslist_id as nvarchar(10)),'')&gt;0'') as [where]&#xA;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;[dbo].[focus_list]&#xA;&#x9;&#x9;where&#xA;&#x9;&#x9;&#x9;[status]=''open''')&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[DEF_COMPANYLONGLIST_FILTERS]','V') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;IF OBJECT_ID('[dbo].[DEF_COLUMN_GROUPS]','U') is not null&#xA;&#x9;&#x9;DROP TABLE [dbo].[DEF_COLUMN_GROUPS]&#xA;&#x9;&#x9;&#xA;&#x9;exec(N'CREATE VIEW [dbo].[DEF_COLUMN_GROUPS]&#xA;&#x9;&#x9;&#x9;AS&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;[score_generic_name]&#xA;&#x9;&#x9;&#x9;, ''Other'' as column_group_name&#xA;&#x9;&#x9;&#x9;, 0 as default_visible&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;company_score&#xA;&#x9;&#x9;where&#xA;&#x9;&#x9;&#x9;score_label not in (select distinct score_label from longlist_column_groups)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;score_label in (select score_label from company_score where display_in_fe=1)&#xA;&#x9;&#x9;UNION ALL&#xA;&#x9;&#x9;select&#xA;&#x9;&#x9;&#x9;score_generic_name&#xA;&#x9;&#x9;&#x9;, lcg.column_group_name&#xA;&#x9;&#x9;&#x9;, lcg.default_visible&#xA;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;longlist_column_groups lcg JOIN&#xA;&#x9;&#x9;&#x9;company_score cs ON cs.score_label=lcg.score_label')&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[DEF_COLUMN_GROUPS]','V') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;exec(N'CREATE PROCEDURE [dbo].[web_getLonglistStats](@whereClause nvarchar(max)=''1&gt;0'' ) AS&#xA;&#x9;&#xA;&#x9;IF(len(@whereClause)=0)&#xA;&#x9;&#x9;set @whereClause = ''1&gt;0''&#xA;&#xA;&#x9;declare @sql nvarchar(max)&#xA;&#x9;set @sql = '' SELECT '' +&#xA;&#x9;''COUNT(*) AS ''''Total # Companies''''''+&#xA;&#x9;''from '' +&#xA;&#x9;''DIM_COMPANYLONGLIST_WEB'' +&#xA;&#x9;'' union all '' +&#xA;&#x9;'' SELECT '' +&#xA;&#x9;''COUNT(*) AS ''''Total # Companies''''''+&#xA;&#x9;''from '' +&#xA;&#x9;&#x9;''DIM_COMPANYLONGLIST_WEB '' + &#xA;&#x9;&#x9;''WHERE '' + @whereClause&#xA;&#xA;&#x9;exec(@sql)')&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[web_getLonglistStats]','P') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;&#xA;BEGIN TRY&#xA;&#x9;exec(N'CREATE PROCEDURE [dbo].[web_getIpcCompanies](@ipc INT) as&#xA;&#x9;&#x9;select&#xA;&#x9;&#x9;&#x9;[Name],[# Families in Class],[Total # Families],item_id as [Company ID]&#xA;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;(select&#xA;&#x9;&#x9;&#x9;&#x9;[item_rank]&#xA;&#x9;&#x9;&#x9;&#x9;, [item_id]&#xA;&#x9;&#x9;&#x9;&#x9;, [item_attribute]&#xA;&#x9;&#x9;&#x9;&#x9;, item_value&#xA;&#x9;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;&#x9;[dbo].[ls_node_list_item]&#xA;&#x9;&#x9;&#x9;where&#xA;&#x9;&#x9;&#x9;&#x9;item_type = ''Company''&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;node_key=@ipc&#xA;&#x9;&#x9;&#x9;) p&#xA;&#x9;&#x9;pivot(&#xA;&#x9;&#x9;&#x9;max(item_value) for item_attribute in ([Name],[# Families in Class],[Total # Families])&#xA;&#x9;&#x9;) pvt&#xA;&#x9;&#x9;order by&#xA;&#x9;&#x9;&#x9;[item_rank] asc')&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[web_getIpcCompanies]','P') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;&#xA;BEGIN TRY&#xA;&#x9;exec(N'CREATE PROCEDURE [dbo].[web_getIpcLatestCeDocuments](&#xA;&#x9;&#x9;@ipc INT&#xA;&#x9;&#x9;, @ww nvarchar(100)&#x9;= ''cellulose ester\&quot;OR\&quot;cellulose acetate'' ) AS&#xA;&#x9;&#x9;declare @w nvarchar(102);&#xA;&#x9;&#x9;set @w = ''\&quot;'' + @ww + ''\&quot;'';&#xA;&#xA;&#x9;&#x9;select&#xA;&#x9;&#x9;&#x9;item_id as [Publication number]&#xA;&#x9;&#x9;&#x9;, [Title]&#xA;&#x9;&#x9;&#x9;, [Filing year]&#xA;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;(select&#xA;&#x9;&#x9;&#x9;&#x9;[item_rank]&#xA;&#x9;&#x9;&#x9;&#x9;, [item_id]&#xA;&#x9;&#x9;&#x9;&#x9;, [item_attribute]&#xA;&#x9;&#x9;&#x9;&#x9;, item_value&#xA;&#x9;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;&#x9;[dbo].[ls_node_list_item]&#xA;&#x9;&#x9;&#x9;where&#xA;&#x9;&#x9;&#x9;&#x9;item_type = ''Patent''&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;node_key=@ipc&#xA;&#x9;&#x9;&#x9;) p&#xA;&#x9;&#x9;pivot(&#xA;&#x9;&#x9;&#x9;max(item_value) for item_attribute in ([Title],[Filing year])&#xA;&#x9;&#x9;) pvt&#xA;&#x9;&#x9;order by&#xA;&#x9;&#x9;&#x9;[item_rank] asc')&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[web_getIpcLatestCeDocuments]','P') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&#xA;&#xA;BEGIN TRY&#xA;&#x9;exec(N'CREATE PROCEDURE [dbo].[web_getLonglistHistograms](@whereClause nvarchar(max)=''1&gt;0'') AS &#xA;&#x9;&#x9;declare @sql nvarchar(max)&#xA;&#x9;&#x9;declare @thisScore nvarchar(50);&#xA;&#x9;&#x9;declare @thisGenericName nvarchar(15);&#xA;&#x9;&#x9;declare @ss table(score_name nvarchar(50), generic_name nvarchar(15))&#xA;&#x9;&#x9;declare @ns smallint&#xA;&#x9;&#x9;insert into @ss select lh.score_label, cs.score_generic_name from [dbo].[longlist_histograms] lh JOIN company_score cs ON cs.score_label=lh.score_label&#xA;&#x9;&#x9;set @ns = (select count(*) from @ss)&#xA;&#xA;&#x9;&#x9;IF(@ns &gt; 0)&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;set @thisScore = (select top 1 score_name from @ss)&#xA;&#x9;&#x9;&#x9;set @thisGenericName = (select generic_name from @ss where score_name=@thisScore)&#xA;&#xA;&#x9;&#x9;&#x9;set @sql = N''select&#xA;&#x9;&#x9;&#x9;&#x9;''''''+@thisScore+'''''' as [histogram]&#xA;&#x9;&#x9;&#x9;&#x9;, ''+@thisGenericName+'' as [category]&#xA;&#x9;&#x9;&#x9;&#x9;, count(*) as [value]&#xA;&#x9;&#x9;&#x9;&#x9;, '' + case when @thisScore = ''Industry'' then ''1'' else ''1'' end +'' as [flex]&#xA;&#x9;&#x9;&#x9;&#x9;, rank() over (order by count(*) desc) as r&#xA;&#x9;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;&#x9;[dbo].[DIM_COMPANYLONGLIST_WEB]&#xA;&#x9;&#x9;&#x9;where&#xA;&#x9;&#x9;&#x9;&#x9;''+@whereClause+''&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;''+@thisGenericName+'' is not null&#xA;&#x9;&#x9;&#x9;group by&#xA;&#x9;&#x9;&#x9;&#x9;''+@thisGenericName&#xA;&#xA;&#x9;&#x9;&#x9;delete from @ss where score_name = @thisScore&#xA;&#x9;&#x9;&#x9;set @ns = (select count(*) from @ss)&#xA;&#x9;&#x9;END&#xA;&#xA;&#x9;&#x9;WHILE @ns &gt; 0&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;set @thisScore = (select top 1 score_name from @ss)&#xA;&#x9;&#x9;&#x9;set @thisGenericName = (select generic_name from @ss where score_name=@thisScore)&#xA;&#xA;&#x9;&#x9;&#x9;set @sql = @sql + N'' union all select&#xA;&#x9;&#x9;&#x9;&#x9;''''''+@thisScore+'''''' as [histogram]&#xA;&#x9;&#x9;&#x9;&#x9;, ''+@thisGenericName+'' as [category]&#xA;&#x9;&#x9;&#x9;&#x9;, count(*) as [value]&#xA;&#x9;&#x9;&#x9;&#x9;, '' + case when @thisScore = ''Industry'' then ''1'' else ''1'' end +'' as [flex]&#xA;&#x9;&#x9;&#x9;&#x9;, rank() over (order by count(*) desc) as r&#xA;&#x9;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;&#x9;[dbo].[DIM_COMPANYLONGLIST_WEB]&#xA;&#x9;&#x9;&#x9;where&#xA;&#x9;&#x9;&#x9;&#x9;''+@whereClause+''&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;''+@thisGenericName+'' is not null&#xA;&#x9;&#x9;&#x9;group by&#xA;&#x9;&#x9;&#x9;&#x9;''+@thisGenericName&#xA;&#xA;&#x9;&#x9;&#x9;delete from @ss where score_name = @thisScore&#xA;&#x9;&#x9;&#x9;set @ns = (select count(*) from @ss)&#xA;&#x9;&#x9;END&#xA;&#xA;&#x9;&#x9;print(@sql)&#xA;&#x9;&#x9;exec(''select histogram, category, [value],[flex] from (''+@sql+'')a where r&lt;=15 order by [histogram] asc, [value] desc'')&#xA;&#x9;')&#xA;END TRY&#xA;BEGIN CATCH&#xA;&#x9;IF OBJECT_ID('[dbo].[web_getLonglistHistograms]','P') is null&#xA;&#x9;&#x9;THROW;&#xA;END CATCH&#xA;GO&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlCreateUserTables">
      <DTS:VariableValue
        DTS:DataType="8">BEGIN TRY
create table report.requested_profile(
	run_id INT
	, bag_of_words nvarchar(1000)
	, minimal_class_size int
	, number_of_classes int
	, profile_criterion nvarchar(100)
	, profile_type nvarchar(100)
	, scope_to_project bit
	, class_code nvarchaR(50)
	, keyword_count int
	, keyword_weight real)
END TRY
BEGIN CATCH
	IF OBJECT_ID('report.requested_profile','U') is null
		THROW;
END CATCH

GO

BEGIN TRY
create table report.test_report(
	api varchar(100)
	, test_result varchar(10)
	, test_name varchar(50)
	, test_comment varchar(1000)
	, executed_on datetime default getdate()
	, run_id int
	, component_id nvarchar(50))
END TRY
BEGIN CATCH
	IF OBJECT_ID('report.test_report','U') is null
		THROW;
END CATCH

GO

BEGIN TRY
	CREATE TABLE [dbo].[company_long_list] (
		[row_i]         INT            IDENTITY (1, 1) NOT NULL,
		[company_id]    NVARCHAR (50)  NOT NULL PRIMARY KEY,
		[match]         REAL           NULL,
		[company_name]  NVARCHAR (255) NULL,
		[retrieval_key] NVARCHAR (50)  NULL
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].company_long_list','U') is null
		THROW;
END CATCH

GO

BEGIN TRY
	CREATE TABLE [dbo].[company_score](
		[score_id]			INT IDENTITY(1,1)	NOT NULL,
    	[score_generic_name] AS             CONCAT('a',RIGHT('00000'+CAST([score_id] AS VARCHAR(5)),5)),  --(concat('companyAttribute',right(concat('0',[score_id]),(len([score_id])+(1))+sign((1)-len([score_id]))))),
		[score_label]		NVARCHAR (100)		NULL,
		[is_numeric]		BIT					NULL,
		[display_in_fe]		BIT					NULL DEFAULT ((1)),
		[column_order]		SMALLINT			NULL,
		[data_type]			NVARCHAR (25)		NULL,
		[flex_width]		SMALLINT			NULL DEFAULT ((4)),
		[default_scale]		INT					NULL DEFAULT ((3)),
		[precision]			INT					NULL DEFAULT ((2)),
		[unit]				NVARCHAR (10)		NULL,
		[uni_polar]			BIT					NULL DEFAULT ((1)),
		[is_temporal]			BIT					NULL DEFAULT ((0))
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].company_score','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[company_score_int] (
		[company_id]        NVARCHAR (50) NULL,
		[score_name]		NVARCHAR (50) NULL,
		[score_value]       BIGINT        NULL
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].company_score_int','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[company_score_real] (
		[company_id]        NVARCHAR (50) NULL,
		[score_name]		NVARCHAR (50) NULL,
		[score_value]       REAL          NULL
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].company_score_real','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[company_score_str] (
		[company_id]        NVARCHAR (50)	NULL,
		[score_name]		NVARCHAR (50)	NULL,
		[score_value]             NVARCHAR (MAX)	NULL
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].company_score_str','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[company_time_score_int] (
		[company_id]        NVARCHAR (50) NULL,
		score_name			NVARCHAR (50) NULL,
		score_time			INT NULL,
		score_value         BIGINT        NULL
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].company_time_score_int','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[company_time_score_real] (
		[company_id]        NVARCHAR (50) NULL,
		score_name			NVARCHAR (50) NULL,
		score_time			INT NULL,
		score_value         real        NULL
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].company_time_score_real','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [questionnaire].[user_answer_checked](
		[id] [int] IDENTITY(1,1) NOT NULL,
		[id_answer] [int] NOT NULL,
		[id_user_answer] [int] NOT NULL,
		[reference] [nvarchar](1000) NULL,
		[comment] [nvarchar](max) NULL,
	PRIMARY KEY CLUSTERED 
	(
		[id] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
	)
END TRY
BEGIN CATCH
	IF OBJECT_ID('[questionnaire].[user_answer_checked]','U') is null
		THROW;
END CATCH
GO
BEGIN TRY
	CREATE TABLE [questionnaire].[user_answer](
		[id] [int] IDENTITY(1,1) NOT NULL,
		[bvd_id] [varchar](25) NOT NULL,
		[id_question] [int] NOT NULL,
		[is_latest] [bit] NOT NULL DEFAULT 1,
		[text_answer] [nvarchar](max) NULL,
		[added_on] [datetime2](7) NOT NULL DEFAULT getdate(),
		[added_by] [nvarchar](100) NULL,
		[status] [nvarchar](10) NULL,
		[reference] [nvarchar](1000) NULL,
		[comment] [nvarchar](max) NULL,
	PRIMARY KEY CLUSTERED 
	(
		[id] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
	)
END TRY
BEGIN CATCH
	IF OBJECT_ID('[questionnaire].[user_answer]','U') is null
		THROW;
END CATCH
GO
BEGIN TRY
	CREATE TABLE [questionnaire].[tab](
		[id] [int] IDENTITY(1,1) NOT NULL,
		[label] [nvarchar](25) NOT NULL,
		[default_state] [int] NOT NULL DEFAULT 0,
		[editable_on_tab_finish] [nvarchar](50) NULL,
	 CONSTRAINT [PK_tab] PRIMARY KEY CLUSTERED 
	(
		[id] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	)
END TRY
BEGIN CATCH
	IF OBJECT_ID('[questionnaire].[tab]','U') is null
		THROW;
END CATCH
GO
BEGIN TRY
	CREATE TABLE [questionnaire].[question_tab](
		[id] [int] IDENTITY(1,1) NOT NULL,
		[question_id] [int] NOT NULL,
		[tab_id] [int] NOT NULL,
		[sequence] [int] NOT NULL DEFAULT 0,
	 CONSTRAINT [PK_question_tab] PRIMARY KEY CLUSTERED 
	(
		[id] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
	)
END TRY
BEGIN CATCH
	IF OBJECT_ID('[questionnaire].[question_tab]','U') is null
		THROW;
END CATCH
GO
BEGIN TRY
	CREATE TABLE [questionnaire].[question](
		[id] [int] IDENTITY(1,1) NOT NULL,
		[input_type] [varchar](15) NOT NULL,
		[data_type] [varchar](15) NOT NULL,
		[label] [nvarchar](500) NOT NULL,
		[sidenote] [nvarchar](max) NULL,
		[score_name] [nvarchar](50) NOT NULL,
		[default_value] [nvarchar](150) NULL,
		[order] [smallint] NOT NULL,
		[is_linked] [bit] NOT NULL,
		[required] [bit] NOT NULL DEFAULT 1,
		[show_reference] [bit] NOT NULL DEFAULT 0,
		[show_comment] [bit] NOT NULL DEFAULT 0,
		[show_in_longlist] [bit] NOT NULL DEFAULT 0,
	PRIMARY KEY CLUSTERED 
	(
		[id] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[questionnaire].[question]','U') is null
		THROW;
END CATCH
GO
BEGIN TRY
	CREATE TABLE [questionnaire].[faq](
		[id] [int] IDENTITY(1,1) NOT NULL,
		[tab_ids] [varchar](50) NULL,
		[question] [nvarchar](250) NOT NULL,
		[answer_html] [nvarchar](max) NOT NULL,
	 CONSTRAINT [PK_questionnaire_faq] PRIMARY KEY CLUSTERED 
	(
		[id] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[questionnaire].[faq]','U') is null
		THROW;
END CATCH
GO
BEGIN TRY
	CREATE TABLE [questionnaire].[company_tab](
		[id] [int] IDENTITY(1,1) NOT NULL,
		[bvd_id] [nvarchar](25) NOT NULL,
		[tab_id] [int] NOT NULL,
		[state] [int] NOT NULL DEFAULT 0,
	 CONSTRAINT [PK_company_tab] PRIMARY KEY CLUSTERED 
	(
		[id] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[questionnaire].[company_tab]','U') is null
		THROW;
END CATCH
GO
BEGIN TRY
	CREATE TABLE [questionnaire].[answer](
		[id] [int] IDENTITY(1,1) NOT NULL,
		[question_id] [int] NOT NULL,
		[text] [nvarchar](500) NOT NULL,
		[value] [nvarchar](150) NOT NULL,
		[order] [smallint] NOT NULL,
		[linked_questions] [nvarchar](200) NULL,
		[report_text] [nvarchar](500) NULL,
		[show_reference] [bit] NOT NULL DEFAULT 0,
		[show_comment] [bit] NOT NULL DEFAULT 0,
	PRIMARY KEY CLUSTERED 
	(
		[id] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[questionnaire].[answer]','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[focus_list] (
		[focuslist_id] INT   NOT NULL IDENTITY(1,1) PRIMARY KEY
		,[label] nvarchar(255) NOT NULL
		,[created_by] nvarchar(50) not null
		,[created_on] datetime not null
		,[status] nvarchar(15) not null default 'open'
		,[comment] nvarchar(500)
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[focus_list]','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[focus_list_company]
	(
		[id] INT NOT NULL IDENTITY(1,1) PRIMARY KEY, 
		[focuslist_id] INT NULL, 
		company_id NVARCHAR(50) NULL
	)
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[focus_list_company]','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[ls_node] (
		node_key        int not null,
		node_id			NVARCHAR (100) NOT NULL,
		node_retrieval_key NVARCHAR(50) NULL,
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].ls_node','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[ls_node_list_item](
		[node_key] INT NOT NULL -- the identifier of the landscape node
		, item_type nvarchar(50) not null -- the type of items that can be retrieved; 'company', 'patent' but also other things
		, item_rank smallint not null -- in the case of ranked items, this column can be used
		, item_id nvarchar(100) null -- the internal identifier of this item; could be BvD ID for companies or publication number of patents; this may also be used 'in reverse' to look for other CPC classes a patent is assigned to.
		, item_attribute nvarchar(100) not null -- the various columns for the item enumeration: 'Title',  'Filing date' for patents, 'website', 'company name' for companies
		, item_value nvarchar(max) null -- the value for each item per column
		, primary key (node_key, item_type, item_rank,item_attribute)
	)
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[ls_node_list_item]','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[ls_node_position] (
		node_key        int not null,
		node_id			NVARCHAR (100) NOT NULL,
		node_x	REAL NOT NULL,
		node_y	REAL NOT NULL
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].ls_node_position','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[ls_node_property_numeric] (
		node_key        int not null,
		node_property_type			NVARCHAR (150) NOT NULL,
		node_property_value numeric(30,10) NULL
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].ls_node_property_numeric','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[ls_node_property_str] (
		node_key        int not null,
		node_property_type			NVARCHAR (150) NOT NULL,
		node_property_value nvarchar(max) NULL
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].ls_node_property_str','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[ls_node_score_numeric]
	(
		node_key INT NOT NULL
		, node_score_group nvarchar(100) not null
		, node_score_series_group nvarchar(100) null
		, node_score_series_key nvarchar(100) not null
		, node_score_view nvarchar(100) null
		, node_score_value numeric(30,10) not null
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].ls_node_score_numeric','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[ls_node_score_str]
	(
		node_key INT NOT NULL
		, node_score_group nvarchar(100) not null
		, node_score_series_group nvarchar(100) null
		, node_score_series_key nvarchar(100) not null
		, node_score_view nvarchar(100) null
		, node_score_value nvarchar(max) not null
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].ls_node_score_str','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[manual_scoring_action]
	(
		[id] INT NOT NULL IDENTITY(1,1) PRIMARY KEY
		, score_label nvarchar(100) NOT NULL
		, scoring_string nvarchar(max)
		, executed_on datetime NOT NULL DEFAULT GETDATE()
		, executed_by nvarchar(100)
		, [status] nvarchar(10)
		, modified_on datetime
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].manual_scoring_action','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[scored_company](
		[company_id]		NVARCHAR (50)	NOT NULL,
		[score_id]			INT				NOT NULL
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].scored_company','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[series_properties] (
		[series_id]         INT            IDENTITY (1, 1) NOT NULL,
		[SeriesToPlot_NAME] NVARCHAR (100) NOT NULL,
		[stroke_color]      NVARCHAR (15)  NULL,
		[fill_color]        NVARCHAR (15)  NULL,
		[fill_override]     TINYINT        NULL,
		PRIMARY KEY CLUSTERED ([series_id] ASC)
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[series_properties]','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[tile_attribute] (
		[id]                        INT            IDENTITY (1, 1) NOT NULL,
		[tile_id]                   SMALLINT       NOT NULL,
		[tile_name]                 NVARCHAR (50)  NULL,
		[bvd_id]                    VARCHAR (50)   NOT NULL,
		[company_name]              NVARCHAR (150) NULL,
		[attribute_name]            NVARCHAR (500) NOT NULL,
		[attribute_seq]             SMALLINT       NOT NULL,
		[attribute_value]           NVARCHAR (MAX) NULL,
		[attribute_benchmark_value] NVARCHAR (MAX) NULL,
		[attribute_link]            NVARCHAR (500) NULL,
		PRIMARY KEY CLUSTERED ([tile_id] ASC, [bvd_id] ASC, [attribute_seq] ASC)
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[tile_attribute]','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[tile_event_stream] (
		[id]                  INT            IDENTITY (1, 1) NOT NULL,
		[tile_id]             SMALLINT       NOT NULL,
		[tile_name]           NVARCHAR (50)  NULL,
		[bvd_id]              VARCHAR (50)   NOT NULL,
		[company_name]        NVARCHAR (150) NULL,
		[event_id]            NVARCHAR (100) NOT NULL,
		[event_seq]           SMALLINT       NULL,
		[event_attribute]     NVARCHAR (25)  NOT NULL,
		[event_attribute_seq] SMALLINT       NOT NULL,
		[event_value]         NVARCHAR (MAX) NULL,
		[event_date]          DATE           NULL,
		[event_type]          NVARCHAR (25)  NULL,
		PRIMARY KEY CLUSTERED ([tile_id] ASC, [bvd_id] ASC, [event_id] ASC, [event_attribute_seq] ASC)
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[tile_event_stream]','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[tile_profile] (
		[id]             INT             IDENTITY (1, 1) NOT NULL,
		[tile_id]        SMALLINT        NOT NULL,
		[tile_name]      NVARCHAR (50)   NULL,
		[bvd_id]         VARCHAR (50)    NOT NULL,
		[company_name]   NVARCHAR (150)  NULL,
		[series_name]    NVARCHAR (100)  NOT NULL,
		[category]       NVARCHAR (100)  NOT NULL,
		[category_short] NVARCHAR (25)   NULL,
		[category_seq]   SMALLINT        NOT NULL,
		[series_value]   NUMERIC (30, 3) NULL,
		PRIMARY KEY CLUSTERED ([tile_id] ASC, [bvd_id] ASC, [series_name] ASC, [category_seq] ASC)
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[tile_profile]','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[tile_timeseries] (
		[id]           INT             IDENTITY (1, 1) NOT NULL,
		[tile_id]      SMALLINT        NOT NULL,
		[tile_name]    NVARCHAR (50)   NULL,
		[bvd_id]       VARCHAR (50)    NOT NULL,
		[company_name] NVARCHAR (150)  NULL,
		[series_name]  NVARCHAR (100)  NOT NULL,
		[series_x]     NUMERIC (30)    NOT NULL,
		[series_y]     NUMERIC (30, 3) NULL,
		[series_seq]   SMALLINT        NULL,
		PRIMARY KEY CLUSTERED ([tile_id] ASC, [bvd_id] ASC, [series_name] ASC, [series_x] ASC)
	);	
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[tile_timeseries]','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [custom].[ls_node_property_numeric] (
		node_key        int not null,
		node_property_type			NVARCHAR (150) NOT NULL,
		node_property_value numeric(30,10) NULL
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[custom].ls_node_property_numeric','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [custom].[ls_node_score_numeric]
	(
		node_key INT NOT NULL
		, node_score_group nvarchar(100) not null
		, node_score_series_group nvarchar(100) null
		, node_score_series_key nvarchar(100) not null
		, node_score_view nvarchar(100) null
		, node_score_value numeric(30,10) not null
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[custom].ls_node_score_numeric','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[longlist_histograms]
	(
		score_label nvarchar(50) not null
	);
	INSERT INTO [dbo].[longlist_histograms] VALUES('Industry'),('Country')
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].longlist_histograms','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	CREATE TABLE [dbo].[longlist_column_groups] (
	    [score_label]       NVARCHAR (100) NOT NULL,
	    [column_group_name] NVARCHAR (50)  NOT NULL,
	    [default_visible]   TINYINT        DEFAULT ((1)) NOT NULL,
	    PRIMARY KEY CLUSTERED ([score_label] ASC, [column_group_name] ASC)
	);
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].longlist_column_groups','U') is null
		THROW;
END CATCH
GO

BEGIN TRY
	exec(N'CREATE FUNCTION [dbo].[onFocusList]( @company_id nvarchar(25), @focuslist_id int) RETURNS tinyint
	AS
	BEGIN

		declare @n int
		declare @r tinyint
		set @n = (SELECT COUNT(*) FROM [dbo].focus_list_company where company_id=@company_id and focuslist_id=@focuslist_id)
		IF @n&gt;0
			SET @r = 1
		ELSE
			SET @r = 0

		RETURN @r
	END')
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].onFocusList','FN') is null
		THROW;
END CATCH
GO

BEGIN TRY
	IF OBJECT_ID('[dbo].[DEF_COMPANYLONGLIST_FILTERS]','U') is not null
		DROP TABLE [dbo].[DEF_COMPANYLONGLIST_FILTERS]
		
	exec(N'CREATE view [dbo].[DEF_COMPANYLONGLIST_FILTERS] as
		select
			focuslist_id as id
			, label as [title]
			, concat(''[dbo].[onFocusList](companyPrimKey,'',cast(focuslist_id as nvarchar(10)),'')&gt;0'') as [where]
		from
			[dbo].[focus_list]
		where
			[status]=''open''')
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[DEF_COMPANYLONGLIST_FILTERS]','V') is null
		THROW;
END CATCH
GO

BEGIN TRY
	IF OBJECT_ID('[dbo].[DEF_COLUMN_GROUPS]','U') is not null
		DROP TABLE [dbo].[DEF_COLUMN_GROUPS]
		
	exec(N'CREATE VIEW [dbo].[DEF_COLUMN_GROUPS]
			AS
		SELECT
			[score_generic_name]
			, ''Other'' as column_group_name
			, 0 as default_visible
		FROM
			company_score
		where
			score_label not in (select distinct score_label from longlist_column_groups)
			and
			score_label in (select score_label from company_score where display_in_fe=1)
		UNION ALL
		select
			score_generic_name
			, lcg.column_group_name
			, lcg.default_visible
		from
			longlist_column_groups lcg JOIN
			company_score cs ON cs.score_label=lcg.score_label')
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[DEF_COLUMN_GROUPS]','V') is null
		THROW;
END CATCH
GO

BEGIN TRY
	exec(N'CREATE PROCEDURE [dbo].[web_getLonglistStats](@whereClause nvarchar(max)=''1&gt;0'' ) AS
	
	IF(len(@whereClause)=0)
		set @whereClause = ''1&gt;0''

	declare @sql nvarchar(max)
	set @sql = '' SELECT '' +
	''COUNT(*) AS ''''Total # Companies''''''+
	''from '' +
	''DIM_COMPANYLONGLIST_WEB'' +
	'' union all '' +
	'' SELECT '' +
	''COUNT(*) AS ''''Total # Companies''''''+
	''from '' +
		''DIM_COMPANYLONGLIST_WEB '' + 
		''WHERE '' + @whereClause

	exec(@sql)')
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[web_getLonglistStats]','P') is null
		THROW;
END CATCH
GO


BEGIN TRY
	exec(N'CREATE PROCEDURE [dbo].[web_getIpcCompanies](@ipc INT) as
		select
			[Name],[# Families in Class],[Total # Families],item_id as [Company ID]
		from
			(select
				[item_rank]
				, [item_id]
				, [item_attribute]
				, item_value
			from
				[dbo].[ls_node_list_item]
			where
				item_type = ''Company''
				and
				node_key=@ipc
			) p
		pivot(
			max(item_value) for item_attribute in ([Name],[# Families in Class],[Total # Families])
		) pvt
		order by
			[item_rank] asc')
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[web_getIpcCompanies]','P') is null
		THROW;
END CATCH
GO


BEGIN TRY
	exec(N'CREATE PROCEDURE [dbo].[web_getIpcLatestCeDocuments](
		@ipc INT
		, @ww nvarchar(100)	= ''cellulose ester"OR"cellulose acetate'' ) AS
		declare @w nvarchar(102);
		set @w = ''"'' + @ww + ''"'';

		select
			item_id as [Publication number]
			, [Title]
			, [Filing year]
		from
			(select
				[item_rank]
				, [item_id]
				, [item_attribute]
				, item_value
			from
				[dbo].[ls_node_list_item]
			where
				item_type = ''Patent''
				and
				node_key=@ipc
			) p
		pivot(
			max(item_value) for item_attribute in ([Title],[Filing year])
		) pvt
		order by
			[item_rank] asc')
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[web_getIpcLatestCeDocuments]','P') is null
		THROW;
END CATCH
GO

BEGIN TRY
	exec(N'CREATE PROCEDURE [dbo].[web_getLonglistHistograms](@whereClause nvarchar(max)=''1&gt;0'') AS 
		declare @sql nvarchar(max)
		declare @thisScore nvarchar(50);
		declare @thisGenericName nvarchar(15);
		declare @ss table(score_name nvarchar(50), generic_name nvarchar(15))
		declare @ns smallint
		insert into @ss select lh.score_label, cs.score_generic_name from [dbo].[longlist_histograms] lh JOIN company_score cs ON cs.score_label=lh.score_label
		set @ns = (select count(*) from @ss)

		IF(@ns &gt; 0)
		BEGIN
			set @thisScore = (select top 1 score_name from @ss)
			set @thisGenericName = (select generic_name from @ss where score_name=@thisScore)

			set @sql = N''select
				''''''+@thisScore+'''''' as [histogram]
				, ''+@thisGenericName+'' as [category]
				, count(*) as [value]
				, '' + case when @thisScore = ''Industry'' then ''1'' else ''1'' end +'' as [flex]
				, rank() over (order by count(*) desc) as r
			from
				[dbo].[DIM_COMPANYLONGLIST_WEB]
			where
				''+@whereClause+''
				and
				''+@thisGenericName+'' is not null
			group by
				''+@thisGenericName

			delete from @ss where score_name = @thisScore
			set @ns = (select count(*) from @ss)
		END

		WHILE @ns &gt; 0
		BEGIN
			set @thisScore = (select top 1 score_name from @ss)
			set @thisGenericName = (select generic_name from @ss where score_name=@thisScore)

			set @sql = @sql + N'' union all select
				''''''+@thisScore+'''''' as [histogram]
				, ''+@thisGenericName+'' as [category]
				, count(*) as [value]
				, '' + case when @thisScore = ''Industry'' then ''1'' else ''1'' end +'' as [flex]
				, rank() over (order by count(*) desc) as r
			from
				[dbo].[DIM_COMPANYLONGLIST_WEB]
			where
				''+@whereClause+''
				and
				''+@thisGenericName+'' is not null
			group by
				''+@thisGenericName

			delete from @ss where score_name = @thisScore
			set @ns = (select count(*) from @ss)
		END

		print(@sql)
		exec(''select histogram, category, [value],[flex] from (''+@sql+'')a where r&lt;=15 order by [histogram] asc, [value] desc'')
	')
END TRY
BEGIN CATCH
	IF OBJECT_ID('[dbo].[web_getLonglistHistograms]','P') is null
		THROW;
END CATCH
GO</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{34CB98F3-5173-41EB-B9F5-7898948D68E6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT nlh.checkEvents(ivh.getDependencies('&quot; + @[User::cfg_sla_ComponentID]  + &quot;'), 'complete') AS depenciesChecked&#xA; IF ( SELECT nlh.checkEvents(ivh.getDependencies('&quot; + @[User::cfg_sla_ComponentID]  + &quot;'), 'complete')) = 0&#xA;&#x9;WAITFOR DELAY '&quot;+ @[User::cfg_sla_PollEvery]   +&quot;'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlDependencies">
      <DTS:VariableValue
        DTS:DataType="8">SELECT nlh.checkEvents(ivh.getDependencies(''), 'complete') AS depenciesChecked
 IF ( SELECT nlh.checkEvents(ivh.getDependencies(''), 'complete')) = 0
	WAITFOR DELAY ''</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D36022FD-3735-48DA-A344-9EB733FE2AB3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_EpKey">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F3B93B7A-5EEB-4F8E-BD4A-2AB80FC0B84C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="this_EpKeyValuePair">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{488D4AC2-558E-4E35-A52E-97632CEB95B3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_EpValue">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BCB975D5-7EAA-4015-AB74-2709B4C9E962}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varProjectCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_prj_testDeployment</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2ED74542-D237-4F64-B997-475285D71B53}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7283C991-3417-4CBA-AF4D-9B8E5B7FD7D6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::RUN_ID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varRunId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check POST-conditions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{8A955A74-9D73-4846-83C0-48118F74EA47}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check POST-conditions">
      <DTS:Variables />
      <DTS:Executables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Check POST-conditions.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{6B8EF50F-0D1A-4388-959E-306EA6BC3DA1}"
          DTS:EventID="220557984"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{4C4E15A0-9621-4005-BE99-0D13E85518E9}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check POST-conditions.EventHandlers[OnPostExecute]\Event - End executable"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{ba301058-df6b-4329-9095-f56792f6f4ff}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - End executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='complete',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Information'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='complete',@source_id='', @level='Information'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Check PRE-conditions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{99DCA089-4613-42BA-BD07-0C7CDBA76D6F}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check PRE-conditions">
      <DTS:Variables />
      <DTS:Executables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Check PRE-conditions.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{0F76F724-DA60-4C69-ADC1-BE2089883DFE}"
          DTS:EventID="220557984"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{BB46A31E-0A18-4DA8-9650-CD8C25AE64D1}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check PRE-conditions.EventHandlers[OnPostExecute]\Event - Start executable"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{e659fc7d-ee40-4cfc-8520-230476a773b4}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - Start executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='start',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Information'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='start',@source_id='', @level='Information'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute Feature"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{EAC53B2E-745D-48DF-8D0F-5E5C62E65ADA}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute Feature">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Create Database"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C2C93785-7AE9-4564-BD59-6585759A1251}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">REPLACE( @[User::sqlCreateDatabase] ,"$DBNAME$", @[User::cfg_sla_ProjectCatalog] )</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C599640B-07A4-44F3-8653-7D5C4CC5C312}"
              SQLTask:SqlStatementSource="&#xA;DECLARE @i TINYINT = 0&#xA;&#xA;WHILE 1=1&#xA;BEGIN&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;CREATE DATABASE [prv_prj_deploytest]&#xA;&#x9;&#x9;BREAK;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;IF DB_ID('prv_prj_deploytest') IS NULL&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;IF @i &lt;= 3&#xA;&#x9;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;&#x9;SET @i += 1&#xA;&#x9;&#x9;&#x9;&#x9;WAITFOR DELAY '00:00:10'&#xA;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;ELSE THROW;&#xA;&#x9;&#x9;END&#xA;&#x9;&#x9;ELSE BREAK;&#xA;&#x9;END CATCH&#xA;END&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Create Schemas"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{DCCFC57F-69E0-4E6D-9306-6BF11AE124D5}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Schemas"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C599640B-07A4-44F3-8653-7D5C4CC5C312}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sqlCreateSchemas" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Create User Tables"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C0A52021-7AD1-49F0-A378-8D5A7BD3CB77}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create User Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C599640B-07A4-44F3-8653-7D5C4CC5C312}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sqlCreateUserTables" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Decode header into key-value pairs"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{8A50149E-0E4F-4CCC-80C9-A620B17F6B61}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Decode header into key-value pairs"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_862894dc612f454d86d5c5bb35b61a82"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName"
              ReadWriteVariables="User::cfg_pkg_HeaderProperties">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_862894dc612f454d86d5c5bb35b61a82")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_862894dc612f454d86d5c5bb35b61a82")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig.Params;
using Deloitte.PipelineFramework.PlatformConfig;
using System.Reflection;
#endregion

namespace ST_862894dc612f454d86d5c5bb35b61a82
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetupLogger();

                /*
                 deloitte.SetCollectionForForEachLoopToVar<ConfigHeader>(
                    deloitte.PackageConfig.NodeSelectionParams,
                    "User::cfg_pkg_NodeSelectionParams"
                );
                */

                List<KeyValuePair<string, object>> rows = new List<KeyValuePair<string,object>>();
                if (deloitte.Config != null && deloitte.Config.Header != null)
                {
                    foreach (var prop in typeof(ConfigHeader).GetProperties(BindingFlags.Instance | BindingFlags.Public))
                    {
                        rows.Add(new KeyValuePair<string, object>(prop.Name, prop.GetValue(deloitte.Config.Header, null)));
                    }
                }
                deloitte.SetCollectionForForEachLoopToVar<KeyValuePair<string, object>>(
                    rows,
                    "User::cfg_pkg_HeaderProperties"
                );


            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_862894dc612f454d86d5c5bb35b61a82.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1C9242B9-C7D7-48A1-B25B-B3B38D5C335C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_862894dc612f454d86d5c5bb35b61a82</RootNamespace>
    <AssemblyName>ST_862894dc612f454d86d5c5bb35b61a82</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_7.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_862894dc612f454d86d5c5bb35b61a82</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_862894dc612f454d86d5c5bb35b61a82</msb:DisplayName>
		<msb:ProjectId>{4F4D48AA-2041-4B99-A695-96ECB0E6F278}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_862894dc612f454d86d5c5bb35b61a82.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_862894dc612f454d86d5c5bb35b61a82.Properties.Settings.get_Default():ST_862894dc612f454d86d5c5bb35b61a82.Properties.Sett" +
    "ings")]

namespace ST_862894dc612f454d86d5c5bb35b61a82.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_862894dc612f454d86d5c5bb35b61a82.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_862894dc612f454d86d5c5bb35b61a82.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_862894dc612f454d86d5c5bb35b61a82.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_862894dc612f454d86d5c5bb35b61a82.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_862894dc612f454d86d5c5bb35b61a82.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_862894dc612f454d86d5c5bb35b61a82.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANh/+lYAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAALjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANQvAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
MAAAAAAAAEgAAAACAAUAOCIAAJwNAAABAAAAAAAAAIAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBQCfAAAAAgAAEQIoFgAACnMXAAAKCgZvGAAACnMZAAAKCwZvGgAA
CixZBm8aAAAKbxsAAAosTNAgAAABKA8AAAofFG8cAAAKDRYTBCsuCREEmgwHCG8dAAAKCAZvGgAA
Cm8bAAAKFG8eAAAKcx8AAApvIAAAChEEF1gTBBEECY5pMssGB3JzAABwbwEAACsm3goGLAYGbyIA
AArcAigWAAAKFm8jAAAKKgABEAAAAgAMAHyIAAoAAAAAHgIoJAAACiq0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAMAQAACN+AACcBAAAeAYAACNTdHJpbmdz
AAAAABQLAAC0AAAAI1VTAMgLAAAQAAAAI0dVSUQAAADYCwAAxAEAACNCbG9iAAAAAAAAAAIAAAFX
HaIJCQsAAAD6JTMAFgAAAQAAACUAAAAFAAAABgAAAAkAAAABAAAAJAAAAAIAAAAPAAAAAgAAAAIA
AAADAAAABAAAAAIAAAABAAAABAAAAAEAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAO
AD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUCcAIGAO4C
cAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAGAAIEugAG
ACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAPkE3gQGAC8FFAUGADYFFAUSAG8F
RQUSAH8FRQUGAJcFcAIGAKQFcAIGAL8FcAIGAOAFFAUGAA8GugAAAAAAAQAAAAAAAQABAAAAEAAy
ADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMA
EQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwAB
AJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIA
pyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACAHghAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8
AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0A
kQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8
ARsAGQDWBI0A4QC8AZsA4QAIBRsADAC8ARsA4QB0BawA+QCMBbEAoQCxBbcAGQHKBcEACQHTBcUA
FAC8AdMADADcBdsA4QDuBeEAKQEbBhsA2QAjBl0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAb
AH8BLgAjAH8BLgBjAKUBLgALAA4BLgATAFYBLgAzAFYBLgArAH8BLgA7AIUBLgBDAH8BLgBbAJwB
QwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQD3AAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgAC
AAMAAgADAAUAAQAEAAUAAgAFAAcAoQDMAASAAAABAAAALBc0ZAAAAAAAAH8AAAAEAAAAAAAAAAAA
AAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAAAAADAAAAAAAA
AAAAAACSAN4EAAAAAAAAAAABAAAAMgYAAAUABABDAO4AAAAAAAA8TW9kdWxlPgBTVF84NjI4OTRk
YzYxMmY0NTRkODZkNWM1YmIzNWI2MWE4Mi5kbGwAUmVzb3VyY2VzAFNUXzg2Mjg5NGRjNjEyZjQ1
NGQ4NmQ1YzViYjM1YjYxYTgyLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF84NjI4
OTRkYzYxMmY0NTRkODZkNWM1YmIzNWI2MWE4MgBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3Rl
bQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWlj
cm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tz
LlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291
cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3Vs
dHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVm
YXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNv
bmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmli
dXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3Rp
Y3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBEZWxvaXR0ZS5QaXBlbGluZUZyYW1ld29yawBE
ZWxvaXR0ZVNjcmlwdABTZXR1cExvZ2dlcgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBMaXN0
YDEAS2V5VmFsdWVQYWlyYDIARGVsb2l0dGUuUGlwZWxpbmVGcmFtZXdvcmsuUGxhdGZvcm1Db25m
aWcAUm9vdABnZXRfQ29uZmlnAENvbmZpZ0hlYWRlcgBnZXRfSGVhZGVyAFByb3BlcnR5SW5mbwBC
aW5kaW5nRmxhZ3MAR2V0UHJvcGVydGllcwBNZW1iZXJJbmZvAGdldF9OYW1lAEdldFZhbHVlAEFk
ZABJRW51bWVyYWJsZWAxAFNldENvbGxlY3Rpb25Gb3JGb3JFYWNoTG9vcFRvVmFyAElEaXNwb3Nh
YmxlAERpc3Bvc2UAc2V0X1Rhc2tSZXN1bHQAU1RfODYyODk0ZGM2MTJmNDU0ZDg2ZDVjNWJiMzVi
NjFhODIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8AOAA2ADIAOAA5
ADQAZABjADYAMQAyAGYANAA1ADQAZAA4ADYAZAA1AGMANQBiAGIAMwA1AGIANgAxAGEAOAAyAC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAA9VQBzAGUAcgA6ADoAYwBm
AGcAXwBwAGsAZwBfAEgAZQBhAGQAZQByAFAAcgBvAHAAZQByAHQAaQBlAHMAAAAAAGX1tjVt/o9E
qeQFvERzFn4ACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQI
ABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUE
IAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQj5Ajo2DehLDAUgAQESbQoV
EnUBFRF5Ag4cBCAAEn0FIAASgIEJIAEdEoCFEYCJAyAADgYgAhwcHRwGFRF5Ag4cByACARMAEwEF
IAEBEwAMMAECAhUSgJEBHgAOCAoBFRF5Ag4cFgcFEnEVEnUBFRF5Ag4cEoCFHRKAhQhHAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJh
bWV3b3JrIDQoAQAjU1RfODYyODk0ZGM2MTJmNDU0ZDg2ZDVjNWJiMzViNjFhODIAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhy
b3dzAfwvAAAAAAAAAAAAAB4wAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMAAAAAAAAAAAAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABADRkLBcAAAEANGQsFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA4ADYAMgA4ADkANABkAGMANgAxADIAZgA0ADUANABkADgANgBkADUAYwA1AGIAYgAzADUAYgA2
ADEAYQA4ADIAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA5ADMA
MgAuADIANQA2ADUAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA4
ADYAMgA4ADkANABkAGMANgAxADIAZgA0ADUANABkADgANgBkADUAYwA1AGIAYgAzADUAYgA2ADEA
YQA4ADIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAFQAXwA4ADYAMgA4ADkANABkAGMANgAxADIAZgA0ADUANABkADgANgBk
ADUAYwA1AGIAYgAzADUAYgA2ADEAYQA4ADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBUAF8AOAA2ADIAOAA5ADQAZABjADYAMQAyAGYANAA1ADQAZAA4ADYAZAA1
AGMANQBiAGIAMwA1AGIANgAxAGEAOAAyAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA1ADkAMwAyAC4AMgA1ADYANQAyAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADkAMwAyAC4AMgA1ADYANQAyAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Make backup"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{3E137AC1-E47E-44A8-AD0E-9702F4B930AD}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Make backup"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C599640B-07A4-44F3-8653-7D5C4CC5C312}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sqlCreateBackup" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Set extended properties"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{74926013-03B5-411B-8EC1-B29FA0FD8F37}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set extended properties">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.SqlServer.Dts.Runtime.Enumerators.FromVar.ForEachFromVarEnumerator, Microsoft.SqlServer.ForEachFromVarEnumerator, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
            DTS:DTSID="{8758B117-7CEF-4977-BCD8-9C68B52A7C15}"
            DTS:ObjectName="{8758B117-7CEF-4977-BCD8-9C68B52A7C15}">
            <DTS:ObjectData>
              <FEEFVE
                VariableName="User::cfg_pkg_HeaderProperties" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Set extended properties\Decode key-value pair"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{03E023B9-A239-4028-89ED-CA11796FE5B1}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Decode key-value pair"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_c5d2c497139640ee991b13b7318681a3"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName,User::this_EpKeyValuePair"
                  ReadWriteVariables="User::this_EpKey,User::this_EpValue">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c5d2c497139640ee991b13b7318681a3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c5d2c497139640ee991b13b7318681a3")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using System.Collections.Generic;
#endregion

namespace ST_c5d2c497139640ee991b13b7318681a3
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts)) {
                deloitte.SetupLogger();

                var kvp = deloitte.ReadVariable<KeyValuePair<string, object>>("User::this_EpKeyValuePair");

                Dts.Variables["this_EpKey"].Value = kvp.Key;
                try
                {
                    Dts.Variables["this_EpValue"].Value = kvp.Value.ToString();
                }
                catch
                {
                    Dts.Variables["this_EpValue"].Value = "";
                    //deloitte.Logger()
                }
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_c5d2c497139640ee991b13b7318681a3.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D4C90CA2-490D-4E4C-A6A3-CF99031AE28F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c5d2c497139640ee991b13b7318681a3</RootNamespace>
    <AssemblyName>ST_c5d2c497139640ee991b13b7318681a3</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_7.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_c5d2c497139640ee991b13b7318681a3</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_c5d2c497139640ee991b13b7318681a3</msb:DisplayName>
		<msb:ProjectId>{CB2415B0-484C-4352-B62D-16EAB841047C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c5d2c497139640ee991b13b7318681a3.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c5d2c497139640ee991b13b7318681a3.Properties.Settings.get_Default():ST_c5d2c497139640ee991b13b7318681a3.Properties.Sett" +
    "ings")]

namespace ST_c5d2c497139640ee991b13b7318681a3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c5d2c497139640ee991b13b7318681a3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c5d2c497139640ee991b13b7318681a3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c5d2c497139640ee991b13b7318681a3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c5d2c497139640ee991b13b7318681a3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c5d2c497139640ee991b13b7318681a3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_c5d2c497139640ee991b13b7318681a3.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFxo+1YAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA3i8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJAvAABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5A8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
LwAAAAAAAEgAAAACAAUASCIAAEgNAAABAAAAAAAAAJAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAgCiAAAAAgAAEQIoFgAACnMXAAAKCgZvGAAACgZycwAAcG8BAAAr
CwIoFgAACm8aAAAKcqcAAHBvGwAAChIBKBwAAApvHQAACgIoFgAACm8aAAAKcr0AAHBvGwAAChIB
KB4AAApvHwAACm8dAAAK3iImAigWAAAKbxoAAApyvQAAcG8bAAAKctcAAHBvHQAACt4A3goGLAYG
byAAAArcAigWAAAKFm8hAAAKKgAAARwAAAAAPwAoZwAiAQAAAQIADAB/iwAKAAAAAB4CKCIAAAoq
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABgEAAAjfgAA
hAQAAEAGAAAjU3RyaW5ncwAAAADECgAA3AAAACNVUwCgCwAAEAAAACNHVUlEAAAAsAsAAJgBAAAj
QmxvYgAAAAAAAAACAAABVx2iCQkLAAAA+iUzABYAAAEAAAAgAAAABQAAAAYAAAAJAAAAAQAAACIA
AAACAAAADwAAAAIAAAACAAAAAwAAAAQAAAABAAAAAQAAAAUAAAABAAAAAQAAAAEAAAAAAAoAAQAA
AAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnAC
BgC2AnACBgDVAnACBgDuAnACBgAHA3ACBgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgDg
A80DBgD9A7oABgACBLoABgAmBHACCgBSBDwECgBrBDwEBgCABG8DDgCiBBQBDgDEBBQBEgD5BN4E
BgA8BSEFFgCKBWoFFgCiBWoFBgDZBboAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABr
ADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYG
HwJHAFaAJwJKAFaALwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAAB
AJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYmwSJAAIA
vCAAAAAAhgAaAhsAAgCIIQAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFY
AFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkA
vAEbAKEAFARiAKEALwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA1gSNAOEAvAGb
AOEACAUbAOEAFAWhANkAlAWxAPEAqwW2AAwAtAXDAPkAvAXIAAwAxgXNAAkA0AXSAAEB5QUbANkA
7QVdABkAvAEbAAgAFABOAAgAGABTACkAkwCAAC4AGwBSAS4AIwBSAS4AYwB4AS4ACwDhAC4AEwAp
AS4AMwApAS4AKwBSAS4AOwBYAS4AQwBSAS4AWwBvAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAHUA
1gACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHALwABIAA
AAEAAAAtF7YvAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAA
AAALAAAAAAAAAAAAAAAKAPUAAAAAAAMAAAAAAAAAAAAAAJIA3gQAAAAACwAAAAAAAAAAAAAACgBL
BQAAAAAAAAAAAQAAAPwFAAAFAAQAMwCoAAAAAAAAPE1vZHVsZT4AU1RfYzVkMmM0OTcxMzk2NDBl
ZTk5MWIxM2I3MzE4NjgxYTMuZGxsAFJlc291cmNlcwBTVF9jNWQyYzQ5NzEzOTY0MGVlOTkxYjEz
YjczMTg2ODFhMy5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfYzVkMmM0OTcxMzk2
NDBlZTk5MWIxM2I3MzE4NjgxYTMAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0
AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRU
YXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVz
b3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZv
AHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFp
bgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlw
dE9iamVjdE1vZGVsAGdldF9EdHMARGVsb2l0dGUuUGlwZWxpbmVGcmFtZXdvcmsARGVsb2l0dGVT
Y3JpcHQAU2V0dXBMb2dnZXIAUmVhZFZhcmlhYmxlAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmlj
AEtleVZhbHVlUGFpcmAyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdl
dF9JdGVtAGdldF9LZXkAc2V0X1ZhbHVlAGdldF9WYWx1ZQBUb1N0cmluZwBJRGlzcG9zYWJsZQBE
aXNwb3NlAHNldF9UYXNrUmVzdWx0AFNUX2M1ZDJjNDk3MTM5NjQwZWU5OTFiMTNiNzMxODY4MWEz
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwBjADUAZAAyAGMANAA5ADcA
MQAzADkANgA0ADAAZQBlADkAOQAxAGIAMQAzAGIANwAzADEAOAA2ADgAMQBhADMALgBQAHIAbwBw
AGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAADNVAHMAZQByADoAOgB0AGgAaQBzAF8A
RQBwAEsAZQB5AFYAYQBsAHUAZQBQAGEAaQByAAAVdABoAGkAcwBfAEUAcABLAGUAeQAAGXQAaABp
AHMAXwBFAHAAVgBhAGwAdQBlAAABAAAAAMOFk6Gq4iRHnz8F3B+x+IQACLd6XFYZNOCJCImEXc2A
gMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIG
CAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgB
AAIAAAAAAAMAAAEEIAASbQj5Ajo2DehLDAUgAQESbQYwAQEeAA4ICgEVEXUCDhwEIAASeQUgARJ9
HAYVEXUCDhwEIAATAAQgAQEcBCAAEwEDIAAOCgcCEnEVEXUCDhxHAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAj
U1RfYzVkMmM0OTcxMzk2NDBlZTk5MWIxM2I3MzE4NjgxYTMAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQC4LwAAAAAA
AAAAAADOLwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwC8AAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQC2Ly0XAAABALYvLRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AYwA1AGQAMgBjADQAOQA3ADEAMwA5ADYANAAwAGUAZQA5ADkAMQBiADEAMwBiADcAMwAxADgA
NgA4ADEAYQAzAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQAz
ADMALgAxADIAMgAxADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
YwA1AGQAMgBjADQAOQA3ADEAMwA5ADYANAAwAGUAZQA5ADkAMQBiADEAMwBiADcAMwAxADgANgA4
ADEAYQAzAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AYwA1AGQAMgBjADQAOQA3ADEAMwA5ADYANAAwAGUAZQA5ADkA
MQBiADEAMwBiADcAMwAxADgANgA4ADEAYQAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfAGMANQBkADIAYwA0ADkANwAxADMAOQA2ADQAMABlAGUAOQA5ADEA
YgAxADMAYgA3ADMAMQA4ADYAOAAxAGEAMwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA5ADMAMwAuADEAMgAyADEANAAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADMAMwAuADEAMgAyADEANAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Set extended properties\execute sp_addextendedproperty"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{D3E65474-7244-4F30-9F60-6B6204B07D49}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="execute sp_addextendedproperty"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{C599640B-07A4-44F3-8653-7D5C4CC5C312}"
                  SQLTask:SqlStatementSource="IF NOT EXISTS (select * from sys.extended_properties where name=? and class_desc='DATABASE')&#xA;&#xA;     EXEC sys.sp_addextendedproperty @name=?, @value=?&#xA;ELSE&#xA;&#xA;     EXEC sys.sp_updateextendedproperty @name=?, @value=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::this_EpKey"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::this_EpValue"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="3"
                    SQLTask:DtsVariableName="User::this_EpKey"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="4"
                    SQLTask:DtsVariableName="User::this_EpValue"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::this_EpKey"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Set extended properties.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{521CB80B-B1B4-441E-8DE1-853AB3CEC7EA}"
              DTS:From="Package\Execute Feature\Set extended properties\Decode key-value pair"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Execute Feature\Set extended properties\execute sp_addextendedproperty" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{0E278210-93B3-4352-BA17-5BDBE858D5BD}"
              DTS:ObjectName="{0E278210-93B3-4352-BA17-5BDBE858D5BD}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::this_EpKeyValuePair" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Set initial catalog 'master'"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Expression Task"
          DTS:DTSID="{489DBF41-558D-4814-A641-72B0D6B74BF1}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set initial catalog 'master'"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2012; ? 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::varProjectCatalog] = &quot;master&quot;" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Set initial catalog to project catalog"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Expression Task"
          DTS:DTSID="{1673567A-F897-46F4-917D-1A0D3ADD91EB}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set initial catalog to project catalog"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2012; ? 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::varProjectCatalog] =  @[User::cfg_sla_ProjectCatalog]" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{E66999C7-4FFB-4ABA-AA16-E93D2AA60AAF}"
          DTS:From="Package\Execute Feature\Create Database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Execute Feature\Set initial catalog to project catalog" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{2D631AA8-1552-47CB-B4ED-206FE7E15B82}"
          DTS:From="Package\Execute Feature\Set initial catalog 'master'"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Execute Feature\Create Database" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{4DB44081-7805-4DA9-8C27-586984D043FC}"
          DTS:From="Package\Execute Feature\Create Schemas"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Execute Feature\Create User Tables" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{9DF70E40-F234-4D63-B282-6B124D183D62}"
          DTS:From="Package\Execute Feature\Set initial catalog to project catalog"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Execute Feature\Create Schemas" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{B5356144-84A8-4A66-B615-9CE7955D19AB}"
          DTS:From="Package\Execute Feature\Create Database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Execute Feature\Decode header into key-value pairs" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{BBE1398C-152E-4FA1-8C87-3E16BBFF1F75}"
          DTS:From="Package\Execute Feature\Decode header into key-value pairs"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Execute Feature\Set extended properties" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{6FD197FC-E4CC-44F4-8464-FCAFEA212ED4}"
          DTS:From="Package\Execute Feature\Set extended properties"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Execute Feature\Make backup" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{A4FC5A2A-238E-44ED-A488-7CE5A4E17B7D}"
          DTS:From="Package\Execute Feature\Create User Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Execute Feature\Make backup" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize - specific"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{508215AB-5857-4B36-95B9-2C3163B370A2}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize - specific">
      <DTS:Variables />
      <DTS:Executables />
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize - template"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{469B2853-E47C-4EC9-9983-516E4351078B}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize - template">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Get server configuration"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B14413F2-5483-4A4E-8691-BE11070A27EB}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get server configuration"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
              SQLTask:SqlStatementSource="select @@ServerName AS DBServer, DB_NAME() AS DBName"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="DBServer"
                SQLTask:DtsVariableName="User::cfg_tpl_DBServer" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="DBName"
                SQLTask:DtsVariableName="User::cfg_tpl_DBName" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Initialize package configuration"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{27AD6612-5F2B-4F4C-AEFE-16CEABD26D40}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Initialize package configuration"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_9560e13f3ccd474984696163ed602485"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9560e13f3ccd474984696163ed602485")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9560e13f3ccd474984696163ed602485")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Settings.get_Default():ST_9560e13f3ccd474984696163ed602485.Properties.Sett" +
    "ings")]

namespace ST_9560e13f3ccd474984696163ed602485.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.OleDb;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig.Params;

#endregion

namespace ST_9560e13f3ccd474984696163ed602485
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion



        public void Main()
        {
            Dts.TaskResult = (int)ScriptResults.Success;
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_9560e13f3ccd474984696163ed602485</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_9560e13f3ccd474984696163ed602485</msb:DisplayName>
		<msb:ProjectId>{F307AC7B-AA0F-4D28-996C-675C99596C5C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_9560e13f3ccd474984696163ed602485.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_9560e13f3ccd474984696163ed602485.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0DB35B23-C06B-4EDA-92C5-829664840452}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9560e13f3ccd474984696163ed602485</RootNamespace>
    <AssemblyName>ST_9560e13f3ccd474984696163ed602485</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_6.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9560e13f3ccd474984696163ed602485.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9560e13f3ccd474984696163ed602485.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_9560e13f3ccd474984696163ed602485.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANzv3FgAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAdiwA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACQsAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAfAwAAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABY
LAAAAAAAAEgAAAACAAUAxCAAAKgKAAABAAAAAAAAAGwrAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADYCKBAAAAoWbxEAAAoqHgIoEgAACioeAigTAAAKKq5+AQAA
BC0ecgEAAHDQAwAAAigUAAAKbxUAAApzFgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4D
AAAEKh4CKBcAAAoqLnMIAAAGgAMAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAgAMAACN+AADsAwAA7AQAACNTdHJpbmdzAAAAANgIAAB0AAAAI1VTAEwJAAAQAAAAI0dVSUQA
AABcCQAATAEAACNCbG9iAAAAAAAAAAIAAAFXHaABCQMAAAD6ATMAFgAAAQAAABsAAAAFAAAABgAA
AAkAAAABAAAAFwAAAAIAAAAQAAAAAgAAAAMAAAAEAAAAAQAAAAMAAAABAAAAAQAAAAAAGgMBAAAA
AAAGAN0B4QMGAGwC4QMGACkBzgMPAFUEAAAGAFYBjwMGAMABjwMGAKEBjwMGAFMCjwMGAP0BjwMG
ABYCjwMGAG0BjwMGAIgBkAIKADECyQIKAKgAyQIGAEkDQgMGAAwBzgMGALoEQgMGALEDAQQGAKED
egMOANwABAMOAD0BBAMOAMQAZQMGAPEA4QMKAPICyQIGAHMAQgMGAE8AQgMGAOAEjwMAAAAAJQAA
AAAAAQABAAEAEABaAwEAOQABAAEAAAAQAAgEZARFAAEAAwAAARAAkwRkBFkAAwAHAAMBAACsBAAA
PQAEAAoAEQBOA08AEQCYAFMAEQA/AFcABgYuAFsAVoCcBF4AVoB4AF4AUCAAAAAAhgBgAwYAAQBe
IAAAAACGGMEDBgABAGYgAAAAAIMYwQMGAAEAbiAAAAAAkwitA2IAAQCaIAAAAACTCIAAZwABAKEg
AAAAAJMIjABsAAEAqSAAAAAAlgjBBHIAAgCwIAAAAACGGMEDBgACALggAAAAAJEYxwN3AAIAAAAB
AIoCCQDBAwEAEQDBAwYAGQDBAwoAKQDBAxAAMQDBAxAAOQDBAxAAQQDBAxAASQDBAxAAUQDBAxAA
WQDBAxAAYQDBAxAAaQDBAwYAgQDBAwYAqQDBAxUAuQDBAwYAcQCkBBsAwQDNBAEAcQDBAwYAiQDB
AwYAyQBhACAAyQDcBCcAkQDBAywAsQDBAwYACAAUAEUACAAYAEoAKQBzALIALgALAIoALgATAJMA
LgAbALIALgAjALsALgArAOQALgAzAOQALgA7AOQALgBDALsALgBLAOoALgBTAOQALgBbAAEBQwBj
AEoASQBzALIAYQB7AEoAYwBrAEoAAwABAAQAAwAAALEDewAAAKAAgAAAAMUEhQACAAQAAwACAAUA
BQABAAYABQACAAcABwAEgAAAAQAAAJoYvmAAAAAAAAABAAAABAAAAAAAAAAAAAAAMwA2AAAAAAAL
AAAAAAAAAAAAAAA8AKoCAAAAAAQAAAAAAAAAAAAAADMAQgMAAAAAAAAAAAEAAAASBAAABQACAAAA
AAAAU1RfOTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYzZWQ2MDI0ODUAPE1vZHVsZT4AdmFsdWVfXwBt
c2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBW
U1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9y
QnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
TWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRh
c2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNU
Xzk1NjBlMTNmM2NjZDQ3NDk4NDY5NjE2M2VkNjAyNDg1LmRsbABTeXN0ZW0ARW51bQByZXNvdXJj
ZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU1RfOTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYzZWQ2MDI0ODUuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzk1NjBlMTNmM2Nj
ZDQ3NDk4NDY5NjE2M2VkNjAyNDg1LlByb3BlcnRpZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRz
AFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3Nl
bWJseQAAAAAAcVMAVABfADkANQA2ADAAZQAxADMAZgAzAGMAYwBkADQANwA0ADkAOAA0ADYAOQA2
ADEANgAzAGUAZAA2ADAAMgA0ADgANQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAABPpSCQ6Qh9Fn2wXsDScyoQABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEEIAAS
YQYAARJlEWkEIAASbQYgAgEOEm0It3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0D
BhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzk1NjBlMTNm
M2NjZDQ3NDk4NDY5NjE2M2VkNjAyNDg1AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTUAAEcB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5F
VCBGcmFtZXdvcmsgNAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABMLAAAAAAAAAAAAABmLAAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAWCwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAvmCaGAAAAQC+YJoYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwA5ADUANgAwAGUAMQAzAGYAMwBjAGMAZAA0ADcANAA5ADgANAA2ADkANgAxADYA
MwBlAGQANgAwADIANAA4ADUAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANgAyADkAOAAuADIANAA3ADYANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwA5ADUANgAwAGUAMQAzAGYAMwBjAGMAZAA0ADcANAA5ADgANAA2ADkANgAxADYAMwBl
AGQANgAwADIANAA4ADUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANQAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADkANQA2ADAAZQAxADMAZgAzAGMAYwBkADQANwA0ADkAOAA0ADYAOQA2
ADEANgAzAGUAZAA2ADAAMgA0ADgANQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA5ADUANgAwAGUAMQAzAGYAMwBjAGMAZAA0ADcANAA5ADgANAA2ADkANgAx
ADYAMwBlAGQANgAwADIANAA4ADUAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADYAMgA5ADgALgAyADQANwA2ADYAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMgA5ADgALgAyADQANwA2ADYAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAeDwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Set configuration through Invocation Handler"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{ba239300-d9b9-4590-b178-650942ee7b45}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set configuration through Invocation Handler"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
              SQLTask:SqlStatementSource="select value from ivh.run_paramvalue where run_id=? and parameter='api_config' "
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::cfg_tpl_jsonConfiguration" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::cfg_sla_RunID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B340B4C6-D495-4183-9A94-ED4ED108F674}"
          DTS:From="Package\Initialize - template\Get server configuration"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Initialize - template\Set configuration through Invocation Handler" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{D83D28FF-CA68-4A26-ADE2-CD4EF030CD93}"
          DTS:From="Package\Initialize - template\Set configuration through Invocation Handler"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Initialize - template\Initialize package configuration" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize SLA configuration"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DisableEventHandlers="True"
      DTS:DTSID="{FBEA6960-5EEE-4F7D-87E1-5BB9C61E2EDB}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize SLA configuration"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{AB7C0E84-BD72-4D2E-9163-8F158CC556D7}"
          DTS:EventID="0"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{2CBA883E-6406-4BC0-AE4F-72638D883F2A}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]\Log SLA property"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{755c7c96-d021-47fb-907f-7d4ff405e3a6}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log SLA property"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::cfg_sla_RunID]  +  ": SLA key [ComponentID] was set with value \"" +  @[User::cfg_sla_ComponentID] + "\". '"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
                  SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_CreateEnvironment',@source_type='PCK',@source_name='CreatePrepareEnvironment_Original.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run -1: SLA key [ComponentID] was set with value &quot;&quot;. '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7c98d941be6340a4afa5b23346e85fc7"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,User::cfg_tpl_jsonSLA,System::PackageName"
          ReadWriteVariables="User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerCatalog,User::cfg_sla_DatahandlerDataSource,User::cfg_sla_DatahandlerVersion,User::cfg_sla_PlatformCatalog,User::cfg_sla_PlatformDataSource,User::cfg_sla_PollEvery,User::cfg_sla_ProjectCatalog,User::cfg_sla_ProjectDataSource,User::cfg_sla_RunID,User::cfg_sla_TimeOutAfter">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig;
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Data;
using System.Reflection;
using System.Windows.Forms;

#endregion

namespace ST_7c98d941be6340a4afa5b23346e85fc7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetNonNullUserVariablesFor<SLA>("User::cfg_tpl_jsonSLA", "cfg_sla_");
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7c98d941be6340a4afa5b23346e85fc7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_7c98d941be6340a4afa5b23346e85fc7</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_7c98d941be6340a4afa5b23346e85fc7</msb:DisplayName>
		<msb:ProjectId>{2FE85E53-2960-4E7B-AF1B-D38BAF1E3336}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7c98d941be6340a4afa5b23346e85fc7.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Settings.get_Default():ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Sett" +
    "ings")]

namespace ST_7c98d941be6340a4afa5b23346e85fc7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7c98d941be6340a4afa5b23346e85fc7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7c98d941be6340a4afa5b23346e85fc7")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_7c98d941be6340a4afa5b23346e85fc7.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9CD66199-FB02-4B5C-9A30-C7FB7ED47B51}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7c98d941be6340a4afa5b23346e85fc7</RootNamespace>
    <AssemblyName>ST_7c98d941be6340a4afa5b23346e85fc7</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_6.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_7c98d941be6340a4afa5b23346e85fc7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAF812VYAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAPi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOgtAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
LgAAAAAAAEgAAAACAAUA0CEAABgMAAABAAAAAAAAABghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwA1AAAAAgAAEQIoFgAACnMXAAAKCgZycwAAcHKfAABwbwEAACve
CgYsBgZvGQAACtwCKBYAAAoWbxoAAAoqAAAAARAAAAIADAASHgAKAAAAAB4CKBsAAAoqtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMgDAAAjfgAANAQAALgF
AAAjU3RyaW5ncwAAAADsCQAAtAAAACNVUwCgCgAAEAAAACNHVUlEAAAAsAoAAGgBAAAjQmxvYgAA
AAAAAAACAAABVx2iAQkLAAAA+iUzABYAAAEAAAAeAAAABQAAAAYAAAAJAAAAAQAAABsAAAACAAAA
DwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAK
AN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUC
cAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAG
AAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAPkE3gQSAE0FIwUGAFEF
ugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAI
AAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAA
gxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACW
CAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACABAhAAAAAIYY
vAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8
AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4A
uQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A4QC8AZsA4QAIBaEA8QBdBRsA2QBlBV0AGQC8
ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbACMBLgAjACMBLgBjAEkBLgALALIALgATAPoALgAzAPoA
LgArACMBLgA7ACkBLgBDACMBLgBbAEABQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCtAAIAAQAD
AAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAATF7c5
AAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAA
AAAAAAAKAPUAAAAAAAMAAAAAAAAAAAAAAJIA3gQAAAAAAAAAAAEAAAB0BQAABQAEADEAqAAAAAAA
ADxNb2R1bGU+AFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2ZTg1ZmM3LmRsbABSZXNvdXJj
ZXMAU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTViMjMzNDZlODVmYzcuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2ZTg1ZmM3AFNjcmlwdFJl
c3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jl
c291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0
YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lz
dGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBB
c3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5
AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRU
YXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAERlbG9pdHRl
LlBpcGVsaW5lRnJhbWV3b3JrAERlbG9pdHRlU2NyaXB0AFNldE5vbk51bGxVc2VyVmFyaWFibGVz
Rm9yAERlbG9pdHRlLlBpcGVsaW5lRnJhbWV3b3JrLlBsYXRmb3JtQ29uZmlnAFNMQQBJRGlzcG9z
YWJsZQBEaXNwb3NlAHNldF9UYXNrUmVzdWx0AFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2
ZTg1ZmM3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwA3AGMAOQA4AGQA
OQA0ADEAYgBlADYAMwA0ADAAYQA0AGEAZgBhADUAYgAyADMAMwA0ADYAZQA4ADUAZgBjADcALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACtVAHMAZQByADoAOgBjAGYA
ZwBfAHQAcABsAF8AagBzAG8AbgBTAEwAQQAAEWMAZgBnAF8AcwBsAGEAXwAAAAAAvTMbIBvqz0y4
5OXuxM8GrgAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgA
EhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQg
ABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtCPkCOjYN6EsMBSABARJtBjAB
AgEODgQKARJ1BAcBEnFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTVi
MjMzNDZlODVmYzcAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzARAuAAAAAAAAAAAAAC4uAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAgLgAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQC3ORMXAAABALc5Exc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8ANwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYAYQA1AGIAMgAzADMANAA2AGUA
OAA1AGYAYwA3AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQAw
ADcALgAxADQANwA3ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYAYQA1AGIAMgAzADMANAA2AGUAOAA1
AGYAYwA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8ANwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYA
YQA1AGIAMgAzADMANAA2AGUAOAA1AGYAYwA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADcAYwA5ADgAZAA5ADQAMQBiAGUANgAzADQAMABhADQAYQBmAGEA
NQBiADIAMwAzADQANgBlADgANQBmAGMANwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA5ADAANwAuADEANAA3ADcANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADAANwAuADEANAA3ADcANQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABAPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{061e869f-2d99-422c-97dc-306996035bea}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\NotifySsisApi"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{28a19420-9699-4bb2-bfb9-930485d6086d}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="NotifySsisApi"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_7e16b314de4b4f208ea1b087f6566596"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using System.Collections;
using System.Collections.Generic;
using Deloitte.PipelineFramework.PlatformConfig;
#endregion

namespace ST_065500ea46124711b2237a3a9fbb2b8c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.UpdateApi(
                    code: (int)DeloitteScript.UpdateCodes.ComponentFinished,
                    message: deloitte.PackageName
                );
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_7e16b314de4b4f208ea1b087f6566596.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{CED7755E-802E-4832-8212-AE5EFAE0331F}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_065500ea46124711b2237a3a9fbb2b8c</RootNamespace><AssemblyName>ST_7e16b314de4b4f208ea1b087f6566596</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL"><SpecificVersion>False</SpecificVersion><HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath></Reference><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_065500ea46124711b2237a3a9fbb2b8c</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_065500ea46124711b2237a3a9fbb2b8c</msb:DisplayName>
		<msb:ProjectId>{C8A952E6-277A-4655-8AE6-661FAAD948D7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7e16b314de4b4f208ea1b087f6566596.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Settings.get_Default():ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Sett" +
    "ings")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_7e16b314de4b4f208ea1b087f6566596.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOcP4VYAAAAAAAAAAOAAAiELAQsAAA4AAAAIAAAAAAAA7i0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJQtAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
LQAAAAAAAEgAAAACAAUA0CEAAMQLAAABAAAAAAAAABghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwA2AAAAAgAAEQIoFgAACnMXAAAKCgYg6AMAAAZvGAAACm8ZAAAK
3goGLAYGbxoAAArcAigWAAAKFm8bAAAKKgAAARAAAAIADAATHwAKAAAAAB4CKBwAAAoqtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMADAAAjfgAALAQAAKwF
AAAjU3RyaW5ncwAAAADYCQAAdAAAACNVUwBMCgAAEAAAACNHVUlEAAAAXAoAAGgBAAAjQmxvYgAA
AAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAdAAAABQAAAAYAAAAJAAAAAQAAABwAAAACAAAA
DwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDI
AA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA
7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNvAwYABATxAwYAIQS6AAYAJgS6
AAYASgRwAgoAdgRgBAoAjwRgBAYApARvAw4AxgQUAQ4A6AQUARIAHQUCBQYARgW6AAAAAAABAAAA
AAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAAR
AAQACgARAH8BEwARAKwBFwARAPYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwBGwABAFgg
AAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAA
AAAAhhi8ARsAAgCnIAAAAACRGL8EiQACALwgAAAAAIYAGgIbAAIAECEAAAAAhhi8ARsAAgAAAAEA
NwI5ALwBWABBALwBWABJALwBWABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwBWACB
ALwBWACJALwBXQCRALwBGwCZALwBGwAJALwBGwChADgEYgChAFMEaQApALwBbgC5ALwBegDJALwB
GwARALwBGwDRALwBGwAZAPoEjQDhALwBmwDhACwFoQDhADwFpQDpAFIFGwDZAFoFXQAZALwBGwAI
ABQATgAIABgAUwApAJMAgAAuABsAIQEuACMAIQEuAGMARwEuAAsAsAAuABMA+AAuADMA+AAuACsA
IQEuADsAJwEuAEMAIQEuAFsAPgFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1AKsAAgABAAMAAwAA
AG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAABkXezIAAAAA
AADNAwAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAA
AAoA9QAAAAAAAwAAAAAAAAAAAAAAkgACBQAAAAAAAAAAAQAAAGkFAAAFAAQAAAAAAAA8TW9kdWxl
PgBTVF83ZTE2YjMxNGRlNGI0ZjIwOGVhMWIwODdmNjU2NjU5Ni5kbGwAUmVzb3VyY2VzAFNUXzA2
NTUwMGVhNDYxMjQ3MTFiMjIzN2EzYTlmYmIyYjhjLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0
TWFpbgBTVF8wNjU1MDBlYTQ2MTI0NzExYjIyMzdhM2E5ZmJiMmI4YwBTY3JpcHRSZXN1bHRzAG1z
Y29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0A
U3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZs
ZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlW
ZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF83
ZTE2YjMxNGRlNGI0ZjIwOGVhMWIwODdmNjU2NjU5NgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0
T2JqZWN0TW9kZWwAZ2V0X0R0cwBEZWxvaXR0ZS5QaXBlbGluZUZyYW1ld29yawBEZWxvaXR0ZVNj
cmlwdABnZXRfUGFja2FnZU5hbWUAVXBkYXRlQXBpAElEaXNwb3NhYmxlAERpc3Bvc2UAc2V0X1Rh
c2tSZXN1bHQAU1RfMDY1NTAwZWE0NjEyNDcxMWIyMjM3YTNhOWZiYjJiOGMuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAABxUwBUAF8AMAA2ADUANQAwADAAZQBhADQANgAxADIANAA3ADEA
MQBiADIAMgAzADcAYQAzAGEAOQBmAGIAYgAyAGIAOABjAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAA1eoDi5dJCkKHIibf77VhTQAIt3pcVhk04IkIiYRdzYCAzJED
BhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYR
FAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAA
AAAAAwAAAQQgABJtCPkCOjYN6EsMBSABARJtAyAADgUgAgEIDgQHARJxRwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
KAEAI1NUXzA2NTUwMGVhNDYxMjQ3MTFiMjIzN2EzYTlmYmIyYjhjAAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAALwt
AAAAAAAAAAAAAN4tAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQLQAAAAAAAAAAAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAezIZFwAAAQB7MhkXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAw
ADAAMAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADAANgA1ADUAMAAwAGUAYQA0ADYAMQAyADQANwAxADEAYgAyADIAMwA3AGEAMwBhADkAZgBi
AGIAMgBiADgAYwAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADkA
MQAzAC4AMQAyADkAMgAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADcAZQAxADYAYgAzADEANABkAGUANABiADQAZgAyADAAOABlAGEAMQBiADAAOAA3AGYANgA1ADYA
NgA1ADkANgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYA
aQBsAGUAbgBhAG0AZQAAAFMAVABfADcAZQAxADYAYgAzADEANABkAGUANABiADQAZgAyADAAOABl
AGEAMQBiADAAOAA3AGYANgA1ADYANgA1ADkANgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMA
dABOAGEAbQBlAAAAAABTAFQAXwAwADYANQA1ADAAMABlAGEANAA2ADEAMgA0ADcAMQAxAGIAMgAy
ADMANwBhADMAYQA5AGYAYgBiADIAYgA4AGMAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADUAOQAxADMALgAxADIAOQAyADMAAAAAAEgADwABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOQAxADMALgAxADIAOQAyADMAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAA8D0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set initialized to True"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Expression Task"
      DTS:DTSID="{02E32DFC-B276-444E-B647-F9DECAD250AC}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set initialized to True"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExpressionTask
          Expression="@[User::cfg_tpl_IsPackageSlaInitialized] = True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Timeout expired"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{39541e84-61a4-470b-a355-70a6b335987c}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Timeout expired">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Timeout expired\Log - Fail executable"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{88a1bb5a-eebf-48eb-aa68-49bb7ba7b0e6}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Timeout expired after " + (DT_WSTR, 16) @[User::cfg_sla_TimeOutAfter] + " seconds.'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_CreateEnvironment',@source_type='PCK',@source_name='CreatePrepareEnvironment_Original.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run 0: Timeout expired after 0 seconds.'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Timeout expired.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{F1A298F9-8923-45D9-A910-8A88AFC040CC}"
          DTS:EventID="0"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{BC2BDD01-BFF2-4AFE-B784-ADC728488199}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Timeout expired.EventHandlers[OnPostExecute]\Event - Fail executable"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{cae6b870-4ce0-4d7c-8a92-8c360eb77ada}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - Fail executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='fail',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Critical'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='fail',@source_id='', @level='Critical'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WAIT FOR Dependencies"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{920D1FA1-6C18-45C9-B06F-74795D2CB462}"
      DTS:EvalExpression="(! @cfg_tpl_depenciesChecked) &amp;&amp; (DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &gt; GETDATE())"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="WAIT FOR Dependencies">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\WAIT FOR Dependencies\Check dependencies"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5C213D05-9DA3-44EA-996A-0112775F2590}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check dependencies"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sqlDependencies"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="depenciesChecked"
                SQLTask:DtsVariableName="User::cfg_tpl_depenciesChecked" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{C35ABEB4-6B06-4930-A95E-BFBA4A7F0C9C}"
      DTS:From="Package\Initialize - template"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Check PRE-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{40266076-B1A2-4F46-975C-32FE79D2C30C}"
      DTS:From="Package\Initialize - specific"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Check PRE-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{4567822C-7114-46F8-A037-BBD2D95F869A}"
      DTS:From="Package\Check PRE-conditions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\WAIT FOR Dependencies" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{BDA5D580-B50A-4737-9D86-B155D8AF2440}"
      DTS:EvalOp="3"
      DTS:Expression="(DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &gt; GETDATE())"
      DTS:From="Package\WAIT FOR Dependencies"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Execute Feature" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{D51580DA-CCA2-4E45-9EF5-B9DEC88262D4}"
      DTS:From="Package\Execute Feature"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Check POST-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{C8FC3687-5BA3-4F35-84A2-13E3D4777799}"
      DTS:EvalOp="3"
      DTS:Expression="(DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &lt;= GETDATE())"
      DTS:From="Package\WAIT FOR Dependencies"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Timeout expired" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{63239ED7-9EF3-4A28-9978-DD09F0FCA544}"
      DTS:From="Package\Initialize SLA configuration"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Set initialized to True" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{C565E582-0C7C-4D6E-9CB7-5C1988A137DC}"
      DTS:From="Package\Set initialized to True"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Initialize - template" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{E1BDC8B0-B18E-472B-B72B-2A8135DA59BD}"
      DTS:From="Package\Check POST-conditions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Sequence Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{8910F97B-7F05-4760-A490-F7500ACE2706}"
      DTS:From="Package\Set initialized to True"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Initialize - specific" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{37D2276E-70B5-4EEA-B908-39845CF04FAD}"
      DTS:EventID="218076652"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{15630BCA-3337-45EB-AE56-6E518F563E87}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Event - Fail executable"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{1468C155-397A-459D-91AA-57906BAABE8F}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Event - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='fail',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Critical'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
              SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='fail',@source_id='', @level='Critical'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Log - Fail executable"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{C463CFB2-C9CF-4B41-8A3A-AA2CADCD4BD3}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::cfg_sla_RunID]  +  ": Failed executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_CreateEnvironment',@source_type='PCK',@source_name='CreatePrepareEnvironment_Original.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run -1: Failed executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{1FCCDB34-85B7-413E-BD2B-970337905029}"
      DTS:EventID="217598736"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{362B9033-4485-42C5-9498-2277612D9021}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Log - End executable"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{A062ED17-E76C-4AEF-8F3C-A88294273AD6}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - End executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='SUCCESS', @rowcount=" + (DT_WSTR, 16) @[User::varRowCount]  + ", @message = 'Run " + (DT_WSTR, 16) @[User::cfg_sla_RunID]  +  ": Completed executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_CreateEnvironment',@source_type='PCK',@source_name='CreatePrepareEnvironment_Original.dtsx', @source_id=null, @action='END', @status='SUCCESS', @rowcount=0, @message = 'Run -1: Completed executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPreExecute]"
      DTS:CreationName="OnPreExecute"
      DTS:DTSID="{EA6675CB-DDE4-4282-9A54-ECE59A93C2D7}"
      DTS:EventID="0"
      DTS:EventName="OnPreExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{AC5F78E6-03F3-4ADC-AFEA-599BBAEFFD58}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\Log - Start executable"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{87F02CC4-A3EB-432B-811A-885E68D85F1E}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Start executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='START', @status='SUCCESS', @message = 'Run " + (DT_WSTR, 16) @[User::cfg_sla_RunID]  +  ": Starting executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FF6D60A5-FE7A-49C7-AD28-D073CA7E379B}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_CreateEnvironment',@source_type='PCK',@source_name='CreatePrepareEnvironment_Original.dtsx', @source_id=null, @action='START', @status='SUCCESS', @message = 'Run -1: Starting executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="211,55"
          Size="211,98"
          Id="Package\Check POST-conditions"
          TopLeft="648.499999888241,1396.66666488449" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,55"
          Size="205,98"
          Id="Package\Check PRE-conditions"
          TopLeft="635.5,481.5" />
        <NodeLayout
          Size="157,42"
          Id="Package\Execute Feature\Create Database"
          TopLeft="127.75,90.75" />
        <NodeLayout
          Size="155,42"
          Id="Package\Execute Feature\Create Schemas"
          TopLeft="114.666666666667,236.222222222222" />
        <NodeLayout
          Size="168,42"
          Id="Package\Execute Feature\Create User Tables"
          TopLeft="105.083333333333,301.666666666667" />
        <NodeLayout
          Size="172,59"
          Id="Package\Execute Feature\Decode header into key-value pairs"
          TopLeft="326,82" />
        <NodeLayout
          Size="141,43"
          Id="Package\Execute Feature\Make backup"
          TopLeft="380.499989531934,371.666656980913" />
        <NodeLayout
          Size="184,42"
          Id="Package\Execute Feature\Set extended properties\Decode key-value pair"
          TopLeft="55,20" />
        <NodeLayout
          Size="236,42"
          Id="Package\Execute Feature\Set extended properties\execute sp_addextendedproperty"
          TopLeft="27.1428571428571,86.4285714285713" />
        <EdgeLayout
          Id="Package\Execute Feature\Set extended properties.PrecedenceConstraints[Constraint]"
          TopLeft="146.071428571429,62">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.4285714285713"
              Start="0,0"
              End="0,16.9285714285713">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.9285714285713" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="273,151"
          Size="273,194"
          Id="Package\Execute Feature\Set extended properties"
          TopLeft="538,10" />
        <NodeLayout
          Size="200,42"
          Id="Package\Execute Feature\Set initial catalog 'master'"
          TopLeft="105,15" />
        <NodeLayout
          Size="245,42"
          Id="Package\Execute Feature\Set initial catalog to project catalog"
          TopLeft="76,162" />
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint]"
          TopLeft="202.375,132.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.25"
              Start="0,0"
              End="0,21.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint 1]"
          TopLeft="205.625,57">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.75"
              Start="0,0"
              End="0,26.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint 2]"
          TopLeft="190.625,278.222222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.4444444444441"
              Start="0,0"
              End="0,15.9444444444441">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.9444444444441" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint 3]"
          TopLeft="195.333333333333,204">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.2222222222224"
              Start="0,0"
              End="0,24.7222222222224">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.7222222222224" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint 4]"
          TopLeft="284.75,111.625">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="41.25,0"
              Start="0,0"
              End="33.75,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.75,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint 5]"
          TopLeft="498,109.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40,0"
              Start="0,0"
              End="32.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint 6]"
          TopLeft="674.666666666667,204">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-190.166677134732,167.666656980913"
              Start="0,0"
              End="-190.166677134732,160.166656980913">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,105.707812592449" />
                  <mssgle:CubicBezierSegment
                    Point1="0,105.707812592449"
                    Point2="0,109.707812592449"
                    Point3="-4,109.707812592449" />
                  <mssgle:LineSegment
                    End="-186.166677134732,109.707812592449" />
                  <mssgle:CubicBezierSegment
                    Point1="-186.166677134732,109.707812592449"
                    Point2="-190.166677134732,109.707812592449"
                    Point3="-190.166677134732,113.707812592449" />
                  <mssgle:LineSegment
                    End="-190.166677134732,160.166656980913" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint 8]"
          TopLeft="189.083333333333,343.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="239.749989531934,27.9999903142465"
              Start="0,0"
              End="239.749989531934,20.4999903142465">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.6114949550158" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.6114949550158"
                    Point2="0,16.6114949550158"
                    Point3="4,16.6114949550158" />
                  <mssgle:LineSegment
                    End="235.749989531934,16.6114949550158" />
                  <mssgle:CubicBezierSegment
                    Point1="235.749989531934,16.6114949550158"
                    Point2="239.749989531934,16.6114949550158"
                    Point3="239.749989531934,20.6114949550158" />
                  <mssgle:LineSegment
                    End="239.749989531934,20.4999903142465" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="849,469"
          Size="849,512"
          Id="Package\Execute Feature"
          TopLeft="322,850" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="228,199"
          Size="228,241"
          Id="Package\Initialize - specific"
          TopLeft="838,160.571428571429" />
        <NodeLayout
          Size="192,42"
          Id="Package\Initialize - template\Get server configuration"
          TopLeft="41,28" />
        <NodeLayout
          Size="225,42"
          Id="Package\Initialize - template\Initialize package configuration"
          TopLeft="29,201" />
        <NodeLayout
          Size="192,58"
          Id="Package\Initialize - template\Set configuration through Invocation Handler"
          TopLeft="43,111" />
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint]"
          TopLeft="138,70">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint 1]"
          TopLeft="140.25,169">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="293,298"
          Size="293,341"
          Id="Package\Initialize - template"
          TopLeft="328,170.142857142857" />
        <NodeLayout
          Size="204,42"
          Id="Package\Initialize SLA configuration"
          TopLeft="648,41" />
        <NodeLayout
          Size="139,42"
          Id="Package\Sequence Container\NotifySsisApi"
          TopLeft="36,24" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,121"
          Size="205,164"
          Id="Package\Sequence Container"
          TopLeft="654.999999925494,1533.46666637222" />
        <NodeLayout
          Size="179,42"
          Id="Package\Set initialized to True"
          TopLeft="687,110" />
        <NodeLayout
          Size="176,42"
          Id="Package\Timeout expired\Log - Fail executable"
          TopLeft="35,35" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="241,131"
          Size="241,174"
          Id="Package\Timeout expired"
          TopLeft="994,624" />
        <NodeLayout
          Size="175,42"
          Id="Package\WAIT FOR Dependencies\Check dependencies"
          TopLeft="49.5714285714286,29.8571428571428" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="270,127"
          Size="270,170"
          Id="Package\WAIT FOR Dependencies"
          TopLeft="610.928571428572,622.535714285714" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="621,396.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84.1666666666666,85.357142857143"
              Start="0,0"
              End="84.1666666666666,77.857142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="80.1666666666666,0" />
                  <mssgle:CubicBezierSegment
                    Point1="80.1666666666666,0"
                    Point2="84.1666666666666,0"
                    Point3="84.1666666666666,4" />
                  <mssgle:LineSegment
                    End="84.1666666666666,77.857142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="952,401.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-181.166666666667,79.928571428571"
              Start="0,0"
              End="-181.166666666667,72.428571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5857419444057" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.5857419444057"
                    Point2="0,47.5857419444057"
                    Point3="-4,47.5857419444057" />
                  <mssgle:LineSegment
                    End="-177.166666666667,47.5857419444057" />
                  <mssgle:CubicBezierSegment
                    Point1="-177.166666666667,47.5857419444057"
                    Point2="-181.166666666667,47.5857419444057"
                    Point3="-181.166666666667,51.5857419444057" />
                  <mssgle:LineSegment
                    End="-181.166666666667,72.428571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="741.964285714286,579.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.0357142857141"
              Start="0,0"
              End="0,35.5357142857141">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5357142857141" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="746.214285714286,792.535714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.464285714286"
              Start="0,0"
              End="0,49.964285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.964285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,16.982142857143,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="750.24999994412,1362">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.66666488449"
              Start="0,0"
              End="0,27.16666488449">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.16666488449" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="880.928571428572,709.267857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="113.071428571428,0"
              Start="0,0"
              End="105.571428571428,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="105.571428571428,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="44.785714285714,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="750,83">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="26.5,27"
              Start="0,0"
              End="26.5,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.5"
                    Point2="0,13.5"
                    Point3="4,13.5" />
                  <mssgle:LineSegment
                    End="22.5,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="22.5,13.5"
                    Point2="26.5,13.5"
                    Point3="26.5,17.5" />
                  <mssgle:LineSegment
                    End="26.5,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="687,131">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-66,154.142857142857"
              Start="0,0"
              End="-58.5,154.142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-35.415061295972,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-35.415061295972,0"
                    Point2="-39.415061295972,0"
                    Point3="-39.415061295972,4" />
                  <mssgle:LineSegment
                    End="-39.415061295972,150.142857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.415061295972,150.142857142857"
                    Point2="-39.415061295972,154.142857142857"
                    Point3="-43.415061295972,154.142857142857" />
                  <mssgle:LineSegment
                    End="-58.5,154.142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="755.749999906868,1494.66666488449">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.80000148773"
              Start="0,0"
              End="0,31.30000148773">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.30000148773" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="866,131">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="86,29.571428571429"
              Start="0,0"
              End="86,22.071428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="82,0" />
                  <mssgle:CubicBezierSegment
                    Point1="82,0"
                    Point2="86,0"
                    Point3="86,4" />
                  <mssgle:LineSegment
                    End="86,22.071428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package.EventHandlers[OnError]\Event - Fail executable"
          TopLeft="81,159" />
        <NodeLayout
          Size="176,42"
          Id="Package.EventHandlers[OnError]\Log - Fail executable"
          TopLeft="81,81" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="178,42"
          Id="Package.EventHandlers[OnPostExecute]\Log - End executable"
          TopLeft="100,92" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="183,42"
          Id="Package.EventHandlers[OnPreExecute]\Log - Start executable"
          TopLeft="52,58" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Check POST-conditions.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="188,42"
          Id="Package\Check POST-conditions.EventHandlers[OnPostExecute]\Event - End executable"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Check PRE-conditions.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="192,42"
          Id="Package\Check PRE-conditions.EventHandlers[OnPostExecute]\Event - Start executable"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="160,42"
          Id="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]\Log SLA property"
          TopLeft="28,21" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Timeout expired.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Timeout expired.EventHandlers[OnPostExecute]\Event - Fail executable"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>