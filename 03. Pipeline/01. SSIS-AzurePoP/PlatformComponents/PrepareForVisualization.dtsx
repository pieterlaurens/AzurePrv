<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/13/2014 4:11:55 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NLLT005553"
  DTS:CreatorName="NL\PBaljon"
  DTS:DelayValidation="True"
  DTS:DTSID="{10CF49FA-2263-450D-853F-326431F9D37E}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.98"
  DTS:LocaleID="1043"
  DTS:ObjectName="PrepareForVisualization"
  DTS:PackageType="5"
  DTS:VersionBuild="333"
  DTS:VersionGUID="{A67D4A75-723B-461A-9732-FA22B3BF00EE}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DatahandlerDB]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{39C32121-97B7-4C4B-88FA-49D48FFA341C}"
      DTS:ObjectName="DatahandlerDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_DatahandlerCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_DatahandlerDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=nlams00859;Initial Catalog=prv_dev_dth;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{6DBCC222-257C-4960-A54B-7944C0A91E99}"
      DTS:ObjectName="DatahandlerDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_DatahandlerCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_DatahandlerDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=nlams00859;Initial Catalog=prv_dev_dth;Integrated Security=True;Application Name=SSIS-PrepareForVisualization-{6DBCC222-257C-4960-A54B-7944C0A91E99}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{DB6E688A-83AC-464F-8705-0C07FA62A564}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::testOutputReport]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1043"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\PrvAnalytics\data\TestSuite\0-PrepareForVisualization_report.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="api"
              DTS:DTSID="{12BFFDBC-35DE-45FC-9804-A403D4D7DC97}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="10"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="test_result"
              DTS:DTSID="{F5E3A7CC-AE87-4F0D-98D0-E7D283A7C6AC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="test_name"
              DTS:DTSID="{D21159E2-898F-4E34-8D40-32AFE40103E4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="1000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="test_comment"
              DTS:DTSID="{AA81C074-9DEB-40C2-953E-FDCE53A33C18}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PlatformDB]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{024765D8-5311-4FD6-AC51-730FDA44254C}"
      DTS:ObjectName="PlatformDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_PlatformCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_PlatformDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=nlams00859;Initial Catalog=prv_dev_inh;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DelayValidation="True"
      DTS:DTSID="{F755FE3A-535C-4562-A461-C6C6DDA895EB}"
      DTS:ObjectName="PlatformDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_PlatformCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_PlatformDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=nlams00859;Initial Catalog=prv_dev_inh;Integrated Security=True;Application Name=SSIS-PrepareForVisualization-{F755FE3A-535C-4562-A461-C6C6DDA895EB}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProjectDB]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{224891D1-58DA-42E2-B7C3-C87943A04059}"
      DTS:ObjectName="ProjectDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_ProjectCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_ProjectDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=nlams00859;Initial Catalog=prv_prj_deploytest;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProjectDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DelayValidation="True"
      DTS:DTSID="{E08C71D0-345B-44AB-A3FE-665CC772969E}"
      DTS:ObjectName="ProjectDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_ProjectCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_ProjectDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=nlams00859;Initial Catalog=prv_prj_deploytest;Integrated Security=True;Application Name=SSIS-PrepareForVisualization-{E08C71D0-345B-44AB-A3FE-665CC772969E}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{93F2AFD6-39C2-463A-B8D1-5F46F1B61590}"
      DTS:ObjectName="IN_DEBUG_MODE">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{170273BB-14F4-498F-A3BF-DD3E55EEEDB4}"
      DTS:ObjectName="JSON_CONFIG">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">{"ComponentParams":[{"PackageName":"PrepareForVisualization"}]}</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{33A0A8B6-C099-4FC6-A555-D45D6961E396}"
      DTS:ObjectName="JSON_SLA">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">{"ComponentID": "D0E4F952-663C-42CA-89E8-318C931D42A9" , "RunID": "-1" , "PollEvery": "00:00:10" , "TimeOutAfter": "3600" , "PlatformDataSource": "nlams00859" , "PlatformCatalog": "prv_dev_inh" , "DatahandlerDataSource": "nlams00859" , "DatahandlerCatalog": "prv_dev_dth" , "DatahandlerVersion": "latest" , "ProjectDataSource":"nlams00859" , "ProjectCatalog":"prv_prj_deploytest" }</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{46CC254A-0411-4557-BF57-FA415123B299}"
      DTS:ObjectName="RUN_ID">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D3E2C7AD-A24A-44A3-94FF-CAA8A414E9F6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_ComponentJSON">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7CEAD29D-C7F3-4519-B233-1CC521BBB7C1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_ComponentParams">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{56949768-DD4D-444F-9B4E-0A9B536422C9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_LongListFilters">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{44F02429-3A50-4C75-B520-40C649EB3766}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_NameOfApi">
      <DTS:VariableValue
        DTS:DataType="8">CreateLandscape</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{90340B4B-1B06-49A3-91F3-184B89DA9CE4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_ProjectType">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AD5C1D97-13A8-4DC6-A7B2-07F4AA837530}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ComponentID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C051C8FA-608E-465E-8523-FA7DF35B67DB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_dev_dth</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A5E9D6B8-C6EE-4A34-9A34-608DD2384A75}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerDataSource">
      <DTS:VariableValue
        DTS:DataType="8">nlams00859</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2C998D73-AB9E-40B1-98CF-91EEF95AA029}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerVersion">
      <DTS:VariableValue
        DTS:DataType="8">dbo</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{58D456BA-7F0E-4F56-85D6-E8BCC85FFE4D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PlatformCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_dev_inh</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C8138810-316A-437E-8FB5-65A9AA372B8D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PlatformDataSource">
      <DTS:VariableValue
        DTS:DataType="8">nlams00859</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7DAD471B-88D5-44EC-92B7-5A799E768278}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PollEvery">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C868334A-0F17-40B2-A9F2-D84A8468A106}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ProjectCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_prj_deploytest</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D9D411F2-B0BC-4CDA-AA76-85EE135F948B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ProjectDataSource">
      <DTS:VariableValue
        DTS:DataType="8">nlams00859</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A7E97659-AC1F-468D-B243-DB915352A227}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_RunID">
      <DTS:VariableValue
        DTS:DataType="3">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02D4905C-C211-4DFC-B2F9-01CDB9EE4674}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_TimeOutAfter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2ADF3AAE-5EC8-4C61-AB78-368C32189B80}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMPlatformDB">
      <DTS:VariableValue
        DTS:DataType="8">PlatformDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E5D2F4BD-A3B5-43AF-9692-1B09A1851C4A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_DBName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F61809FF-BCC0-41AD-BCA9-A17DAF81CB58}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_DBServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{82D2FC52-B1F9-4735-AE80-64C3F40D7FBA}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_depenciesChecked">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{750D0F0B-BAF2-4063-8C33-4377068ECAD8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_EventLog">
      <DTS:VariableValue
        DTS:DataType="8">Application</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B56D8EF4-9EC6-48B1-8640-7A1EFD4F35C3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_Feature">
      <DTS:VariableValue
        DTS:DataType="8">PrepareForVisualization</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{42286E65-DD65-46E5-B232-FF0529FA09ED}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_IsPackageSlaInitialized">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1C926029-EBCE-4C89-85B6-BB65C6A4578D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_jsonConfiguration">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E023B224-3521-4CD7-9F75-28F0C05FEC46}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::JSON_SLA]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_jsonSLA">
      <DTS:VariableValue
        DTS:DataType="8">{"ComponentID": "D0E4F952-663C-42CA-89E8-318C931D42A9" , "RunID": "-1" , "PollEvery": "00:00:10" , "TimeOutAfter": "3600" , "PlatformDataSource": "nlams00859" , "PlatformCatalog": "prv_dev_inh" , "DatahandlerDataSource": "nlams00859" , "DatahandlerCatalog": "prv_dev_dth" , "DatahandlerVersion": "latest" , "ProjectDataSource":"nlams00859" , "ProjectCatalog":"prv_prj_deploytest" }</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E0C88328-3889-4F27-B4A6-5ABD466FF7A4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_Pipeline">
      <DTS:VariableValue
        DTS:DataType="8">Longlist</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{202CC11A-388E-49D2-9CD9-74B579BDA2D6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DECLARE @l TINYINT&#xA;SET @l = (SELECT &#xA;&#x9;&#x9;&#x9;CASE WHEN last_log_backup_lsn IS NULL THEN 0&#xA;&#x9;&#x9;&#x9;&#x9;ELSE 1 END AS log_backup_possible&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;sys.database_recovery_status&#xA;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;database_id = DB_ID('&quot;+ @[User::cfg_sla_ProjectCatalog] +&quot;'))&#xA;&#xA;IF(@l=1)&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;BACKUP DATABASE &quot;+ @[User::cfg_sla_ProjectCatalog] +&quot; TO DISK = '&quot;+ @[User::cfg_sla_ProjectCatalog] +&quot;.bak' WITH DIFFERENTIAL&#xA;&#x9;END&#xA;ELSE&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;BACKUP DATABASE &quot;+ @[User::cfg_sla_ProjectCatalog] +&quot; TO DISK = '&quot;+ @[User::cfg_sla_ProjectCatalog] +&quot;.bak'&#xA;&#x9;END&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlCreateBackup">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE @l TINYINT
SET @l = (SELECT 
			CASE WHEN last_log_backup_lsn IS NULL THEN 0
				ELSE 1 END AS log_backup_possible
		FROM
			sys.database_recovery_status
		WHERE
			database_id = DB_ID('prv_prj_deploytest'))

IF(@l=1)
	BEGIN
		BACKUP DATABASE prv_prj_deploytest TO DISK = 'prv_prj_deploytest.bak' WITH DIFFERENTIAL
	END
ELSE
	BEGIN
		BACKUP DATABASE prv_prj_deploytest TO DISK = 'prv_prj_deploytest.bak'
	END
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{66BBEC2B-40C4-4FD2-8407-6EEF7D333E73}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;IF OBJECT_ID('dbo.FACT_POINTS_TO_PLOT_1', 'V') IS NOT NULL DROP VIEW dbo.[FACT_POINTS_TO_PLOT_1]&#xA;GO&#xA;CREATE VIEW [dbo].[FACT_POINTS_TO_PLOT_1] AS&#xA;SELECT NEWID() AS UniqueKey_FK, * FROM&#xA;&#x9;(SELECT DISTINCT&#xA;&#x9;&#x9;dense_rank() over (order by node_score_series_group) AS LandscapeOverlay_ID&#xA;&#x9;&#x9;, node_score_series_key AS SeriesToPlot_NAME&#xA;&#x9;&#x9;, node_score_series_group AS SeriesToPlot_TYPE&#xA;&#x9;&#x9;, n.node_key AS PointsToPlot_ID&#xA;&#x9;&#x9;, np.node_x AS PointX&#xA;&#x9;&#x9;, np.node_y AS PointY&#xA;&#x9;&#x9;, npn.Size AS PointsToPlot_Value1&#xA;&#x9;&#x9;, nsn.[Weight] AS PointsToPlot_Value2&#xA;&#x9;&#x9;, nsn.[Relevance] AS PointsToPlot_Value3&#xA;&#x9;&#x9;, isnull(npn.[Trend value],1) AS PointsToPlot_Value5&#xA;&#x9;&#x9;&quot;+ @[User::sqlPart_SelectColumns] +&quot;&#xA;&#x9;&#x9;, nps.[High Level Label] AS PointsToPlot_Label1&#xA;&#x9;&#x9;, nps.[Extended label] AS PointsToPlot_Label2&#xA;&#x9;&#x9;, nps.[Technology Class] AS PointsToPlot_Label3&#xA;&#x9;&#x9;--, nps.[Label] AS PointsToPlot_Label4&#xA;&#x9;&#x9;, nsn.[Prose] as PointsToPlot_Label4&#xA;&#x9;&#x9;, nps.[High Level Label] AS PointsToPlot_Attribute1&#xA;&#x9;&#x9;, nps.[Extended label] AS PointsToPlot_Attribute2&#xA;&#x9;&#x9;, nps.[Trend] AS PointsToPlot_Attribute3&#xA;&#x9;&#x9;, 1 AS DummyMeasure&#xA;&#x9;FROM&#xA;&#x9;&#x9;ls_node AS n LEFT OUTER JOIN&#xA;&#x9;&#x9;ls_node_position np ON np.node_key=n.node_key LEFT OUTER JOIN&#xA;&#x9;&#x9;-----------------------------------------&#xA;&#x9;&#x9;-- Numeric properties&#xA;&#x9;&#x9;(select&#xA;&#x9;&#x9;&#x9;node_key&#xA;&#x9;&#x9;&#x9;, [Size],[Trend value]&#xA;&#x9;&#x9;from&#x9;&#xA;&#x9;&#x9;&#x9;[dbo].[ls_node_property_numeric]&#xA;&#x9;&#x9;pivot(&#xA;&#x9;&#x9;&#x9;max(node_property_value) for [node_property_type] in ([Size],[Trend value])&#xA;&#x9;&#x9;&#x9;) pvt&#xA;&#x9;&#x9;) npn on npn.node_key=n.node_key LEFT OUTER JOIN&#xA;&#x9;&#x9;-----------------------------------------&#xA;&#x9;&#x9;-- String properties&#xA;&#x9;&#x9;(select&#xA;&#x9;&#x9;&#x9;node_key&#xA;&#x9;&#x9;&#x9;, [Label],[Extended Label], [High Level Label],[Technology Class],[Trend]&#xA;&#x9;&#x9;from&#x9;&#xA;&#x9;&#x9;&#x9;[dbo].[ls_node_property_str]&#xA;&#x9;&#x9;pivot(&#xA;&#x9;&#x9;&#x9;max(node_property_value) for [node_property_type] in ([Label],[Extended Label], [High Level Label],[Technology Class],[Trend])&#xA;&#x9;&#x9;&#x9;) pvt&#xA;&#x9;&#x9;) nps on nps.node_key=n.node_key LEFT OUTER JOIN&#xA;&#x9;&#x9;-----------------------------------------&#xA;&#x9;&#x9;-- Numeric scores&#xA;&#x9;&#x9;(select&#xA;&#x9;&#x9;&#x9;node_key&#xA;&#x9;&#x9;&#x9;, 'All Classes' as node_score_series_group&#xA;&#x9;&#x9;&#x9;, 'All types' as node_score_series_key&#xA;&#x9;&#x9;&#x9;, 0.001 as [Weight]&#xA;&#x9;&#x9;&#x9;,1.0 as [Relevance]&#xA;&#x9;&#x9;&#x9;, '' as [Prose]&#xA;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;ls_node&#xA;&#x9;&#x9;union all&#xA;&#x9;&#x9;select n.node_key, n.node_score_series_group, n.node_score_series_key&#xA;&#x9;&#x9;&#x9;, n.[Weight],n.[Relevance], s.[Prose]&#xA;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;(select&#xA;&#x9;&#x9;&#x9;&#x9;node_key, node_score_series_group, node_score_series_key&#xA;&#x9;&#x9;&#x9;&#x9;, [Weight],[Relevance]&#xA;&#x9;&#x9;&#x9;from&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;[dbo].[ls_node_score_numeric]&#xA;&#x9;&#x9;&#x9;pivot(&#xA;&#x9;&#x9;&#x9;&#x9;max(node_score_value) for [node_score_group] in ([Weight],[Relevance])&#xA;&#x9;&#x9;&#x9;&#x9;) pvt&#xA;&#x9;&#x9;&#x9;) n LEFT OUTER JOIN&#xA;&#x9;&#x9;&#x9;(select&#xA;&#x9;&#x9;&#x9;&#x9;node_key, node_score_series_group, node_score_series_key&#xA;&#x9;&#x9;&#x9;&#x9;, node_score_value as [Prose]&#xA;&#x9;&#x9;&#x9;from&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;[dbo].[ls_node_score_str]&#xA;&#x9;&#x9;&#x9;) s ON s.node_key=n.node_key and s.[node_score_series_key]=n.[node_score_series_key]&#xA;&#x9;&#x9;-----------------------------------------&#xA;&#x9;&#x9;-- Custom metric profiles:&#xA;&#x9;&#x9;union all&#xA;&#x9;&#x9;select&#xA;&#x9;&#x9;&#x9;node_key, node_score_series_group, node_score_series_key&#xA;&#x9;&#x9;&#x9;, [Weight],[Relevance], CONCAT(node_score_series_key,' accounts for ',cast([Relevance] as int),' patents.') as [Prose]&#xA;&#x9;&#x9;from&#x9;&#xA;&#x9;&#x9;&#x9;[custom].[ls_node_score_numeric]&#xA;&#x9;&#x9;pivot(&#xA;&#x9;&#x9;&#x9;max(node_score_value) for [node_score_group] in ([Weight],[Relevance])&#xA;&#x9;&#x9;&#x9;) pvt&#xA;&#x9;&#x9;--order by node_key, node_score_series_group&#xA;&#x9;&#x9;) nsn on nsn.node_key=n.node_key&quot;+&#xA;&#x9;&#x9;(LEN( @[User::sqlPart_PivotColumns] ) &gt; 0 ? &quot; LEFT OUTER JOIN (&#xA;&#xA;&#x9;&#x9;-----------------------------------------&#xA;&#x9;&#x9;-- Custom hotness&#xA;&#xA;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;node_key&#xA;&#x9;&#x9;&#x9;&#x9;, &quot;+@[User::sqlPart_PivotColumns]+&quot;&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;[custom].[ls_node_property_numeric]&#xA;&#x9;&#x9;&#x9;pivot(&#xA;&#x9;&#x9;&#x9;&#x9;max(node_property_value) for [node_property_type] in (&quot;+ @[User::sqlPart_PivotColumns] +&quot;)&#xA;&#x9;&#x9;&#x9;&#x9;) pvt&#xA;&#x9;&#x9;) chn on chn.node_key = n.node_key&quot;:&quot;&quot;)+&quot;&#xA;&#xA;&#x9;) a&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlCreateFactsPointsToPlot">
      <DTS:VariableValue
        DTS:DataType="8">IF OBJECT_ID('dbo.FACT_POINTS_TO_PLOT_1', 'V') IS NOT NULL DROP VIEW dbo.[FACT_POINTS_TO_PLOT_1]
GO
CREATE VIEW [dbo].[FACT_POINTS_TO_PLOT_1] AS
SELECT NEWID() AS UniqueKey_FK, * FROM
	(SELECT DISTINCT
		dense_rank() over (order by node_score_series_group) AS LandscapeOverlay_ID
		, node_score_series_key AS SeriesToPlot_NAME
		, node_score_series_group AS SeriesToPlot_TYPE
		, n.node_key AS PointsToPlot_ID
		, np.node_x AS PointX
		, np.node_y AS PointY
		, npn.Size AS PointsToPlot_Value1
		, nsn.[Weight] AS PointsToPlot_Value2
		, nsn.[Relevance] AS PointsToPlot_Value3
		, isnull(npn.[Trend value],1) AS PointsToPlot_Value5
		
		, nps.[High Level Label] AS PointsToPlot_Label1
		, nps.[Extended label] AS PointsToPlot_Label2
		, nps.[Technology Class] AS PointsToPlot_Label3
		--, nps.[Label] AS PointsToPlot_Label4
		, nsn.[Prose] as PointsToPlot_Label4
		, nps.[High Level Label] AS PointsToPlot_Attribute1
		, nps.[Extended label] AS PointsToPlot_Attribute2
		, nps.[Trend] AS PointsToPlot_Attribute3
		, 1 AS DummyMeasure
	FROM
		ls_node AS n LEFT OUTER JOIN
		ls_node_position np ON np.node_key=n.node_key LEFT OUTER JOIN
		-----------------------------------------
		-- Numeric properties
		(select
			node_key
			, [Size],[Trend value]
		from	
			[dbo].[ls_node_property_numeric]
		pivot(
			max(node_property_value) for [node_property_type] in ([Size],[Trend value])
			) pvt
		) npn on npn.node_key=n.node_key LEFT OUTER JOIN
		-----------------------------------------
		-- String properties
		(select
			node_key
			, [Label],[Extended Label], [High Level Label],[Technology Class],[Trend]
		from	
			[dbo].[ls_node_property_str]
		pivot(
			max(node_property_value) for [node_property_type] in ([Label],[Extended Label], [High Level Label],[Technology Class],[Trend])
			) pvt
		) nps on nps.node_key=n.node_key LEFT OUTER JOIN
		-----------------------------------------
		-- Numeric scores
		(select
			node_key
			, 'All Classes' as node_score_series_group
			, 'All types' as node_score_series_key
			, 0.001 as [Weight]
			,1.0 as [Relevance]
			, '' as [Prose]
		from
			ls_node
		union all
		select n.node_key, n.node_score_series_group, n.node_score_series_key
			, n.[Weight],n.[Relevance], s.[Prose]
		from
			(select
				node_key, node_score_series_group, node_score_series_key
				, [Weight],[Relevance]
			from	
				[dbo].[ls_node_score_numeric]
			pivot(
				max(node_score_value) for [node_score_group] in ([Weight],[Relevance])
				) pvt
			) n LEFT OUTER JOIN
			(select
				node_key, node_score_series_group, node_score_series_key
				, node_score_value as [Prose]
			from	
				[dbo].[ls_node_score_str]
			) s ON s.node_key=n.node_key and s.[node_score_series_key]=n.[node_score_series_key]
		-----------------------------------------
		-- Custom metric profiles:
		union all
		select
			node_key, node_score_series_group, node_score_series_key
			, [Weight],[Relevance], CONCAT(node_score_series_key,' accounts for ',cast([Relevance] as int),' patents.') as [Prose]
		from	
			[custom].[ls_node_score_numeric]
		pivot(
			max(node_score_value) for [node_score_group] in ([Weight],[Relevance])
			) pvt
		--order by node_key, node_score_series_group
		) nsn on nsn.node_key=n.node_key

	) a
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E5BF7218-A67E-4951-8B20-B10D989A2CBE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT nlh.checkEvents(ivh.getDependencies('&quot; + @[User::cfg_sla_ComponentID]  + &quot;'), 'complete') AS depenciesChecked&#xA; IF ( SELECT nlh.checkEvents(ivh.getDependencies('&quot; + @[User::cfg_sla_ComponentID]  + &quot;'), 'complete')) = 0&#xA;&#x9;WAITFOR DELAY '&quot;+ @[User::cfg_sla_PollEvery]   +&quot;'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlDependencies">
      <DTS:VariableValue
        DTS:DataType="8">SELECT nlh.checkEvents(ivh.getDependencies(''), 'complete') AS depenciesChecked
 IF ( SELECT nlh.checkEvents(ivh.getDependencies(''), 'complete')) = 0
	WAITFOR DELAY ''</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{11BA9D2B-DDFF-4242-ABBF-F900405CE08C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlPart_PivotColumns">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9315A171-6CF4-4FA1-A9C2-CD9843C9D19D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlPart_SelectColumns">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{91EB9BDF-79BA-4C59-BF37-0C02CAFAE248}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::testParentDir] + &quot;\\bin\\TestSuite\\PipelineTestSuite.exe&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="testExecutable">
      <DTS:VariableValue
        DTS:DataType="8">C:\PrvAnalytics\bin\TestSuite\PipelineTestSuite.exe</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{455A5A91-2639-47B7-91FC-DC5404DF9CD3}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::testParentDir] + &quot;\\data\\TestSuite\\&quot; +(DT_STR,10,1252) @[User::varRunId] + &quot;-&quot;+ @[System::PackageName]  +&quot;.json&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="testInputJson">
      <DTS:VariableValue
        DTS:DataType="8">C:\PrvAnalytics\data\TestSuite\0-PrepareForVisualization.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3D970748-3377-4AD2-867D-E397D6F429B1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::testParentDir] + &quot;\\data\\TestSuite\\&quot; +(DT_STR,10,1252) @[User::varRunId] + &quot;-&quot;+ @[System::PackageName]  +&quot;_report.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="testOutputReport">
      <DTS:VariableValue
        DTS:DataType="8">C:\PrvAnalytics\data\TestSuite\0-PrepareForVisualization_report.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E687CCA6-F308-46CB-9D16-66F90FD74D49}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(UPPER(LEFT(@[System::MachineName],4))==&quot;NLLT&quot; ? &#xA;&#x9;&quot;C&quot;&#xA;&#x9;: (UPPER(LEFT(@[System::MachineName],5))==&quot;NLAMS&quot; ? &#xA;&#x9;&#x9;(RIGHT(@[System::MachineName],3)==&quot;872&quot; ? &quot;M&quot; : &quot;E&quot;)&#xA;&#x9;&#x9;: &quot;F&quot;&#xA;&#x9;)&#xA;) +&quot;:\\PrvAnalytics&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="testParentDir">
      <DTS:VariableValue
        DTS:DataType="8">C:\PrvAnalytics</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{83C6A312-91CF-49E0-B764-B00F79093734}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AD2085EB-3287-4F1F-8916-BC4D15BBDD00}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::RUN_ID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varRunId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check POST-conditions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{20314679-58B6-476C-9E56-A7B46E243F0D}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check POST-conditions">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Check POST-conditions\Check component alignment"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{4a11e01f-54a0-48bd-b36d-42ee9cd22cee}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check component alignment"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Check POST-conditions\Check component alignment\Data Handler Build"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Data Handler Build"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select cast([value] as varchar(10)) as [build number] from sys.extended_properties where class_desc='DATABASE' and [name]='VersionNumber' order by [build number] asc</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DatahandlerDB]"
                      connectionManagerRefId="Package.ConnectionManagers[DatahandlerDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Output]"
                      isSorted="true"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Output].Columns[build number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Output].ExternalColumns[build number]"
                          length="10"
                          lineageId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Output].Columns[build number]"
                          name="build number"
                          sortKeyPosition="1"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Output].ExternalColumns[build number]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="build number" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Error Output].Columns[build number]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Error Output].Columns[build number]"
                          name="build number" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Check POST-conditions\Check component alignment\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Check POST-conditions\Check component alignment\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Inputs[Derived Column Input].Columns[component]"
                          cachedDataType="guid"
                          cachedName="component"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[component]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Inputs[Derived Column Input].Columns[package]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="package"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[package]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Inputs[Derived Column Input].Columns[package build number]"
                          cachedDataType="wstr"
                          cachedLength="1024"
                          cachedName="package build number"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[package build number]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Inputs[Derived Column Input].Columns[dth build number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="dth build number"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[dth build number]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Inputs[Derived Column Input].Columns[platform build number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="platform build number"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[platform build number]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Check POST-conditions\Check component alignment\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[component_id]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[component_id]"
                          name="component_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,50)#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[component]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,50)component</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[run_id]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[run_id]"
                          name="run_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::cfg_sla_RunID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::cfg_sla_RunID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[api]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[api]"
                          name="api"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,100,1252)@[User::cfg_pkg_NameOfApi]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,100,1252)@[User::cfg_pkg_NameOfApi]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[test_result]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[test_result]"
                          name="test_result"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,10,1252)([REPLACENULL](#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[package build number]},"PCK NA") == [REPLACENULL](#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[dth build number]},"DTH NA") &amp;&amp; [REPLACENULL](#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[package build number]},"PCK NA") == [REPLACENULL](#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[platform build number]},"PTF NA") ? "PASS" : "FAIL")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,10,1252)(REPLACENULL([package build number],"PCK NA") == REPLACENULL([dth build number],"DTH NA") &amp;&amp; REPLACENULL([package build number],"PCK NA") == REPLACENULL([platform build number],"PTF NA") ? "PASS" : "FAIL")</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[test_name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[test_name]"
                          name="test_name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,50,1252)"BuildNumberInLine"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,50,1252)"BuildNumberInLine"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[test_comment]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1000"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[test_comment]"
                          name="test_comment"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,1000,1252)("Build numbers: " + [REPLACENULL](#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[package]},"[No package in Execution tree]") + ": " + [REPLACENULL](#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[package build number]},"N/A") + ", DTH: " + [REPLACENULL](#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[dth build number]},"N/A") + ", Platform: " + [REPLACENULL](#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[platform build number]},"N/A"))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,1000,1252)("Build numbers: " + REPLACENULL(package,"[No package in Execution tree]") + ": " + REPLACENULL([package build number],"N/A") + ", DTH: " + REPLACENULL([dth build number],"N/A") + ", Platform: " + REPLACENULL([platform build number],"N/A"))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Check POST-conditions\Check component alignment\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Check POST-conditions\Check component alignment\Merge Join"
                  componentClassID="Microsoft.MergeJoin"
                  contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                  name="Merge Join"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of join to perform."
                      name="JoinType"
                      typeConverter="JoinType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the number of columns in the ordering key."
                      name="NumKeyColumns">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the null values are treated as equal values."
                      name="TreatNullsAsEqual">true</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates the requested maximum buffers per input before blocking."
                      name="MaxBuffersPerInput">5</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input]"
                      hasSideEffects="true"
                      name="Merge Join Left Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input].Columns[build number]"
                          cachedDataType="wstr"
                          cachedLength="1024"
                          cachedName="build number"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[build number]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input].Columns[is local]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="34"
                          cachedName="is local"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[is local]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input].Columns[component]"
                          cachedDataType="guid"
                          cachedName="component"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[component]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input].Columns[environment]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="environment"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[environment]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input].Columns[package]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="package"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[package]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input].Columns[project]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="project"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[project]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Right Input]"
                      hasSideEffects="true"
                      name="Merge Join Right Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Right Input].Columns[build number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="build number"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Output].Columns[build number]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output]"
                      isSorted="true"
                      name="Merge Join Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[is local]"
                          codePage="1252"
                          dataType="str"
                          length="34"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[is local]"
                          name="is local">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input].Columns[is local]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[component]"
                          dataType="guid"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[component]"
                          name="component">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input].Columns[component]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[environment]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[environment]"
                          name="environment">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input].Columns[environment]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[package]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[package]"
                          name="package">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input].Columns[package]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[project]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[project]"
                          name="project">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input].Columns[project]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[package build number]"
                          dataType="wstr"
                          length="1024"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[package build number]"
                          name="package build number"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input].Columns[build number]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[dth build number]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[dth build number]"
                          name="dth build number">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Right Input].Columns[build number]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Check POST-conditions\Check component alignment\Merge Join 1"
                  componentClassID="Microsoft.MergeJoin"
                  contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                  name="Merge Join 1"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of join to perform."
                      name="JoinType"
                      typeConverter="JoinType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the number of columns in the ordering key."
                      name="NumKeyColumns">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the null values are treated as equal values."
                      name="TreatNullsAsEqual">true</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates the requested maximum buffers per input before blocking."
                      name="MaxBuffersPerInput">5</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input]"
                      hasSideEffects="true"
                      name="Merge Join Left Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[package build number]"
                          cachedDataType="wstr"
                          cachedLength="1024"
                          cachedName="package build number"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[package build number]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[is local]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="34"
                          cachedName="is local"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[is local]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[component]"
                          cachedDataType="guid"
                          cachedName="component"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[component]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[environment]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="environment"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[environment]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[package]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="package"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[package]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[project]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="project"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[project]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[dth build number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="dth build number"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output].Columns[dth build number]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Right Input]"
                      hasSideEffects="true"
                      name="Merge Join Right Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Right Input].Columns[build number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="build number"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Output].Columns[build number]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output]"
                      isSorted="true"
                      name="Merge Join Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[is local]"
                          codePage="1252"
                          dataType="str"
                          length="34"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[is local]"
                          name="is local">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[is local]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[component]"
                          dataType="guid"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[component]"
                          name="component">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[component]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[environment]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[environment]"
                          name="environment">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[environment]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[package]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[package]"
                          name="package">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[package]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[project]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[project]"
                          name="project">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[project]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[package build number]"
                          dataType="wstr"
                          length="1024"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[package build number]"
                          name="package build number"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[package build number]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[dth build number]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[dth build number]"
                          name="dth build number">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input].Columns[dth build number]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[platform build number]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output].Columns[platform build number]"
                          name="platform build number">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Right Input].Columns[build number]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[report].[test_report]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                      connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[test_result]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="test_result"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[test_result]"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[test_result]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[test_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="test_name"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[test_name]"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[test_name]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[test_comment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="test_comment"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[test_comment]"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[test_comment]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[component_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="component_id"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[component_id]"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[component_id]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[run_id]"
                          cachedDataType="i4"
                          cachedName="run_id"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[run_id]"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[run_id]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[api]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="api"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[api]"
                          lineageId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output].Columns[api]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[api]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="api" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[test_result]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="test_result" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[test_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="test_name" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[test_comment]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="test_comment" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[component_id]"
                          dataType="wstr"
                          length="50"
                          name="component_id" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[executed_on]"
                          dataType="dbTimeStamp"
                          name="executed_on" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[run_id]"
                          dataType="i4"
                          name="run_id" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Check POST-conditions\Check component alignment\Platform Build"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Platform Build"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select cast([value] as varchar(10)) as [build number] from sys.extended_properties where class_desc='DATABASE' and [name]='VersionNumber' order by [build number] asc</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Check POST-conditions\Check component alignment\Platform Build.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[PlatformDB]"
                      connectionManagerRefId="Package.ConnectionManagers[PlatformDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Output]"
                      isSorted="true"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Output].Columns[build number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Output].ExternalColumns[build number]"
                          length="10"
                          lineageId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Output].Columns[build number]"
                          name="build number"
                          sortKeyPosition="1"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Output].ExternalColumns[build number]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="build number" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Error Output].Columns[build number]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Error Output].Columns[build number]"
                          name="build number" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="SSIS Components Build"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select
	case when lower([server]) = lower(@@SERVERNAME) then 'TRUE - Local to platform'
		 else 'FALSE - Package on separate server' end as [is local]
	, a.component
	, a.environment
	, a.package
	, a.project
	, p.[description] as [build number]
from
	(select
		[server]
		, [component]
		, substring(entry_point,p1+1,p2-p1-1) as [environment]
		, substring(entry_point,p2+1,p3-p2-1) as [project]
		, right(entry_point,len(entry_point)-p3) as [package]
	from
		(select
			[server]
			, entry_point
			, [id] as component
			, charindex('\',entry_point,2) as p1
			, charindex('\',entry_point,charindex('\',entry_point,2)+1) as p2
			, charindex('\',entry_point,charindex('\',entry_point,charindex('\',entry_point,2)+1)+1) as p3
		from
			prv_dev_inh.ivh.run_exectree
		where
			run_id=?
		) a
	) a JOIN
	SSISDB.internal.folders f ON f.name=a.[environment] JOIN
	SSISDB.internal.projects p ON p.name=a.project AND p.folder_id=f.folder_id
order by [build number] asc</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{AD2085EB-3287-4F1F-8916-BC4D15BBDD00};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[PlatformDB]"
                      connectionManagerRefId="Package.ConnectionManagers[PlatformDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output]"
                      isSorted="true"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[is local]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].ExternalColumns[is local]"
                          length="34"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[is local]"
                          name="is local"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[component]"
                          dataType="guid"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].ExternalColumns[component]"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[component]"
                          name="component"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[environment]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].ExternalColumns[environment]"
                          length="255"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[environment]"
                          name="environment"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[package]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].ExternalColumns[package]"
                          length="255"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[package]"
                          name="package"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[project]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].ExternalColumns[project]"
                          length="255"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[project]"
                          name="project"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[build number]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].ExternalColumns[build number]"
                          length="1024"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].Columns[build number]"
                          name="build number"
                          sortKeyPosition="1"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].ExternalColumns[is local]"
                          codePage="1252"
                          dataType="str"
                          length="34"
                          name="is local" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].ExternalColumns[component]"
                          dataType="guid"
                          name="component" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].ExternalColumns[environment]"
                          dataType="wstr"
                          length="255"
                          name="environment" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].ExternalColumns[package]"
                          dataType="wstr"
                          length="255"
                          name="package" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].ExternalColumns[project]"
                          dataType="wstr"
                          length="255"
                          name="project" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output].ExternalColumns[build number]"
                          dataType="wstr"
                          length="1024"
                          name="build number" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[is local]"
                          codePage="1252"
                          dataType="str"
                          length="34"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[is local]"
                          name="is local" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[component]"
                          dataType="guid"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[component]"
                          name="component" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[environment]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[environment]"
                          name="environment" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[package]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[package]"
                          name="package" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[project]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[project]"
                          name="project" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[build number]"
                          dataType="wstr"
                          length="1024"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[build number]"
                          name="build number" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Check POST-conditions\Check component alignment.Paths[Derived Column Output]"
                  endId="Package\Check POST-conditions\Check component alignment\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Check POST-conditions\Check component alignment\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Check POST-conditions\Check component alignment.Paths[Merge Join Output]"
                  endId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Left Input]"
                  name="Merge Join Output"
                  startId="Package\Check POST-conditions\Check component alignment\Merge Join.Outputs[Merge Join Output]" />
                <path
                  refId="Package\Check POST-conditions\Check component alignment.Paths[Merge Join Output1]"
                  endId="Package\Check POST-conditions\Check component alignment\Derived Column.Inputs[Derived Column Input]"
                  name="Merge Join Output"
                  startId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Outputs[Merge Join Output]" />
                <path
                  refId="Package\Check POST-conditions\Check component alignment.Paths[OLE DB Source Output]"
                  endId="Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Left Input]"
                  name="OLE DB Source Output"
                  startId="Package\Check POST-conditions\Check component alignment\SSIS Components Build.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Check POST-conditions\Check component alignment.Paths[OLE DB Source Output1]"
                  endId="Package\Check POST-conditions\Check component alignment\Merge Join.Inputs[Merge Join Right Input]"
                  name="OLE DB Source Output"
                  startId="Package\Check POST-conditions\Check component alignment\Data Handler Build.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Check POST-conditions\Check component alignment.Paths[OLE DB Source Output2]"
                  endId="Package\Check POST-conditions\Check component alignment\Merge Join 1.Inputs[Merge Join Right Input]"
                  name="OLE DB Source Output"
                  startId="Package\Check POST-conditions\Check component alignment\Platform Build.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Check POST-conditions\Process test report"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{9e689871-e8d6-45a2-b33c-5015b5fa03bf}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Process test report"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Check POST-conditions\Process test report\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Check POST-conditions\Process test report\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Check POST-conditions\Process test report\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Output].Columns[component_id]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Output].Columns[component_id]"
                          name="component_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,50)@[User::cfg_sla_ComponentID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,50)@[User::cfg_sla_ComponentID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Output].Columns[run_id]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Output].Columns[run_id]"
                          name="run_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::cfg_sla_RunID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::cfg_sla_RunID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Check POST-conditions\Process test report\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Check POST-conditions\Process test report\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[report].[test_report]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                      connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[api]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="api"
                          externalMetadataColumnId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[api]"
                          lineageId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].Columns[api]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[test_result]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="test_result"
                          externalMetadataColumnId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[test_result]"
                          lineageId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].Columns[test_result]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[test_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="test_name"
                          externalMetadataColumnId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[test_name]"
                          lineageId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].Columns[test_name]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[test_comment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="test_comment"
                          externalMetadataColumnId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[test_comment]"
                          lineageId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].Columns[test_comment]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[component_id]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="component_id"
                          externalMetadataColumnId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[component_id]"
                          lineageId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Output].Columns[component_id]" />
                        <inputColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[run_id]"
                          cachedDataType="i4"
                          cachedName="run_id"
                          externalMetadataColumnId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[run_id]"
                          lineageId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Output].Columns[run_id]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[api]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="api" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[test_result]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="test_result" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[test_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="test_name" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[test_comment]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="test_comment" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[component_id]"
                          dataType="wstr"
                          length="50"
                          name="component_id" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[executed_on]"
                          dataType="dbTimeStamp"
                          name="executed_on" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[run_id]"
                          dataType="i4"
                          name="run_id" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Process test report\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Process test report\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Check POST-conditions\Process test report\Test report"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1043"
                  name="Test report"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Check POST-conditions\Process test report\Test report.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].Columns[api]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].ExternalColumns[api]"
                          length="100"
                          lineageId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].Columns[api]"
                          name="api"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].Columns[test_result]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].ExternalColumns[test_result]"
                          length="10"
                          lineageId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].Columns[test_result]"
                          name="test_result"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].Columns[test_name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].ExternalColumns[test_name]"
                          length="50"
                          lineageId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].Columns[test_name]"
                          name="test_name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].Columns[test_comment]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].ExternalColumns[test_comment]"
                          length="1000"
                          lineageId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].Columns[test_comment]"
                          name="test_comment"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].ExternalColumns[api]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="api" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].ExternalColumns[test_result]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="test_result" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].ExternalColumns[test_name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="test_name" />
                        <externalMetadataColumn
                          refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output].ExternalColumns[test_comment]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="test_comment" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Check POST-conditions\Process test report.Paths[Derived Column Output]"
                  endId="Package\Check POST-conditions\Process test report\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Check POST-conditions\Process test report\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Check POST-conditions\Process test report.Paths[Flat File Source Output]"
                  endId="Package\Check POST-conditions\Process test report\Derived Column.Inputs[Derived Column Input]"
                  name="Flat File Source Output"
                  startId="Package\Check POST-conditions\Process test report\Test report.Outputs[Flat File Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Check POST-conditions\Run Test Suite"
          DTS:CreationName="Microsoft.ExecuteProcess"
          DTS:Description="Execute Process Task"
          DTS:DTSID="{4d7816f3-7661-4479-8ea3-5be556023e95}"
          DTS:ExecutableType="Microsoft.ExecuteProcess"
          DTS:LocaleID="-1"
          DTS:ObjectName="Run Test Suite"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Arguments">" -s "+ @[User::cfg_sla_ProjectDataSource]+" -c " + @[User::cfg_sla_ProjectCatalog] + " -j " + @[User::testInputJson] + " -o " + @[User::testOutputReport]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="Executable">@[User::testExecutable]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="WorkingDirectory">@[User::testParentDir]+"\\bin\\TestSuite"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ExecuteProcessData
              Executable="C:\PrvAnalytics\bin\TestSuite\PipelineTestSuite.exe"
              Arguments=" -s nlams00859 -c prv_prj_deploytest -j C:\PrvAnalytics\data\TestSuite\0-PrepareForVisualization.json -o C:\PrvAnalytics\data\TestSuite\0-PrepareForVisualization_report.csv"
              WorkingDirectory="C:\PrvAnalytics\bin\TestSuite" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Check POST-conditions\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{C8FC42E5-0A71-469C-B45A-3842430D4220}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_8c66f9e2779c47328be35904d4abbc11"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName,User::testInputJson">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8c66f9e2779c47328be35904d4abbc11.Properties.Settings.get_Default():ST_8c66f9e2779c47328be35904d4abbc11.Properties.Sett" +
    "ings")]

namespace ST_8c66f9e2779c47328be35904d4abbc11.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_8c66f9e2779c47328be35904d4abbc11.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{297C2DE4-E3A8-4343-BCAE-D1C357FFD9B6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8c66f9e2779c47328be35904d4abbc11</RootNamespace>
    <AssemblyName>ST_8c66f9e2779c47328be35904d4abbc11</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_7.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using Newtonsoft.Json;
#endregion

namespace ST_7704314bcae44e1ea7bf43f170fb7edc
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetupLogger();
                System.IO.File.WriteAllText(Dts.Variables["testInputJson"].Value.ToString(), JsonConvert.SerializeObject(deloitte.Config));
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_8c66f9e2779c47328be35904d4abbc11</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_8c66f9e2779c47328be35904d4abbc11</msb:DisplayName>
		<msb:ProjectId>{DB0D1DE3-7D93-4C02-90FC-CFD6984F3B2D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_8c66f9e2779c47328be35904d4abbc11.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8c66f9e2779c47328be35904d4abbc11")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8c66f9e2779c47328be35904d4abbc11")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8c66f9e2779c47328be35904d4abbc11.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8c66f9e2779c47328be35904d4abbc11.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8c66f9e2779c47328be35904d4abbc11.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8c66f9e2779c47328be35904d4abbc11.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8c66f9e2779c47328be35904d4abbc11.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_8c66f9e2779c47328be35904d4abbc11.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJ/zn1oAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAQi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPAuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAASA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAk
LwAAAAAAAEgAAAACAAUAMCEAAAgNAAABAAAAAAAAADguAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgBaAAAAAQAAEQIoEAAACnMRAAAKCgZvEgAACgIoEAAA
Cm8TAAAKcgEAAHBvFAAACm8VAAAKbxYAAAoGbxcAAAooGAAACigZAAAK3goGLAYGbxoAAArcAigQ
AAAKFm8bAAAKKgAAARAAAAIADAA3QwAKAAAAAB4CKBwAAAoqHgIoHQAACiqufgEAAAQtHnIdAABw
0AMAAAIoHgAACm8fAAAKcyAAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigh
AAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAKAQA
ACN+AACUBAAARAYAACNTdHJpbmdzAAAAANgKAACQAAAAI1VTAGgLAAAQAAAAI0dVSUQAAAB4CwAA
kAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACIAAAAFAAAABgAAAAkAAAAB
AAAAIQAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAGAAAAAQAAAAEAAAAAAAwEAQAAAAAA
BgBsAvgEBgD7AvgEBgC4AeUEDwBsBQAABgDlAYoEBgBPAooEBgAwAooEBgDiAooEBgCMAooEBgCl
AooEBgD8AYoEBgAXAl4DCgDAArsDCgAvAbsDDgAPBoEDBgBEBD0EBgCbAeUEBgDoBT0EBgC8BBgF
BgCsBHUEEgBrAfYDEgDMAfYDEgBLAWAEBgCAAfgECgDkA7sDFgCuBdoAFgCcANoADgAKBjQDGgAe
BpwEBgDVAC4ABgClAD0EBgD6AD0EBgCxAD0EBgA7BooEAAAAACUAAAAAAAEAAQABABAAVQRoADkA
AQABAAAAEAAfBXsFSQABAAMAAAEQALgFewVdAAMABwADAQAA0QUAAEEABAAKABEASQSTABEAHwGX
ABEAjACbAAYGVwCfAFaAwQWiAFaA/wCiAFAgAAAAAIYAWwQGAAEAyCAAAAAAhhjYBAYAAQDQIAAA
AACDGNgEBgABANggAAAAAJMIuASmAAEABCEAAAAAkwgHAasAAQALIQAAAACTCBMBsAABABMhAAAA
AJYI7wW2AAIAGiEAAAAAhhjYBAYAAgAiIQAAAACRGN4EuwACAAAAAQAjAwkA2AQBABEA2AQGABkA
2AQKACkA2AQQADEA2AQQADkA2AQQAEEA2AQQAEkA2AQQAFEA2AQQAFkA2AQQAGEA2AQQAGkA2AQG
AIkA2AQGALEA2AQVAMEA2AQGAHEAyQUgAHkA2AQlAHkAzAQGAMkAqgUrANEANAQwANkAGQM2AJEA
eAM6AHkAKQM+AOkA3wVDAPEAKgZIAPkAYwEGAMkA+wUBAHEA2AQGAJEA2AQGAAEBwwBOAAEBNwZX
AJkA2ARdALkA2AQGAAgAFACJAAgAGACOACkAcwD2AC4ACwDOAC4AEwDXAC4AGwD2AC4AIwD/AC4A
KwAoAS4AMwAoAS4AOwAoAS4AQwD/AC4ASwAuAS4AUwAoAS4AWwBFAUMAYwCOAEkAcwD2AGEAewCO
AGMAawCOABsAAwABAAQAAwAAALwEvwAAACcBxAAAAPMFyQACAAQAAwACAAUABQABAAYABQACAAcA
BwAEgAAAAQAAAPAZF2sAAAAAAAABAAAABAAAAAAAAAAAAAAAZQBfAAAAAAAOAAAAAAAAAAAAAABu
AJwDAAAAAAMAAAAAAAAAAAAAAHcAgQMAAAAABAAAAAAAAAAAAAAAZQA9BAAAAAAOAAAAAAAAAAAA
AABuADgAAAAAAAcAAAAAAAAAAAAAAIAAnAQAAAAAAAAAAAEAAAApBQAABQACAAAAAAAAU1RfOGM2
NmY5ZTI3NzljNDczMjhiZTM1OTA0ZDRhYmJjMTEAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFNUXzc3MDQzMTRiY2FlNDRl
MWVhN2JmNDNmMTcwZmI3ZWRjAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBS
dW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291
cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJp
YnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFk
ZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJh
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVs
YXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJp
Z2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNv
bXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZh
bHVlAGdldF9Db25maWcARGVsb2l0dGUuUGlwZWxpbmVGcmFtZXdvcmsuUGxhdGZvcm1Db25maWcA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBEZWxvaXR0ZS5QaXBlbGluZUZyYW1l
d29yawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwAU1RfOGM2NmY5ZTI3NzljNDczMjhiZTM1OTA0ZDRhYmJjMTEuZGxsAGdldF9JdGVtAFN5c3Rl
bQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ATmV3dG9uc29mdC5Kc29uAEN1bHR1cmVJ
bmZvAGdldF9SZXNvdXJjZU1hbmFnZXIAU2V0dXBMb2dnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5E
aWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJj
ZXMAU1RfOGM2NmY5ZTI3NzljNDczMjhiZTM1OTA0ZDRhYmJjMTEuUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzhjNjZmOWUyNzc5YzQ3MzI4YmUzNTkwNGQ0
YWJiYzExLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMA
U2NyaXB0UmVzdWx0cwBTZXJpYWxpemVPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQA
Um9vdABEZWxvaXR0ZVNjcmlwdABKc29uQ29udmVydABXcml0ZUFsbFRleHQAZ2V0X0Fzc2VtYmx5
AAAbdABlAHMAdABJAG4AcAB1AHQASgBzAG8AbgAAcVMAVABfADgAYwA2ADYAZgA5AGUAMgA3ADcA
OQBjADQANwAzADIAOABiAGUAMwA1ADkAMAA0AGQANABhAGIAYgBjADEAMQAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAHjLDEwAuJNOknl59IdrSDgABCABAQgDIAAB
BSABARERBCABAQ4FIAEBEVUEBwESPQQgABJlBSABARJlBCAAEmkFIAESbRwDIAAcAyAADgQgABJx
BAABDhwFAAIBDg4IAAESgIERgIUFIAASgIkHIAIBDhKAiQi3elxWGTTgiQiJhF3NgIDMkQj5Ajo2
DehLDAgwrU/msqau7QQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAASUQUAAQES
UQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfOGM2NmY5ZTI3NzljNDczMjhiZTM1OTA0ZDRhYmJjMTEA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAABgvAAAAAAAAAAAAADIvAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkLwAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAXa/AZAAABABdr8Bk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADgAYwA2ADYAZgA5AGUAMgA3ADcAOQBjADQANwAzADIAOABiAGUAMwA1ADkAMAA0
AGQANABhAGIAYgBjADEAMQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADYANAAwAC4AMgA3ADQAMQA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADgAYwA2ADYAZgA5AGUAMgA3ADcAOQBjADQANwAzADIAOABiAGUAMwA1ADkAMAA0AGQA
NABhAGIAYgBjADEAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AOABjADYANgBmADkAZQAyADcANwA5AGMANAA3ADMAMgA4AGIAZQAzADUA
OQAwADQAZAA0AGEAYgBiAGMAMQAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADgAYwA2ADYAZgA5AGUAMgA3ADcAOQBjADQANwAzADIAOABiAGUAMwA1ADkA
MAA0AGQANABhAGIAYgBjADEAMQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgA2ADQAMAAuADIANwA0ADEANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA2ADQAMAAuADIANwA0ADEANQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABEPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Check POST-conditions.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{20E88AA9-E79C-48FE-A2FD-14B345E28077}"
          DTS:From="Package\Check POST-conditions\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Check POST-conditions\Run Test Suite" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Check POST-conditions.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{2A015779-F1AF-4E89-8C61-CFBB540385E9}"
          DTS:From="Package\Check POST-conditions\Run Test Suite"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Check POST-conditions\Process test report" />
      </DTS:PrecedenceConstraints>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Check POST-conditions.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{6EE68224-BCD6-4F8A-9517-9581CE97A119}"
          DTS:EventID="631204784"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{360786D9-68D6-475C-BA8F-683CC4D1A76B}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check POST-conditions.EventHandlers[OnPostExecute]\Event - End executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{9b69e79f-4d29-4a02-8e40-966ae1bf2a64}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - End executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='complete',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Information'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{024765D8-5311-4FD6-AC51-730FDA44254C}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='complete',@source_id='', @level='Information'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Check PRE-conditions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{121E0DDA-FD80-43F1-84C1-CC71597C6A14}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check PRE-conditions">
      <DTS:Variables />
      <DTS:Executables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Check PRE-conditions.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{ACD5562B-FC99-4497-8C30-0156593AA537}"
          DTS:EventID="631219344"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{12D54A13-DDF5-46FA-BF41-C5058D487B99}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check PRE-conditions.EventHandlers[OnPostExecute]\Event - Start executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{0f713639-d3d9-465b-8b92-dad41e13458e}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - Start executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='start',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Information'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{024765D8-5311-4FD6-AC51-730FDA44254C}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='start',@source_id='', @level='Information'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute Feature"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{4F01CB19-AB8F-40A0-94E4-1B8BC77B03F9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute Feature">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Create Backup"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{E38ABEB4-683E-4D99-9773-428F1F24F817}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Backup"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sqlCreateBackup" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Expression Task"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{D6366883-EFA2-4EA5-9C0D-96C53B2143DB}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Expression Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="1+1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Landscape"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{4039FD2E-55F4-4108-A9D3-1859465C2CEB}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Landscape">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Landscape\Create Config View"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{59259033-fc4c-4502-9810-711e87fbc4ea}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Config View"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStatementSource="IF OBJECT_ID('dbo.CONFIG_TABLE_1', 'V') IS NOT NULL DROP VIEW dbo.[CONFIG_TABLE_1]&#xA;GO&#xA;CREATE VIEW dbo.[CONFIG_TABLE_1] AS&#xA;SELECT        Table_Name, Column_Name_Generic, Column_Name_Custom, UseAsAndFilter&#xA;FROM            (         SELECT  'FACT_POINTS_TO_PLOT_1' AS Table_Name, 'PointsToPlot_Label1' AS Column_Name_Generic, 'Category' AS Column_Name_Custom, 1 AS UseAsAndFilter&#xA;                          UNION ALL&#xA;                          SELECT        'FACT_POINTS_TO_PLOT_1' AS Table_Name, 'PointsToPlot_Label2' AS Column_Name_Generic, 'Label' AS Column_Name_Custom, 0 AS UseAsAndFilter&#xA;                          UNION ALL&#xA;                          SELECT        'FACT_POINTS_TO_PLOT_1' AS Table_Name, 'PointsToPlot_Label3' AS Column_Name_Generic, 'Technology Class' AS Column_Name_Custom, 0 AS UseAsAndFilter&#xA;                          UNION ALL&#xA;                          SELECT        'FACT_POINTS_TO_PLOT_1' AS Table_Name, 'PointsToPlot_Label4' AS Column_Name_Generic, 'Description' AS Column_Name_Custom, 0 AS UseAsAndFilter&#xA;                          UNION ALL&#xA;                          SELECT  'FACT_POINTS_TO_PLOT_1' AS Table_Name, 'PointsToPlot_Attribute1' AS Column_Name_Generic, 'Label' AS Column_Name_Custom, 0 AS UseAsAndFilter&#xA;                          UNION ALL&#xA;                          SELECT        'FACT_POINTS_TO_PLOT_1' AS Table_Name, 'PointsToPlot_Attribute2' AS Column_Name_Generic, 'Label' AS Column_Name_Custom, 0 AS UseAsAndFilter&#xA;                          UNION ALL&#xA;                          SELECT        'FACT_POINTS_TO_PLOT_1' AS Table_Name, 'PointsToPlot_Attribute3' AS Column_Name_Generic, 'Trend' AS Column_Name_Custom, 1 AS UseAsAndFilter&#xA;                          UNION ALL&#xA;                          SELECT        'FACT_POINTS_TO_PLOT_1' AS Table_Name, 'PointsToPlot_Value1' AS Column_Name_Generic, 'Size' AS Column_Name_Custom, 0 AS UseAsAndFilter&#xA;                          UNION ALL&#xA;                          SELECT        'FACT_POINTS_TO_PLOT_1' AS Table_Name, 'PointsToPlot_Value2' AS Column_Name_Generic, 'Weight' AS Column_Name_Custom, 0 AS UseAsAndFilter&#xA;                          UNION ALL&#xA;                          SELECT        'FACT_POINTS_TO_PLOT_1' AS Table_Name, 'PointsToPlot_Value3' AS Column_Name_Generic, 'Relevance' AS Column_Name_Custom, 0 AS UseAsAndFilter&#xA;&#x9;          UNION ALL&#xA;SELECT DISTINCT 'FACT_POINTS_TO_PLOT_1'&#xA;&#x9;, CONCAT('PointsToPlot_Value',CAST(5+DENSE_RANK() OVER (ORDER BY node_property_type ASC) AS NVARCHAR(5)))&#xA;&#x9;, node_property_type&#xA;&#x9;, 0 AS UseAsAndFilter&#xA;FROM&#xA;&#x9;[custom].[ls_node_property_numeric]) AS a" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Landscape\Create Fact Points To Plot"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{0ec2ac0b-1f66-414e-8045-0bf88743b631}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Fact Points To Plot"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStmtSourceType="Variable"
                  SQLTask:SqlStatementSource="User::sqlCreateFactsPointsToPlot" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Landscape\Create Points to Download"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{0076a5c1-ebc8-45c7-bda5-129822906894}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Points to Download"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStatementSource="IF OBJECT_ID('dbo.FACT_POINTS_TO_DOWNLOAD', 'V') IS NOT NULL DROP VIEW dbo.FACT_POINTS_TO_DOWNLOAD&#xA;GO&#xA;CREATE VIEW dbo.FACT_POINTS_TO_DOWNLOAD AS&#xA;SELECT DISTINCT&#xA;  dense_rank() over (order by node_score_series_group) AS LandscapeOverlay_ID&#xA;  , node_score_series_key AS [Series Name]&#xA;  , node_score_series_group AS [Series Type]&#xA;  , n.node_key AS [Node Key]&#xA;  --, np.node_x AS PointX&#xA;  --, np.node_y AS PointY&#xA;  , npn.Size AS [Size]&#xA;  , nsn.[Weight] AS [Weight]&#xA;  , nsn.[Relevance] AS [Relevance]&#xA;  , npn.[Trend value] AS [Relative growthrate]&#xA;  , nps.[High Level Label] AS [High level label]&#xA;  , nps.[Extended label] AS [Long label]&#xA;  , nps.[Technology Class] AS [Class code]&#xA;  , nps.[Label] AS [Label]&#xA;  --, nps.[High Level Label] AS PointsToPlot_Attribute1&#xA;  --, nps.[Extended label] AS PointsToPlot_Attribute2&#xA;  , nps.[Trend] AS [Relative trend]&#xA;  --, 1 AS DummyMeasure&#xA; FROM&#xA;  dbo.ls_node AS n LEFT OUTER JOIN&#xA;  dbo.ls_node_position np ON np.node_key=n.node_key LEFT OUTER JOIN&#xA;  -----------------------------------------&#xA;  -- Numeric properties&#xA;  (select&#xA;   node_key&#xA;   , [Size],[Trend value]&#xA;  from &#xA;   [dbo].[ls_node_property_numeric]&#xA;  pivot(&#xA;   max(node_property_value) for [node_property_type] in ([Size],[Trend value])&#xA;   ) pvt&#xA;  ) npn on npn.node_key=n.node_key LEFT OUTER JOIN&#xA;  -----------------------------------------&#xA;  -- String properties&#xA;  (select&#xA;   node_key&#xA;   , [Label],[Extended Label], [High Level Label],[Technology Class],[Trend]&#xA;  from &#xA;   [dbo].[ls_node_property_str]&#xA;  pivot(&#xA;   max(node_property_value) for [node_property_type] in ([Label],[Extended Label], [High Level Label],[Technology Class],[Trend])&#xA;   ) pvt&#xA;  ) nps on nps.node_key=n.node_key LEFT OUTER JOIN&#xA;  -----------------------------------------&#xA;  -- Numeric scores&#xA;  (select&#xA;   node_key&#xA;   , 'All Classes' as node_score_series_group&#xA;   , 'All types' as node_score_series_key&#xA;   , 0.01 as [Weight]&#xA;   ,1.0 as [Relevance]&#xA;  from&#xA;   dbo.ls_node&#xA;  union all&#xA;  select&#xA;   node_key, node_score_series_group, node_score_series_key&#xA;   , [Weight],[Relevance]&#xA;  from &#xA;   [dbo].[ls_node_score_numeric]&#xA;  pivot(&#xA;   max(node_score_value) for [node_score_group] in ([Weight],[Relevance])&#xA;   ) pvt&#xA;  --order by node_key, node_score_series_group&#xA;  ) nsn on nsn.node_key=n.node_key" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Landscape\Get Custom Metrics"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{E2C70F7D-EE5E-485B-B1AC-10F488786512}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Custom Metrics"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStatementSource="SELECT&#xA;&#x9;CAST(SUBSTRING(STUFF((&#x9;&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;CONCAT(',[', node_property_type, '] ')&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;[custom].[ls_node_property_numeric]&#xA;&#x9;&#x9;FOR XML PATH('')),1,0,''),2,10000) AS NVARCHAR(4000)) AS pivot_columns&#xA;&#x9;/*,SUBSTRING(STUFF((&#x9;&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;CONCAT(',PointsToPlot_Value', CAST(5+DENSE_RANK() OVER (order by node_property_type asc) AS VARCHAR(5))) &#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;[custom].[ls_node_property_numeric]&#xA;&#x9;&#x9;FOR XML PATH('')),1,0,''),2,10000) as attribute_names&#xA;&#x9;*/,CAST(STUFF((&#x9;&#xA;&#x9;&#x9;SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;CONCAT(',[', node_property_type, '] AS PointsToPlot_Value', CAST(5+DENSE_RANK() OVER (order by node_property_type asc) AS VARCHAR(5)), ' ') --as select_part&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;[custom].[ls_node_property_numeric]&#xA;&#x9;&#x9;FOR XML PATH('')),1,0,'') AS NVARCHAR(4000)) AS select_part"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="pivot_columns"
                    SQLTask:DtsVariableName="User::sqlPart_PivotColumns" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Landscape.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{3F0D7D38-F134-48E2-821A-A90E51786F1C}"
              DTS:From="Package\Execute Feature\Landscape\Get Custom Metrics"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Execute Feature\Landscape\Create Fact Points To Plot" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Landscape - Descriptors"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{4688DCDC-C79F-440C-B17F-47C7592F94E3}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Landscape - Descriptors">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Landscape - Descriptors\Create Front-end View"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{4888F8B8-1CDA-400F-B763-B7E5EDB2F5CF}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Front-end View"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStatementSource=" IF OBJECT_ID('dbo.DIM_FRONTEND_VIEW_1', 'V') IS NOT NULL DROP VIEW dbo.[DIM_FRONTEND_VIEW_1]&#xA;GO&#xA;CREATE VIEW dbo.[DIM_FRONTEND_VIEW_1] AS&#xA;SELECT        distinct LandscapeOverlay_ID, cast(LandscapeOverlay_ID as nvarchar(10)) + '. ' + [SeriesToPlot_TYPE] as [LandscapeOverlay_NAME]&#xA;FROM&#xA;dbo.FACT_POINTS_TO_PLOT_1&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Landscape - Descriptors\Series Properties"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1670CBE9-0D9A-4AED-B5E8-DF9DABECB5B6}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Series Properties"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStatementSource="IF OBJECT_ID('series_properties', 'U') IS NULL &#xA;&#x9;CREATE TABLE [series_properties](&#xA;&#x9;&#x9;[series_id] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;[SeriesToPlot_NAME] [nvarchar](100) NOT NULL,&#xA;&#x9;&#x9;[stroke_color] [nvarchar](15) NULL,&#xA;&#x9;&#x9;[fill_color] [nvarchar](15) NULL,&#xA;&#x9;&#x9;[fill_override] [tinyint] NULL,&#xA;&#x9;PRIMARY KEY CLUSTERED &#xA;&#x9;(&#xA;&#x9;&#x9;[series_id] ASC&#xA;&#x9;))&#xA;GO&#xA;&#xA;insert into [series_properties] ([SeriesToPlot_NAME],stroke_color,fill_color)&#xA;&#x9;SELECT&#xA;&#x9;&#x9;[SeriesToPlot_NAME]&#xA;&#x9;&#x9;, 'none' as stroke_color&#xA;&#x9;&#x9;, '#' +  CONVERT(VARCHAR(max), CRYPT_GEN_RANDOM(3), 2) as fill_color&#xA;&#x9;FROM&#xA;&#x9;&#x9;(SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;[SeriesToPlot_NAME]&#xA;&#x9;&#x9;&#x9;, DENSE_RANK() OVER (ORDER BY [SeriesToPlot_NAME]) as rnk&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;FACT_POINTS_TO_PLOT_1&#xA;&#x9;&#x9;) a &#xA;&#x9;WHERE&#xA;&#x9;&#x9;[SeriesToPlot_NAME] IS NOT NULL&#xA;&#x9;&#x9;AND&#xA;&#x9;&#x9;[SeriesToPlot_NAME] NOT IN (SELECT [SeriesToPlot_NAME] FROM series_properties)&#xA;&#xA;/*&#xA;IF OBJECT_ID('series_properties', 'U') IS NOT NULL DROP TABLE series_properties&#xA;GO&#xA;&#xA;CREATE TABLE [series_properties](&#xA;&#x9;[series_id] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;[SeriesToPlot_NAME] [nvarchar](100) NOT NULL,&#xA;&#x9;[stroke_color] [nvarchar](15) NULL,&#xA;&#x9;[fill_color] [nvarchar](15) NULL,&#xA;&#x9;[fill_override] [tinyint] NULL,&#xA;PRIMARY KEY CLUSTERED &#xA;(&#xA;&#x9;[series_id] ASC&#xA;))&#xA;GO&#xA;&#x9;insert into [series_properties] ([SeriesToPlot_NAME],stroke_color,fill_color)&#xA;&#x9;&#xA;&#x9;SELECT&#xA;&#x9;&#x9;[SeriesToPlot_NAME]&#xA;&#x9;&#x9;, 'none' as stroke_color&#xA;&#x9;&#x9;, '#' +  CONVERT(VARCHAR(max), CRYPT_GEN_RANDOM(3), 2) as fill_color&#xA;&#x9;FROM&#xA;&#x9;&#x9;(SELECT DISTINCT&#xA;&#x9;&#x9;&#x9;[SeriesToPlot_NAME]&#xA;&#x9;&#x9;&#x9;, DENSE_RANK() OVER (ORDER BY [SeriesToPlot_NAME]) as rnk&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;FACT_POINTS_TO_PLOT_1&#xA;&#x9;&#x9;) a &#xA;&#x9;WHERE [SeriesToPlot_NAME] IS NOT NULL&#xA;*/" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Longlist"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{27094B62-9DAF-4B98-9892-4127E2B1BE6D}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Longlist">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Longlist\Create Company Longlist Web"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{00d8a652-f68f-499a-a0e7-e55b7bc128f0}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Company Longlist Web"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStatementSource=" IF OBJECT_ID('dbo.DIM_COMPANYLONGLIST_WEB', 'V') IS NOT NULL DROP VIEW dbo.DIM_COMPANYLONGLIST_WEB&#xA; IF OBJECT_ID('dbo.DIM_COMPANYLONGLIST_WEB', 'U') IS NOT NULL DROP TABLE dbo.DIM_COMPANYLONGLIST_WEB&#xA;&#xA; DECLARE @debug AS BIT = 0&#xA; DECLARE @colsinta AS NVARCHAR(MAX), @colsreala AS NVARCHAR(MAX), @colsstra AS NVARCHAR(MAX)&#xA; DECLARE @colsb AS NVARCHAR(MAX)&#xA; DECLARE @query AS NVARCHAR(MAX);&#xA;&#xA;&#xA; select @colsinta = STUFF((SELECT distinct ',' + QUOTENAME(score_label)&#xA;    FROM dbo.company_score where is_temporal=0 and data_type IN ('int', 'bigint', 'tinyint', 'smallint')-- and hostTableName = 'DIM_COMPANYLONGLIST_WEB'--company_score_int &#xA;    FOR XML PATH(''), TYPE&#xA;    ).value('.', 'NVARCHAR(MAX)') &#xA;   ,1,1,'')&#xA; select @colsreala = STUFF((SELECT distinct ',' + QUOTENAME(score_label)&#xA;    FROM dbo.company_score where is_temporal=0 and data_type IN ('real', 'decimal', 'float')-- and hostTableName = 'DIM_COMPANYLONGLIST_WEB'--company_score_real&#xA;    FOR XML PATH(''), TYPE&#xA;    ).value('.', 'NVARCHAR(MAX)') &#xA;   ,1,1,'')&#xA; select @colsstra = STUFF((SELECT distinct ',' + QUOTENAME(score_label)&#xA;    FROM dbo.company_score where is_temporal=0 and data_type IN ('nvarchar', 'varchar', 'text', 'ntext', 'char', 'nchar')-- and hostTableName = 'DIM_COMPANYLONGLIST_WEB' --company_score_str&#xA;    FOR XML PATH(''), TYPE&#xA;    ).value('.', 'NVARCHAR(MAX)') &#xA;   ,1,1,'')&#xA;&#xA; IF @debug=1 PRINT @colsinta&#xA; IF @debug=1 PRINT @colsreala&#xA; IF @debug=1 PRINT @colsstra&#xA;&#xA;&#xA; SELECT @colsb = STUFF((SELECT ', [' + score_label + '] as a' + RIGHT(score_generic_name, 5)&#xA;    FROM dbo.company_score where is_temporal=0&#xA;    ORDER BY score_generic_name&#xA;    FOR XML PATH(''), TYPE&#xA;    ).value('.', 'NVARCHAR(MAX)') &#xA;   ,1,2,'')&#xA;&#xA; set @query = '--CREATE VIEW dbo.DIM_COMPANYLONGLIST_WEB AS &#xA;     SELECT cll.company_id  AS companyPrimKey&#xA;       , 1     AS companyDummyMeas&#xA;       , cll.company_name AS companyName' + ISNULL(', ' + @colsb, '') + ' &#xA;     INTO dbo.DIM_COMPANYLONGLIST_WEB FROM dbo.company_long_list cll '&#xA;&#xA; IF len(@colsinta) &gt; 0&#xA;  set @query = @query + '&#xA;      LEFT JOIN &#xA;      (select company_id' + ISNULL(', ' + @colsinta, '')+' &#xA;       from dbo.company_score_int &#xA;       pivot &#xA;       (&#xA;        max(score_value)&#xA;        for score_name in (' + ISNULL(@colsinta, '') + ')&#xA;       ) p  &#xA;      ) tabint on cll.company_id=tabint.company_id '&#xA; IF len(@colsreala) &gt; 0&#xA;  set @query = @query + ' &#xA;      LEFT JOIN&#xA;       (select company_id' + ISNULL(', ' + @colsreala, '')+'&#xA;       from dbo.company_score_real&#xA;       pivot &#xA;        (&#xA;         avg(score_value)&#xA;         for score_name in (' + ISNULL(@colsreala, '') + ')&#xA;        ) p  &#xA;       ) tabreal on cll.company_id=tabreal.company_id '&#xA;     &#xA; IF len(@colsstra) &gt; 0&#xA;  set @query = @query + ' &#xA;      LEFT JOIN &#xA;       (select company_id' + ISNULL(', ' + @colsstra, '')+'&#xA;       from dbo.company_score_str &#xA;       pivot &#xA;        (&#xA;         max(score_value)&#xA;         for score_name in (' + ISNULL(@colsstra, '') + ')&#xA;        ) p  &#xA;       ) tabstr on cll.company_id=tabstr.company_id '&#xA;&#xA; IF @debug=1 PRINT @query&#xA;&#xA;  EXEC (@query);&#xA;  &#xA;  alter table [dbo].[DIM_COMPANYLONGLIST_WEB] alter column companyPrimKey varchar(25) not null&#xA;  go&#xA;  alter table [dbo].[DIM_COMPANYLONGLIST_WEB] add constraint pkbvd primary key (companyPrimKey)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Longlist\Create Longlist Filters"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{fe81f4bc-253f-4ea0-8574-c4f9517d3da2}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Longlist Filters"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStatementSource="IF OBJECT_ID('dbo.DEF_COMPANYLONGLIST_FILTERS', 'U') IS NOT NULL DROP TABLE dbo.DEF_COMPANYLONGLIST_FILTERS&#xA;GO&#xA;IF OBJECT_ID('dbo.DEF_COMPANYLONGLIST_FILTERS', 'V') IS NULL&#xA;CREATE TABLE [dbo].[DEF_COMPANYLONGLIST_FILTERS](&#xA; [id] [int] IDENTITY(1,1) NOT NULL,&#xA; [title] [nvarchar](50) NOT NULL,&#xA; [where] [nvarchar](250) NOT NULL,&#xA; CONSTRAINT [PK_DEF_COMPANYLONGLIST_FILTERS] PRIMARY KEY CLUSTERED &#xA; (&#xA;  [id] ASC&#xA; )&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Longlist\Create Longlist Stats"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{49d19be1-527c-4687-b6b4-11b96f91311f}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Longlist Stats"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStatementSource="IF OBJECT_ID('dbo.DIM_COMPANYLONGLIST_STATS', 'V') IS NOT NULL DROP VIEW dbo.DIM_COMPANYLONGLIST_STATS&#xA;GO&#xA;IF OBJECT_ID('dbo.DIM_COMPANYLONGLIST_WEB', 'V') IS NOT NULL&#xA;exec('CREATE view [dbo].[DIM_COMPANYLONGLIST_STATS] AS SELECT COUNT(*) AS ''Total # Companies'' from  dbo.DIM_COMPANYLONGLIST_WEB')&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Longlist\Create Object Names Web"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{f083180d-5797-4aaa-b35a-d1a8464b3df5}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Object Names Web"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStatementSource=" IF OBJECT_ID('dbo.DEF_OBJECTNAMES_WEB', 'V') IS NOT NULL DROP VIEW dbo.[DEF_OBJECTNAMES_WEB]&#xA;GO&#xA;create view dbo.[DEF_OBJECTNAMES_WEB] as&#xA;select&#xA; score_id as [objNamePrimKey]&#xA; ,'a' + right([score_generic_name],5) as [objectGenericName]&#xA; ,'column' as [objectType]&#xA; , 'DIM_COMPANYLONGLIST' as [hostTableName]&#xA; ,score_label as [objectLabel]&#xA; ,is_numeric as [isNumeric]&#xA; ,display_in_fe as [displayInFE]&#xA; ,column_order as [columnOrder]&#xA; ,flex_width as [flexWidth]&#xA; ,case when data_type='int'&#xA;  then 1&#xA;  else case when data_type='real'&#xA;   then 2&#xA;   else 3 end end as [dataType]&#xA; ,default_scale as [defaultScale]&#xA; ,precision as [precision]&#xA; ,unit as [unit]&#xA; ,uni_polar as [uniPolar]&#xA;from&#xA; dbo.company_score where is_temporal=0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Longlist\Fill Filters"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:Disabled="True"
              DTS:DTSID="{411bc985-8fe7-4916-a1e9-7bfc811abbfe}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Fill Filters"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Longlist\Fill Filters\Parse filter string"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Parse filter string"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7893603837b74f599456fa9c66e247f0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7893603837b74f599456fa9c66e247f0")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    IDTSConnectionManager100 myPlatformConnectionManager;
    SqlConnection myPlatformConnection;
    string componentid;

    private void LogEntry(string sourceid, string status, string msg)
    {
        using (SqlCommand cmd = new SqlCommand("nlh.log_addEntry", myPlatformConnection))
        {
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("@component", "PrepareForVisualization.dtsx");
            cmd.Parameters.AddWithValue("@source_type", "SCRIPT");
            cmd.Parameters.AddWithValue("@source_name", "Add Longlist Filters");
            cmd.Parameters.AddWithValue("@source_id", sourceid);
            cmd.Parameters.AddWithValue("@message", msg);
            cmd.Parameters.AddWithValue("@action", "EXECUTE");
            cmd.Parameters.AddWithValue("@status", status);

            cmd.ExecuteNonQuery();
        }
    }
    
    public override void PreExecute()
    {
        base.PreExecute();

        myPlatformConnectionManager = this.Connections.PlatformDB;
        myPlatformConnection = (SqlConnection)myPlatformConnectionManager.AcquireConnection(null);
        componentid = (string)Variables.cfgslaComponentID;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        myPlatformConnectionManager.ReleaseConnection(myPlatformConnection);
    }

    public override void CreateNewOutputRows()
    {
        string LongListFilters = Variables.cfgpkgLongListFilters;

        string[] filters = LongListFilters.Split('|');
        foreach (string filter in filters)
        {
            string[] kv = filter.Split(':');
            Output0Buffer.AddRow();
            Output0Buffer.title = kv[0];
            Output0Buffer.where = kv[1];
        }
        
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String where
    {
        set
        {
            this[0] = value;
        }
    }
    public bool where_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String title
    {
        set
        {
            this[1] = value;
        }
    }
    public bool title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PlatformDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PlatformDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String cfgpkgLongListFilters
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_pkg_LongListFilters"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaComponentID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ComponentID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgtplCMPlatformDB
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_tpl_CMPlatformDB"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_7893603837b74f599456fa9c66e247f0.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e7f474ed-f028-47db-b5ae-8d96312b2e39}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7893603837b74f599456fa9c66e247f0</RootNamespace>
    <AssemblyName>SC_7893603837b74f599456fa9c66e247f0</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_7893603837b74f599456fa9c66e247f0" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7893603837b74f599456fa9c66e247f0</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_7893603837b74f599456fa9c66e247f0</msb:DisplayName>
		<msb:ProjectId>{F49D5416-9EE2-4AF1-9B39-765D7576DC35}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7893603837b74f599456fa9c66e247f0.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7893603837b74f599456fa9c66e247f0.Properties.Settings.get_Default():SC_7893603837b74f599456fa9c66e247f0.Properties.Sett" +
    "ings")]

namespace SC_7893603837b74f599456fa9c66e247f0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7893603837b74f599456fa9c66e247f0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7893603837b74f599456fa9c66e247f0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7893603837b74f599456fa9c66e247f0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7893603837b74f599456fa9c66e247f0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7893603837b74f599456fa9c66e247f0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_7893603837b74f599456fa9c66e247f0.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKHzn1oAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAAmjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEg7AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAoBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB8
OwAAAAAAAEgAAAACAAUAFCQAAHwWAAABAAAAAAAAAJA6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwC6AAAAAQAAEXIBAABwAnsCAAAEcxAAAAoKBhpvEQAA
CgZvEgAACnIjAABwcjkAAHBvEwAACiYGbxIAAApycwAAcHKNAABwbxMAAAomBm8SAAAKcpsAAHBy
tQAAcG8TAAAKJgZvEgAACnLfAABwA28TAAAKJgZvEgAACnL1AABwBW8TAAAKJgZvEgAACnIHAQBw
chcBAHBvEwAACiYGbxIAAApyJwEAcARvEwAACiYGbxQAAAom3goGLAYGbxUAAArcKgAAARAAAAIA
EQCerwAKAAAAABMwAwBAAAAAAAAAAAIoFgAACgICewQAAARvFAAABn0BAAAEAgJ7AQAABBRvFwAA
CnQPAAABfQIAAAQCAnsFAAAEbxcAAAZ9AwAABCpiAigYAAAKAnsBAAAEAnsCAAAEbxkAAAoqAAAA
EzAFAGYAAAACAAARAnsFAAAEbxYAAAYXjSIAAAElFh98nW8aAAAKChYLKz8GB5oXjSIAAAElFh86
nW8aAAAKDAJ7BgAABG8LAAAGAnsGAAAECBaabwkAAAYCewYAAAQIF5pvBwAABgcXWAsHBo5pMrsq
HgIoDgAABioqAgMEBSgbAAAKKiYCFgMoHAAACipaAywIAhYoHQAACipyNwEAcHMeAAAKeiYCFwMo
HAAACipaAywIAhcoHQAACipyNwEAcHMeAAAKeh4CKB8AAAoqHgIoIAAACioeAighAAAKKn4CKCIA
AAoCAnMTAAAGfQQAAAQCAnMVAAAGfQUAAAQqBipuAnsGAAAELBICewYAAARvDAAABgIUfQYAAAQq
AAAAEzAFAEkAAAADAAARFgorLgQGlA4EctQBAHAoIwAACjMZAgUGmgIEBpQoJAAACg4EcwYAAAZ9
BgAABAYXWAoGAzLOAm8SAAAGAm8PAAAGAigQAAAGKjoCKCUAAAoCA30HAAAEKoICewcAAARvJgAA
Cm8nAAAKcuYBAHBvKAAACm8pAAAKKjoCKCUAAAoCA30IAAAEKpYCewgAAARvKgAACnL8AQBwbysA
AAooLAAACm8tAAAKdCMAAAEqlgJ7CAAABG8qAAAKciwCAHBvKwAACigsAAAKby0AAAp0IwAAASqW
AnsIAAAEbyoAAApyVAIAcG8rAAAKKCwAAApvLQAACnQjAAABKh4CKCUAAAoqrn4JAAAELR5yfgIA
cNAHAAACKC4AAApvLwAACnMwAAAKgAkAAAR+CQAABCoafgoAAAQqHgKACgAABCoafgsAAAQqHgIo
MQAACioucx4AAAaACwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAYBwAA
I34AAIQHAADcCQAAI1N0cmluZ3MAAAAAYBEAAPACAAAjVVMAUBQAABAAAAAjR1VJRAAAAGAUAAAc
AgAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAALgAAAAgAAAALAAAAHwAAABEA
AAAxAAAAEAAAAAMAAAAFAAAACwAAAAwAAAABAAAABwAAAAEAAAAAAIYEAQAAAAAABgBvA1cHBgAD
BFcHBgC7AkQHDwDLBwAABgDoAjIFBgBSAzIFBgAzAzIFBgDqAzIFBgCPAzIFBgCoAzIFBgD/AjIF
BgAaA0sECgDDA+sBDgBmAM8GEgCfBdsIEgB7AdsICgB8BusBFgBtBusBCgD7BesBCgAPCesBBgCz
COoEBgCeAkQHBgCNBncHBgDvBR0FGgBuAnAEGgDPAnAEGgBOAggFBgCDAlcHEgBxAdwFEgAQAh0B
EgBkBdsIEgAgB9sIBgCWAeoEBgBaBuoEBgBlBOoEBgDCBeoEHgABAPcGHgAqAPcGHgBNAPcGDgB/
AM8GDgAaAM8GUwB9CQAADgCQAM8GBgAXAuoEBgCiAeoEBgC4CTIFAAAAAMwAAAAAAAEAAQABABAA
/QQAABAAAQABAAEAEABfBgAARQAEAAYAAQAQAPEIAABRAAQADgABABAATQgAAFUABwATAAEAEAAV
CAAAVQAIABUAAAAQAH4H2gdVAAkAGQAAARAARAjaB20ACwAdAAEAswbXAAEArQXbAAEAZQHfAAYA
TQjiAAYAFQjmAAYAXwbqAAEA/wjuAAEA/wjuABEA8QTyABEAPgL2ABEAhgH6AFAgAAAAAIEA0Qn+
AAEAKCEAAAAAxgAhBAYABAB0IQAAAADGACwEBgAEAJAhAAAAAMYAnwgGAAQAAiIAAAAAhhgtBwYA
BAAKIgAAAACGGC0HVwAEABUiAAAAAIYIHAIQAAcAHyIAAAAAhgi/BAUBCAA2IgAAAACGCMYBEAAJ
AEAiAAAAAIYIrgQFAQoAVyIAAAAAhgCtCQYACwBfIgAAAACGALoIBgALAGciAAAAAIYAvQhnAAsA
byIAAAAAhhgtBwYACwCPIgAAAADGAYoIBgALAJEiAAAAAIEASAEGAAsAsCIAAAAAxgBdCQoBCwCP
IgAAAADGAZ8IBgAPAAUjAAAAAIYYLQcWAQ8AFCMAAAAAhgjsAI8AEAA1IwAAAACGGC0HFgEQAEQj
AAAAAIYIcAgcAREAaiMAAAAAhgj7ABwBEQCQIwAAAACGCNUAHAERALYjAAAAAIMYLQcGABEAviMA
AAAAkwiJBiABEQDqIwAAAACTCCYCJQERAPEjAAAAAJMIMgIqAREA+SMAAAAAlgjPCDABEgAAJAAA
AACGGC0HBgASAAgkAAAAAJEYMwc1ARIAAAABAFwBAAACAJgIAAADAGwEAAABAIIGAAACAB8IAAAD
AAkGAAABAEUEAAABAEUEAAABAEUEAAABAEUEAAABAJAIAAACADoHAAADAFkIAAAEAAkGAAABABUJ
AAABABUJAAABAEUECQAtBwEAEQAtBwYAGQAtBwoAKQAtBxAAMQAtBxAAOQAtBxAAQQAtBxAASQAt
BxAAUQAtBxAAWQAtBxAAYQAtBxAAaQAtBwYAsQAtBwYA0QAtBxUA4QAtBwYAgQAtByAA6QAMAicA
gQBhCC0A+QA4BDIA6QDBCToACQFmAgYAoQAhBAYAcQB7BT4AoQAsBAYAcQCNBUMAGQHJCFAAiQAt
B1cAiQDhBGEAiQDQBAEAIQEtBxAAiQCtCQYAiQC6CAYAiQC9CGcAoQAtBwYAoQARAW8AoQAzCHYA
qQAtBwYAoQApAXwAKQFEBYIAMQHQAYgAOQGdBo8AoQAJCJQAQQHYBJoAoQCYCaEASQFpCacAYQG0
Aa4AYQG0CbcAuQAtB70A2QAtBwYALgALAFUBLgATAF4BLgAbAH0BLgAjAIYBLgArAK8BLgAzAK8B
LgA7AK8BLgBDAIYBLgBLALUBLgBTAK8BLgBbAMwBQwBjABYC4wBrABYCKQFzAH0BSQFzAH0BYQF7
ABYCGwBIAGsAAwABAAUABQAGAAYABwAJAAgACwAAACACOQEAAMMEPQEAAMoBOQEAALIEPQEAAPAA
QQEAAHQIOQEAAP8AOQEAANkAOQEAAI0GRgEAAEYCSwEAANMIUAEBAAcAAwABAAgABQABAAkABwAB
AAoACQACABQACwACABYADQACABcADwACABgAEQACABoAEwACABsAFQABABwAFQACAB0AFwAEgAAA
AQAAAAAAAAAAAAAAAACoAAAABAAAAAAAAAAAAAAAxQA/AQAAAAAOAAAAAAAAAAAAAADOAB8JAAAA
AA4AAAAAAAAAAAAAAM4AEwYAAAAABAAAAAAAAAAAAAAAxQAdAQAAAAAOAAAAAAAAAAAAAADOADwJ
AAAAAAQAAAAAAAAAAAAAAMUA6gQAAAAADgAAAAAAAAAAAAAAzgA2BgAAAAAAAAAAAQAAAIgHAAAA
AAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVD
b25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5l
Y3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAA
U0NfNzg5MzYwMzgzN2I3NGY1OTk0NTZmYTljNjZlMjQ3ZjAAPE1vZHVsZT4AZ2V0X2NmZ3RwbENN
UGxhdGZvcm1EQgBnZXRfUGxhdGZvcm1EQgBnZXRfY2Znc2xhQ29tcG9uZW50SUQAR2V0T3V0cHV0
SUQAU3lzdGVtLkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAE1hcmtPdXRwdXRz
RmluaXNoZWQAc291cmNlaWQAY29tcG9uZW50aWQARGJDb21tYW5kAFNxbENvbW1hbmQAZGVmYXVs
dEluc3RhbmNlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AHNldF90aXRsZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5QaXBlbGluZQBzZXRfQ29tbWFuZFR5cGUAc2V0X3doZXJlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAEVk
aXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9u
VXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRy
aWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBU
YXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFz
c2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0
ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJ
U1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUA
QWRkV2l0aFZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAG1zZwBT
eXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfNzg5MzYwMzgzN2I3NGY1OTk0NTZmYTljNjZlMjQ3ZjAu
ZGxsAHNldF90aXRsZV9Jc051bGwAc2V0X3doZXJlX0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNl
dF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVj
dGlvbkNvbGxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBS
ZWxlYXNlQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAG15UGxhdGZvcm1Db25uZWN0aW9uAEludmFs
aWRPcGVyYXRpb25FeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAE91dHB1
dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWlj
cm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAAQ2hhcgBPdXRwdXQwQnVmZmVyAFBpcGVs
aW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9u
TWFuYWdlcgBteVBsYXRmb3JtQ29ubmVjdGlvbk1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIAU3FsUGFyYW1ldGVyAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ183ODkz
NjAzODM3Yjc0ZjU5OTQ1NmZhOWM2NmUyNDdmMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU0NfNzg5MzYwMzgzN2I3NGY1OTk0NTZmYTljNjZlMjQ3ZjAuUHJv
cGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1
bW5JbmRleGVzAFNldHRpbmdzAENvbm5lY3Rpb25zAEJ1ZmZlcnMAZ2V0X1BhcmFtZXRlcnMAZ2V0
X2NmZ3BrZ0xvbmdMaXN0RmlsdGVycwBGaW5pc2hPdXRwdXRzAHN0YXR1cwBDcmVhdGVOZXdPdXRw
dXRSb3dzAE9iamVjdABTZXRFbmRPZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABTeXN0ZW0uRGF0
YS5TcWxDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGlu
ZUhvc3QAUHJpbWVPdXRwdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFs
Q29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABBZGRSb3cAZ2V0X0Fzc2VtYmx5AEV4ZWN1dGVO
b25RdWVyeQBMb2dFbnRyeQAAAAAhbgBsAGgALgBsAG8AZwBfAGEAZABkAEUAbgB0AHIAeQAAFUAA
YwBvAG0AcABvAG4AZQBuAHQAADlQAHIAZQBwAGEAcgBlAEYAbwByAFYAaQBzAHUAYQBsAGkAegBh
AHQAaQBvAG4ALgBkAHQAcwB4AAAZQABzAG8AdQByAGMAZQBfAHQAeQBwAGUAAA1TAEMAUgBJAFAA
VAAAGUAAcwBvAHUAcgBjAGUAXwBuAGEAbQBlAAApQQBkAGQAIABMAG8AbgBnAGwAaQBzAHQAIABG
AGkAbAB0AGUAcgBzAAAVQABzAG8AdQByAGMAZQBfAGkAZAAAEUAAbQBlAHMAcwBhAGcAZQAAD0AA
YQBjAHQAaQBvAG4AAA9FAFgARQBDAFUAVABFAAAPQABzAHQAYQB0AHUAcwAAgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAABVQAGwAYQB0
AGYAbwByAG0ARABCAAAvYwBmAGcAXwBwAGsAZwBfAEwAbwBuAGcATABpAHMAdABGAGkAbAB0AGUA
cgBzAAAnYwBmAGcAXwBzAGwAYQBfAEMAbwBtAHAAbwBuAGUAbgB0AEkARAAAKWMAZgBnAF8AdABw
AGwAXwBDAE0AUABsAGEAdABmAG8AcgBtAEQAQgAAcVMAQwBfADcAOAA5ADMANgAwADMAOAAzADcA
YgA3ADQAZgA1ADkAOQA0ADUANgBmAGEAOQBjADYANgBlADIANAA3AGYAMAAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAABofY8/ySpkWfJd3choCJOQAEIAEBCAMgAAEF
IAEBEREEIAEBDgUgAQERZQQHARJBBiACAQ4SPQUgAQEReQQgABJ9ByACEoCBDhwDIAAIBCABHBwE
IAEBHAcHAx0OCB0OBiABHQ4dAwkgAwESSR0IEk0FIAIBCBwDIAACAwcBCAYAAggSTQ4FIAEdCAgF
IAASgJUFIAASgJkGIAESgJ0OBCAAEjkFIAASgKEGIAESgKUcBQAAEoCpBiABHBKArQgAARKAsRGA
tQUgABKAuQcgAgEOEoC5CLd6XFYZNOCJCImEXc2AgMyRAwYSOQMGEj0CBg4DBhIUAwYSGAMGEgwD
BhJRAwYSXQMGEmEDBhIgBiADAQ4ODgQgAQECCyAEAQgdCB0SSRJNBSABARJRAyAADgQAABJdBAAA
EmEFAAEBEmEEAAASIAMAAAEDKAAOAygAAgQoABI5BAgAEl0ECAASYQQIABIgCAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ183ODkzNjAzODM3Yjc0
ZjU5OTQ1NmZhOWM2NmUyNDdmMAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE2AABJAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJh
bWV3b3JrIDQuNQQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABwOwAAAAAAAAAAAACKOwAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAfDsAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
QwBfADcAOAA5ADMANgAwADMAOAAzADcAYgA3ADQAZgA1ADkAOQA0ADUANgBmAGEAOQBjADYANgBl
ADIANAA3AGYAMAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4A
MAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANwA4ADkAMwA2ADAAMwA4
ADMANwBiADcANABmADUAOQA5ADQANQA2AGYAYQA5AGMANgA2AGUAMgA0ADcAZgAwAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA3ADgAOQAz
ADYAMAAzADgAMwA3AGIANwA0AGYANQA5ADkANAA1ADYAZgBhADkAYwA2ADYAZQAyADQANwBmADAA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANwA4ADkAMwA2
ADAAMwA4ADMANwBiADcANABmADUAOQA5ADQANQA2AGYAYQA5AGMANgA2AGUAMgA0ADcAZgAwAAAA
NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACcOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_7893603837b74f599456fa9c66e247f0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::cfg_pkg_LongListFilters,User::cfg_sla_ComponentID,User::cfg_tpl_CMPlatformDB</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">29</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Longlist\Fill Filters\Parse filter string.Connections[PlatformDB]"
                          connectionManagerID="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          name="PlatformDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Longlist\Fill Filters\Parse filter string.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Longlist\Fill Filters\Parse filter string.Outputs[Output 0].Columns[where]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Execute Feature\Longlist\Fill Filters\Parse filter string.Outputs[Output 0].Columns[where]"
                              name="where" />
                            <outputColumn
                              refId="Package\Execute Feature\Longlist\Fill Filters\Parse filter string.Outputs[Output 0].Columns[title]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Execute Feature\Longlist\Fill Filters\Parse filter string.Outputs[Output 0].Columns[title]"
                              name="title" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Write filters to project DB"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[DEF_COMPANYLONGLIST_FILTERS]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Inputs[OLE DB Destination Input].Columns[where]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="where"
                              externalMetadataColumnId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Inputs[OLE DB Destination Input].ExternalColumns[where]"
                              lineageId="Package\Execute Feature\Longlist\Fill Filters\Parse filter string.Outputs[Output 0].Columns[where]" />
                            <inputColumn
                              refId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Inputs[OLE DB Destination Input].Columns[title]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="title"
                              externalMetadataColumnId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Inputs[OLE DB Destination Input].ExternalColumns[title]"
                              lineageId="Package\Execute Feature\Longlist\Fill Filters\Parse filter string.Outputs[Output 0].Columns[title]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                              dataType="i4"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Inputs[OLE DB Destination Input].ExternalColumns[title]"
                              dataType="wstr"
                              length="50"
                              name="title" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Inputs[OLE DB Destination Input].ExternalColumns[where]"
                              dataType="wstr"
                              length="250"
                              name="where" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Longlist\Fill Filters.Paths[Output 0]"
                      endId="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB.Inputs[OLE DB Destination Input]"
                      name="Output 0"
                      startId="Package\Execute Feature\Longlist\Fill Filters\Parse filter string.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Longlist\Update Questionnaire tile"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{e884ad77-c3c2-411a-99ff-ca1464303e45}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update Questionnaire tile"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStatementSource="delete from dbo.tile_attribute where tile_name='Questionnaire'&#xA;;with cm as (&#xA; select&#xA;  cll.company_id&#xA;  , left(cll.company_name,150) as company_name&#xA;  , q.label&#xA;  , case when charindex('#',css.score_name)&gt;0&#xA;   then left(css.score_name,charindex('#',css.score_name)-1)&#xA;   else left(css.score_name,charindex(' ',css.score_name)-1) end as score_number&#xA;  , css.score_value&#xA;  , case when charindex('#',css.score_name)&gt;0 then 'Comment' else 'Main answer' end as answer_type&#xA; from&#xA;  [dbo].[company_score] cs JOIN&#xA;  [dbo].[company_score_str] css ON css.score_name=cs.score_label JOIN&#xA;  [dbo].[company_long_list] cll ON cll.company_id=css.company_id JOIN&#xA;  [dbo].[company_question] q ON left(q.score_name,charindex(' ',q.score_name)-1) = case when charindex('#',cs.score_label)&gt;0&#xA;   then left(cs.score_label,charindex('#',cs.score_label)-1)&#xA;   else left(cs.score_label,charindex(' ',cs.score_label)-1) end&#xA; WHERE&#xA;  left(cs.score_label,2)='Q0'&#xA;  and&#xA;  charindex('#',q.score_name) = 0&#xA; )&#xA;insert into dbo.tile_attribute (tile_id, tile_name, bvd_id, company_name, attribute_name, attribute_seq, attribute_value, attribute_benchmark_value)&#xA;select&#xA; 76&#xA; , 'Questionnaire'&#xA; , company_id&#xA; , company_name&#xA; , label&#xA; , row_number() over (partition by company_id order by score_number asc)&#xA; , replace([Main answer],'%20',  ' ')&#xA; , replace([Comment],'%20',  ' ')&#xA;from&#xA; cm&#xA;pivot(&#xA; max(score_value) for answer_type in ([Main answer],[Comment])&#xA;) pvt" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Longlist.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{ddb3d685-ec6f-40e3-8b4c-0fd18ecfdf6e}"
              DTS:From="Package\Execute Feature\Longlist\Create Company Longlist Web"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Execute Feature\Longlist\Create Longlist Stats" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Longlist.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{8d9ce2d7-0b17-428b-bc7a-6ecfd7661b30}"
              DTS:From="Package\Execute Feature\Longlist\Create Object Names Web"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Execute Feature\Longlist\Create Company Longlist Web" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Longlist.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{c5fdcf87-7a6f-4034-b94b-de5afac99ca5}"
              DTS:From="Package\Execute Feature\Longlist\Create Longlist Stats"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Execute Feature\Longlist\Create Longlist Filters" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Longlist.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{4779cccf-5b79-4c3a-bad2-07158af5ee37}"
              DTS:EvalOp="1"
              DTS:Expression="len(@[User::cfg_pkg_LongListFilters])&gt;0"
              DTS:From="Package\Execute Feature\Longlist\Create Longlist Filters"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Execute Feature\Longlist\Fill Filters" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Longlist.PrecedenceConstraints[Constraint 9]"
              DTS:CreationName=""
              DTS:DTSID="{c0423bd1-ca81-4ede-b6ea-4608a5886049}"
              DTS:From="Package\Execute Feature\Longlist\Create Longlist Filters"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 9"
              DTS:To="Package\Execute Feature\Longlist\Update Questionnaire tile" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Temporal Longlist"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{f6bea37e-354d-470a-be3a-ba4dd6d6c186}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Temporal Longlist">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Temporal Longlist\Create Company Longlist Temporal"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{60db3f2c-4e47-4f15-99f5-d9ad1ecd9bc0}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Company Longlist Temporal"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">" IF OBJECT_ID('dbo.DIM_COMPANYLONGLIST_TEMPORAL', 'V') IS NOT NULL DROP VIEW dbo.DIM_COMPANYLONGLIST_TEMPORAL
 IF OBJECT_ID('dbo.DIM_COMPANYLONGLIST_TEMPORAL', 'U') IS NOT NULL DROP TABLE dbo.DIM_COMPANYLONGLIST_TEMPORAL

 DECLARE @debug AS BIT = 0
 DECLARE @colsinta AS NVARCHAR(MAX), @colsreala AS NVARCHAR(MAX)--, @colsstra AS NVARCHAR(MAX)
 DECLARE @colsb AS NVARCHAR(MAX)
 DECLARE @query AS NVARCHAR(MAX);
 DECLARE @dth AS NVARCHAR(MAX) = '"+( @[User::cfg_sla_DatahandlerDataSource]== @[User::cfg_sla_ProjectDataSource]?"": @[User::cfg_sla_DatahandlerDataSource] +".")+ @[User::cfg_sla_DatahandlerCatalog] +"."+ @[User::cfg_sla_DatahandlerVersion] +"';

 select @colsinta = STUFF((SELECT distinct ',' + QUOTENAME(score_label)
    FROM dbo.company_score where is_temporal=1 and data_type IN ('int', 'bigint', 'tinyint', 'smallint')-- and hostTableName = 'DIM_COMPANYLONGLIST_WEB'--company_score_int 
    FOR XML PATH(''), TYPE
    ).value('.', 'NVARCHAR(MAX)') 
   ,1,1,'')
 select @colsreala = STUFF((SELECT distinct ',' + QUOTENAME(score_label)
    FROM dbo.company_score where is_temporal=1 and data_type IN ('real', 'decimal', 'float')-- and hostTableName = 'DIM_COMPANYLONGLIST_WEB'--company_score_real
    FOR XML PATH(''), TYPE
    ).value('.', 'NVARCHAR(MAX)') 
   ,1,1,'')
 /*select @colsstra = STUFF((SELECT distinct ',' + QUOTENAME(score_label)
    FROM dbo.company_score where is_temporal=1 and data_type IN ('nvarchar', 'varchar', 'text', 'ntext', 'char', 'nchar')-- and hostTableName = 'DIM_COMPANYLONGLIST_WEB' --company_score_str
    FOR XML PATH(''), TYPE
    ).value('.', 'NVARCHAR(MAX)') 
   ,1,1,'')*/

 IF @debug=1 PRINT 'INT: ' + @colsinta
 IF @debug=1 PRINT 'REAL: ' + @colsreala
 --IF @debug=1 PRINT @colsstra
 PRINT 'INT: ' + cast(isnull(len(@colsinta),0) as varchar(10)) + ', REAL: ' + cast(isnull(len(@colsreala),0) as varchar(10))

 SELECT @colsb = STUFF((SELECT ', [' + score_label + ']'
    FROM dbo.company_score where is_temporal=1
    ORDER BY score_id
    FOR XML PATH(''), TYPE
    ).value('.', 'NVARCHAR(MAX)') 
   ,1,2,'')

 /*set @query = 'SELECT cll.company_id  AS companyPrimKey
       , cll.company_name AS companyName,isnull(tabint.period_label,tabreal.period_label) as period_label' + ISNULL(', ' + @colsb, '') + ' 
     --INTO dbo.DIM_COMPANYLONGLIST_TEMPORAL
	 FROM dbo.company_long_list cll '*/

-- Only integers
 IF isnull(len(@colsinta),0) &gt; 0 and isnull(len(@colsreala),0) = 0
  set @query = 'SELECT cll.company_id  AS companyPrimKey
       , cll.company_name AS companyName,tabint.period_label as period_label' + ISNULL(', ' + @colsb, '') + ' 
     INTO dbo.DIM_COMPANYLONGLIST_TEMPORAL
	 FROM dbo.company_long_list cll 
      LEFT JOIN 
      (select
			company_id, [period_label]' + ISNULL(', ' + @colsinta, '')+' 
      from
			dbo.company_time_score_int  ctsi JOIN
			'+@dth+'.calendar c ON c.id=ctsr.score_time
      pivot 
       (
        max(score_value)
        for score_name in (' + ISNULL(@colsinta, '') + ')
       ) p  
      ) tabint on cll.company_id=tabint.company_id '
-- Only Reals
 IF isnull(len(@colsinta),0) = 0 and isnull(len(@colsreala),0) &gt; 0
  set @query = ' SELECT cll.company_id  AS companyPrimKey
       , cll.company_name AS companyName,tabreal.period_label as period_label' + ISNULL(', ' + @colsb, '') + ' 
     INTO dbo.DIM_COMPANYLONGLIST_TEMPORAL
	 FROM dbo.company_long_list cll 
      LEFT JOIN 
      (select
			company_id, [period_label]' + ISNULL(', ' + @colsreala, '')+' 
      from
			dbo.company_time_score_real  ctsr JOIN
			'+@dth+'.calendar c ON c.id=ctsr.score_time
      pivot 
       (
        max(score_value)
        for score_name in (' + ISNULL(@colsreala, '') + ')
       ) p  
      ) tabreal on cll.company_id=tabreal.company_id '

 IF isnull(len(@colsinta),0) &gt; 0 and isnull(len(@colsreala),0) &gt; 0
  set @query = 'SELECT cll.company_id  AS companyPrimKey
       , cll.company_name AS companyName,isnull(tabint.period_label,tabreal.period_label) as period_label' + ISNULL(', ' + @colsb, '') + ' 
     INTO dbo.DIM_COMPANYLONGLIST_TEMPORAL
	 FROM dbo.company_long_list cll  
      LEFT JOIN 
      (select
			company_id, [period_label]' + ISNULL(', ' + @colsreala, '')+' 
      from
			dbo.company_time_score_real  ctsr JOIN
			'+@dth+'.calendar c ON c.id=ctsr.score_time
      pivot 
       (
        max(score_value)
        for score_name in (' + ISNULL(@colsreala, '') + ')
       ) p  
      ) tabreal on cll.company_id=tabreal.company_id FULL OUTER JOIN
	  (select
			company_id, [period_label]' + ISNULL(', ' + @colsinta, '')+' 
      from
			dbo.company_time_score_int  ctsi JOIN
			'+@dth+'.calendar c ON c.id=ctsi.score_time
      pivot 
       (
        max(score_value)
        for score_name in (' + ISNULL(@colsinta, '') + ')
       ) p  
      ) tabint on cll.company_id=tabint.company_id AND tabint.period_label=tabreal.period_label'     
 /*IF len(@colsstra) &gt; 0
  set @query = @query + ' 
      LEFT JOIN 
       (select company_id' + ISNULL(', ' + @colsstra, '')+'
       from dbo.company_score_str 
       pivot 
        (
         max(score_value)
         for score_name in (' + ISNULL(@colsstra, '') + ')
        ) p  
       ) tabstr on cll.company_id=tabstr.company_id '*/

 IF @debug=1 PRINT @query

if isnull(len(@colsb),0) &gt; 0
begin
  EXEC (@query);
  
  delete from [dbo].DIM_COMPANYLONGLIST_TEMPORAL where period_label is null

  alter table [dbo].DIM_COMPANYLONGLIST_TEMPORAL alter column companyPrimKey varchar(25) not null
  alter table [dbo].DIM_COMPANYLONGLIST_TEMPORAL alter column period_label varchar(25) not null
  
  exec('alter table [dbo].DIM_COMPANYLONGLIST_TEMPORAL add constraint pk_clt primary key (companyPrimKey,period_label)')
 end
 "</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStatementSource=" IF OBJECT_ID('dbo.DIM_COMPANYLONGLIST_TEMPORAL', 'V') IS NOT NULL DROP VIEW dbo.DIM_COMPANYLONGLIST_TEMPORAL&#xA; IF OBJECT_ID('dbo.DIM_COMPANYLONGLIST_TEMPORAL', 'U') IS NOT NULL DROP TABLE dbo.DIM_COMPANYLONGLIST_TEMPORAL&#xA;&#xA; DECLARE @debug AS BIT = 0&#xA; DECLARE @colsinta AS NVARCHAR(MAX), @colsreala AS NVARCHAR(MAX)--, @colsstra AS NVARCHAR(MAX)&#xA; DECLARE @colsb AS NVARCHAR(MAX)&#xA; DECLARE @query AS NVARCHAR(MAX);&#xA; DECLARE @dth AS NVARCHAR(MAX) = 'prv_dev_dth.dbo';&#xA;&#xA; select @colsinta = STUFF((SELECT distinct ',' + QUOTENAME(score_label)&#xA;    FROM dbo.company_score where is_temporal=1 and data_type IN ('int', 'bigint', 'tinyint', 'smallint')-- and hostTableName = 'DIM_COMPANYLONGLIST_WEB'--company_score_int &#xA;    FOR XML PATH(''), TYPE&#xA;    ).value('.', 'NVARCHAR(MAX)') &#xA;   ,1,1,'')&#xA; select @colsreala = STUFF((SELECT distinct ',' + QUOTENAME(score_label)&#xA;    FROM dbo.company_score where is_temporal=1 and data_type IN ('real', 'decimal', 'float')-- and hostTableName = 'DIM_COMPANYLONGLIST_WEB'--company_score_real&#xA;    FOR XML PATH(''), TYPE&#xA;    ).value('.', 'NVARCHAR(MAX)') &#xA;   ,1,1,'')&#xA; /*select @colsstra = STUFF((SELECT distinct ',' + QUOTENAME(score_label)&#xA;    FROM dbo.company_score where is_temporal=1 and data_type IN ('nvarchar', 'varchar', 'text', 'ntext', 'char', 'nchar')-- and hostTableName = 'DIM_COMPANYLONGLIST_WEB' --company_score_str&#xA;    FOR XML PATH(''), TYPE&#xA;    ).value('.', 'NVARCHAR(MAX)') &#xA;   ,1,1,'')*/&#xA;&#xA; IF @debug=1 PRINT 'INT: ' + @colsinta&#xA; IF @debug=1 PRINT 'REAL: ' + @colsreala&#xA; --IF @debug=1 PRINT @colsstra&#xA; PRINT 'INT: ' + cast(isnull(len(@colsinta),0) as varchar(10)) + ', REAL: ' + cast(isnull(len(@colsreala),0) as varchar(10))&#xA;&#xA; SELECT @colsb = STUFF((SELECT ', [' + score_label + ']'&#xA;    FROM dbo.company_score where is_temporal=1&#xA;    ORDER BY score_id&#xA;    FOR XML PATH(''), TYPE&#xA;    ).value('.', 'NVARCHAR(MAX)') &#xA;   ,1,2,'')&#xA;&#xA; /*set @query = 'SELECT cll.company_id  AS companyPrimKey&#xA;       , cll.company_name AS companyName,isnull(tabint.period_label,tabreal.period_label) as period_label' + ISNULL(', ' + @colsb, '') + ' &#xA;     --INTO dbo.DIM_COMPANYLONGLIST_TEMPORAL&#xA;&#x9; FROM dbo.company_long_list cll '*/&#xA;&#xA;-- Only integers&#xA; IF isnull(len(@colsinta),0) &gt; 0 and isnull(len(@colsreala),0) = 0&#xA;  set @query = 'SELECT cll.company_id  AS companyPrimKey&#xA;       , cll.company_name AS companyName,tabint.period_label as period_label' + ISNULL(', ' + @colsb, '') + ' &#xA;     INTO dbo.DIM_COMPANYLONGLIST_TEMPORAL&#xA;&#x9; FROM dbo.company_long_list cll &#xA;      LEFT JOIN &#xA;      (select&#xA;&#x9;&#x9;&#x9;company_id, [period_label]' + ISNULL(', ' + @colsinta, '')+' &#xA;      from&#xA;&#x9;&#x9;&#x9;dbo.company_time_score_int  ctsi JOIN&#xA;&#x9;&#x9;&#x9;'+@dth+'.calendar c ON c.id=ctsr.score_time&#xA;      pivot &#xA;       (&#xA;        max(score_value)&#xA;        for score_name in (' + ISNULL(@colsinta, '') + ')&#xA;       ) p  &#xA;      ) tabint on cll.company_id=tabint.company_id '&#xA;-- Only Reals&#xA; IF isnull(len(@colsinta),0) = 0 and isnull(len(@colsreala),0) &gt; 0&#xA;  set @query = ' SELECT cll.company_id  AS companyPrimKey&#xA;       , cll.company_name AS companyName,tabreal.period_label as period_label' + ISNULL(', ' + @colsb, '') + ' &#xA;     INTO dbo.DIM_COMPANYLONGLIST_TEMPORAL&#xA;&#x9; FROM dbo.company_long_list cll &#xA;      LEFT JOIN &#xA;      (select&#xA;&#x9;&#x9;&#x9;company_id, [period_label]' + ISNULL(', ' + @colsreala, '')+' &#xA;      from&#xA;&#x9;&#x9;&#x9;dbo.company_time_score_real  ctsr JOIN&#xA;&#x9;&#x9;&#x9;'+@dth+'.calendar c ON c.id=ctsr.score_time&#xA;      pivot &#xA;       (&#xA;        max(score_value)&#xA;        for score_name in (' + ISNULL(@colsreala, '') + ')&#xA;       ) p  &#xA;      ) tabreal on cll.company_id=tabreal.company_id '&#xA;&#xA; IF isnull(len(@colsinta),0) &gt; 0 and isnull(len(@colsreala),0) &gt; 0&#xA;  set @query = 'SELECT cll.company_id  AS companyPrimKey&#xA;       , cll.company_name AS companyName,isnull(tabint.period_label,tabreal.period_label) as period_label' + ISNULL(', ' + @colsb, '') + ' &#xA;     INTO dbo.DIM_COMPANYLONGLIST_TEMPORAL&#xA;&#x9; FROM dbo.company_long_list cll  &#xA;      LEFT JOIN &#xA;      (select&#xA;&#x9;&#x9;&#x9;company_id, [period_label]' + ISNULL(', ' + @colsreala, '')+' &#xA;      from&#xA;&#x9;&#x9;&#x9;dbo.company_time_score_real  ctsr JOIN&#xA;&#x9;&#x9;&#x9;'+@dth+'.calendar c ON c.id=ctsr.score_time&#xA;      pivot &#xA;       (&#xA;        max(score_value)&#xA;        for score_name in (' + ISNULL(@colsreala, '') + ')&#xA;       ) p  &#xA;      ) tabreal on cll.company_id=tabreal.company_id FULL OUTER JOIN&#xA;&#x9;  (select&#xA;&#x9;&#x9;&#x9;company_id, [period_label]' + ISNULL(', ' + @colsinta, '')+' &#xA;      from&#xA;&#x9;&#x9;&#x9;dbo.company_time_score_int  ctsi JOIN&#xA;&#x9;&#x9;&#x9;'+@dth+'.calendar c ON c.id=ctsi.score_time&#xA;      pivot &#xA;       (&#xA;        max(score_value)&#xA;        for score_name in (' + ISNULL(@colsinta, '') + ')&#xA;       ) p  &#xA;      ) tabint on cll.company_id=tabint.company_id AND tabint.period_label=tabreal.period_label'     &#xA; /*IF len(@colsstra) &gt; 0&#xA;  set @query = @query + ' &#xA;      LEFT JOIN &#xA;       (select company_id' + ISNULL(', ' + @colsstra, '')+'&#xA;       from dbo.company_score_str &#xA;       pivot &#xA;        (&#xA;         max(score_value)&#xA;         for score_name in (' + ISNULL(@colsstra, '') + ')&#xA;        ) p  &#xA;       ) tabstr on cll.company_id=tabstr.company_id '*/&#xA;&#xA; IF @debug=1 PRINT @query&#xA;&#xA;if isnull(len(@colsb),0) &gt; 0&#xA;begin&#xA;  EXEC (@query);&#xA;  &#xA;  delete from [dbo].DIM_COMPANYLONGLIST_TEMPORAL where period_label is null&#xA;&#xA;  alter table [dbo].DIM_COMPANYLONGLIST_TEMPORAL alter column companyPrimKey varchar(25) not null&#xA;  alter table [dbo].DIM_COMPANYLONGLIST_TEMPORAL alter column period_label varchar(25) not null&#xA;  &#xA;  exec('alter table [dbo].DIM_COMPANYLONGLIST_TEMPORAL add constraint pk_clt primary key (companyPrimKey,period_label)')&#xA; end&#xA; " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Temporal Longlist\Create Temporal Object Names Web"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{4b33d380-f0ba-46ac-af79-41337cb0f222}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Temporal Object Names Web"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{224891D1-58DA-42E2-B7C3-C87943A04059}"
                  SQLTask:SqlStatementSource=" IF OBJECT_ID('dbo.DEF_TEMPORAL_OBJECTNAMES_WEB', 'V') IS NOT NULL DROP VIEW dbo.[DEF_TEMPORAL_OBJECTNAMES_WEB]&#xA;GO&#xA;create view dbo.[DEF_TEMPORAL_OBJECTNAMES_WEB] as&#xA;select&#xA; score_id as [objNamePrimKey]&#xA; ,'a' + right([score_generic_name],5) as [objectGenericName]&#xA; ,'column' as [objectType]&#xA; , 'DIM_COMPANYLONGLIST' as [hostTableName]&#xA; ,score_label as [objectLabel]&#xA; ,is_numeric as [isNumeric]&#xA; ,display_in_fe as [displayInFE]&#xA; ,column_order as [columnOrder]&#xA; ,flex_width as [flexWidth]&#xA; ,case when data_type='int'&#xA;  then 1&#xA;  else case when data_type='real'&#xA;   then 2&#xA;   else 3 end end as [dataType]&#xA; ,default_scale as [defaultScale]&#xA; ,precision as [precision]&#xA; ,unit as [unit]&#xA; ,uni_polar as [uniPolar]&#xA;from&#xA; dbo.company_score where is_temporal=1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Temporal Longlist.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{491e4f90-d489-48fe-93b6-2a22c7c11728}"
              DTS:From="Package\Execute Feature\Temporal Longlist\Create Temporal Object Names Web"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Execute Feature\Temporal Longlist\Create Company Longlist Temporal" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{1900C788-43CF-4B0B-B82F-56E2EA44ED4D}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::cfg_pkg_NameOfApi]==&quot;CreateLonglist&quot; || @[User::cfg_pkg_NameOfApi]==&quot;CreateGroupedLonglist&quot;"
          DTS:From="Package\Execute Feature\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Execute Feature\Longlist" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{62251B82-358E-49F4-AA08-16E0560E5226}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::cfg_pkg_NameOfApi]==&quot;CreateLonglist&quot; || @[User::cfg_pkg_NameOfApi]==&quot;CreateGroupedLonglist&quot;"
          DTS:From="Package\Execute Feature\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Execute Feature\Temporal Longlist" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{32A97988-BA0B-4F64-B873-60F63C3A00FA}"
          DTS:From="Package\Execute Feature\Landscape"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Execute Feature\Landscape - Descriptors" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{7194EF17-9B2A-403A-A1E9-AC1CE635E9D0}"
          DTS:From="Package\Execute Feature\Longlist"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Execute Feature\Create Backup" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{10EF74E8-3763-490E-A21E-F3B6FDA0C830}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::cfg_pkg_NameOfApi]==&quot;CreateLandscape&quot;"
          DTS:From="Package\Execute Feature\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Execute Feature\Landscape" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{E59378B4-AE75-4048-B847-43BEA09A0F53}"
          DTS:From="Package\Execute Feature\Landscape - Descriptors"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Execute Feature\Create Backup" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize - specific"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{A36D35CF-58BE-45B8-9E2C-3B4D5560FF89}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize - specific">
      <DTS:Variables />
      <DTS:Executables />
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize - template"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{32B7A5F7-83D5-4C72-8517-BC972D1354E9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize - template">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Get server configuration"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{89AE37B5-5A67-4552-B0C6-E0C2770823EE}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get server configuration"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{024765D8-5311-4FD6-AC51-730FDA44254C}"
              SQLTask:SqlStatementSource="select @@ServerName AS DBServer, DB_NAME() AS DBName"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="DBServer"
                SQLTask:DtsVariableName="User::cfg_tpl_DBServer" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="DBName"
                SQLTask:DtsVariableName="User::cfg_tpl_DBName" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Initialize package configuration"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{94843112-946A-40E6-98E1-7D137CDF3EFC}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Initialize package configuration"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_9560e13f3ccd474984696163ed602485"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName"
              ReadWriteVariables="User::cfg_pkg_LongListFilters,User::cfg_pkg_NameOfApi,User::cfg_pkg_ProjectType">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Settings.get_Default():ST_9560e13f3ccd474984696163ed602485.Properties.Sett" +
    "ings")]

namespace ST_9560e13f3ccd474984696163ed602485.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_9560e13f3ccd474984696163ed602485.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0468E881-81F4-4705-81DD-986AAA4B302F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9560e13f3ccd474984696163ed602485</RootNamespace>
    <AssemblyName>ST_9560e13f3ccd474984696163ed602485</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_6.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig;
using Deloitte.PipelineFramework.PlatformConfig.Params;
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Reflection;
using System.Windows.Forms;
#endregion

namespace ST_9560e13f3ccd474984696163ed602485
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        public void Main()
        {
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetupLogger();
                deloitte.SetNonNullUserVariablesFor<ComponentParam>(deloitte.PackageConfig,"cfg_pkg_");
                Dts.Variables["cfg_pkg_NameOfApi"].Value = deloitte.Config.Header.NameOfApi.ToString();
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_9560e13f3ccd474984696163ed602485</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_9560e13f3ccd474984696163ed602485</msb:DisplayName>
		<msb:ProjectId>{6B037CA1-2AD6-4CAC-90B4-577B04D141A7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_9560e13f3ccd474984696163ed602485.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9560e13f3ccd474984696163ed602485")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9560e13f3ccd474984696163ed602485")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9560e13f3ccd474984696163ed602485.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9560e13f3ccd474984696163ed602485.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_9560e13f3ccd474984696163ed602485.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKXzn1oAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAti8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGQvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAvA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACY
LwAAAAAAAEgAAAACAAUASCEAAGQNAAABAAAAAAAAAKwuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwB0AAAAAQAAEQIoEAAACnMRAAAKCgZvEgAACgYGbxMA
AApyAQAAcG8BAAArAigQAAAKbxUAAApyEwAAcG8WAAAKBm8XAAAKbxgAAApvGQAACgsSAf4WEAAA
AW8aAAAKbxsAAAreCgYsBgZvHAAACtwCKBAAAAoWbx0AAAoqARAAAAIADABRXQAKAAAAAB4CKB4A
AAoqHgIoHwAACiqufgEAAAQtHnI3AABw0AMAAAIoIAAACm8hAAAKcyIAAAqAAQAABH4BAAAEKhp+
AgAABCoeAoACAAAEKhp+AwAABCoeAigjAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAA
AHY0LjAuMzAzMTkAAAAABQBsAAAALAQAACN+AACYBAAAdAYAACNTdHJpbmdzAAAAAAwLAACsAAAA
I1VTALgLAAAQAAAAI0dVSUQAAADICwAAnAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQsAAAD6ATMA
FgAAAQAAACMAAAAFAAAABgAAAAkAAAABAAAAIwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEA
AAAFAAAAAQAAAAEAAAABAAAAAAD5AwEAAAAAAAYAOQIXBQYAyAIXBQYAhQEEBQ8AiwUAAAYAsgGG
BAYAHAKGBAYA/QGGBAYArwKGBAYAWQKGBAYAcgKGBAYAyQGGBAYA5AE9AwoAjQKoAwoA/ACoAw4A
WAZuAw4A1wXlBQYAQAQ5BAYAaAEEBQYAMQY5BAYAwAQ3BQYAmARxBBIAOAHjAxIAmQHjAxIAGAFc
BAYATQEXBQoA0QOoAw4AIQQTAxYAzQWnABYAbgCnAA4AUwYTAw4ArwQTAwYAdwA5BAYAxwA5BAYA
gwA5BAYAawaGBAAAAAAlAAAAAAABAAEAAQAQAFEEAQA5AAEAAQAAABAAPgWaBU0AAQADAAABEAAK
BpoFYQADAAcAAwEAACMGAABFAAQACgARAEUEngARAOwAogARAF4ApgAGBk0AqgBWgBMGrQBWgMwA
rQBQIAAAAACGAFcEBgABAOAgAAAAAIYY9wQGAAEA6CAAAAAAgxj3BAYAAQDwIAAAAACTCLwEsQAB
ABwhAAAAAJMI1AC2AAEAIyEAAAAAkwjgALsAAQArIQAAAACWCDgGwQACADIhAAAAAIYY9wQGAAIA
OiEAAAAAkRj9BMYAAgAAAAEA8AIJAPcEAQARAPcEBgAZAPcECgApAPcEEAAxAPcEEAA5APcEEABB
APcEEABJAPcEEABRAPcEEABZAPcEEABhAPcEEABpAPcEBgCRAPcEBgC5APcEFQDJAPcEBgBxABsG
IgB5APcEJwB5ANAEBgB5AAEDLQB5ANwEMgDRAMkFPwDhADAERAB5APYCSgDxAKQETwD5AGADVACZ
AFcDWQDpAOYCXQABATABBgDRAEQGAQBxAPcEBgCZAPcEBgAJAZUAYgAJAWcGawChAPcEcQDBAPcE
BgAIABQAlAAIABgAmQApAHMAAQEuAAsA2QAuABMA4gAuABsAAQEuACMACgEuACsAMwEuADMAMwEu
ADsAMwEuAEMACgEuAEsAOQEuAFMAMwEuAFsAUAFDAGMAmQBJAHMAAQFhAHsAmQBjAGsAmQAbAAMA
AQAEAAMAAADABMoAAAD0AM8AAAA8BtQAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAADw
GRprAAAAAAAAAQAAAAQAAAAAAAAAAAAAAHkAVQAAAAAADgAAAAAAAAAAAAAAggCJAwAAAAADAAAA
AAAAAAAAAACLAG4DAAAAAAQAAAAAAAAAAAAAAHkAOQQAAAAADgAAAAAAAAAAAAAAggAuAAAAAAAA
AAAAAQAAAEgFAAAFAAIAKQA6AAAAAFNUXzk1NjBlMTNmM2NjZDQ3NDk4NDY5NjE2M2VkNjAyNDg1
ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGli
AGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFp
bHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0
T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9WYWx1ZQB2YWx1ZQBnZXRfQ29uZmlnAGdldF9QYWNr
YWdlQ29uZmlnAERlbG9pdHRlLlBpcGVsaW5lRnJhbWV3b3JrLlBsYXRmb3JtQ29uZmlnAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAZ2V0X05hbWVPZkFwaQBEZWxvaXR0ZS5QaXBl
bGluZUZyYW1ld29yawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAU1RfOTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYzZWQ2MDI0ODUuZGxsAENvbXBv
bmVudFBhcmFtAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lz
dGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24A
Q3VsdHVyZUluZm8AZ2V0X0hlYWRlcgBDb25maWdIZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBT
ZXR1cExvZ2dlcgBTZXROb25OdWxsVXNlclZhcmlhYmxlc0ZvcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTVF85NTYwZTEzZjNjY2Q0NzQ5ODQ2OTYxNjNlZDYwMjQ4NS5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfOTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYz
ZWQ2MDI0ODUuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFBpcGVsaW5lTmFtZXMARGVsb2l0dGUu
UGlwZWxpbmVGcmFtZXdvcmsuUGlwZWxpbmVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3Jp
cHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABSb290AERlbG9pdHRl
U2NyaXB0AGdldF9Bc3NlbWJseQAAEWMAZgBnAF8AcABrAGcAXwAAI2MAZgBnAF8AcABrAGcAXwBO
AGEAbQBlAE8AZgBBAHAAaQAAcVMAVABfADkANQA2ADAAZQAxADMAZgAzAGMAYwBkADQANwA0ADkA
OAA0ADYAOQA2ADEANgAzAGUAZAA2ADAAMgA0ADgANQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAAAAJVnPlIeF80yJX/1gWc4+VAAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERWQYHAhI9EUEEIAASaQUgAQESaQQgABJtBzABAgEeAA4ECgESbQQgABJxBSABEnUcBCAA
EnkEIAASfQQgABFBAyAADgQgAQEcCAABEoCFEYCJBSAAEoCNByACAQ4SgI0It3pcVhk04IkIiYRd
zYCAzJEI+QI6Ng3oSwwEAAAAAAQBAAAAAwYSUQMGElUDBhIQAgYIAwYRFAQAABJRBAAAElUFAAEB
ElUEAAASEAMAAAEECAASUQQIABJVBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzk1NjBlMTNmM2NjZDQ3NDk4NDY5NjE2M2VkNjAyNDg1
AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAjC8AAAAAAAAAAAAApi8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgvAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAaa/AZAAABABpr8Bk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADkANQA2ADAAZQAxADMAZgAzAGMAYwBkADQANwA0ADkAOAA0ADYAOQA2ADEANgAz
AGUAZAA2ADAAMgA0ADgANQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADYANAAwAC4AMgA3ADQAMQA4AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADkANQA2ADAAZQAxADMAZgAzAGMAYwBkADQANwA0ADkAOAA0ADYAOQA2ADEANgAzAGUA
ZAA2ADAAMgA0ADgANQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA1AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AOQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQANgA5ADYA
MQA2ADMAZQBkADYAMAAyADQAOAA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADkANQA2ADAAZQAxADMAZgAzAGMAYwBkADQANwA0ADkAOAA0ADYAOQA2ADEA
NgAzAGUAZAA2ADAAMgA0ADgANQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgA2ADQAMAAuADIANwA0ADEAOAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA2ADQAMAAuADIANwA0ADEAOAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAC4PwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Set configuration through Invocation Handler"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{fb00b9f5-279b-4778-98a0-901ae495e213}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set configuration through Invocation Handler"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{024765D8-5311-4FD6-AC51-730FDA44254C}"
              SQLTask:SqlStatementSource="select value from ivh.run_paramvalue where run_id=? and parameter='api_config' "
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::cfg_tpl_jsonConfiguration" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::cfg_sla_RunID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{36740638-1633-4ABF-8418-019FE1C7EAA7}"
          DTS:From="Package\Initialize - template\Get server configuration"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Initialize - template\Set configuration through Invocation Handler" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{04850FF6-6AEA-41A9-8680-E259B1451422}"
          DTS:From="Package\Initialize - template\Set configuration through Invocation Handler"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Initialize - template\Initialize package configuration" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize SLA configuration"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{71AE551E-5931-458B-8D13-759C37F75CDB}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize SLA configuration"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{FC923150-48D2-435C-9345-E743F2D14D06}"
          DTS:EventID="728010436"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{15CBF6E0-2AF2-42E3-8594-78775AB40607}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]\Log SLA property"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{92fbc687-0dc8-4559-bc8e-46db912d25f7}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log SLA property"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id='" + @[User::cfg_sla_ComponentID] + "', @source_id='" + @[User::cfg_sla_ComponentID] + "', @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::cfg_sla_RunID]  +  ": SLA key [ComponentID] was set with value \"" +  @[User::cfg_sla_ComponentID] + "\". '"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{024765D8-5311-4FD6-AC51-730FDA44254C}"
                  SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_PrepareForVisualization',@source_type='PCK',@source_name='PrepareForVisualization.dtsx', @source_id='', @source_id='', @action='END', @status='ERROR', @message = 'Run -1: SLA key [ComponentID] was set with value &quot;&quot;. '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7c98d941be6340a4afa5b23346e85fc7"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,User::cfg_tpl_jsonSLA,System::PackageName"
          ReadWriteVariables="User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerCatalog,User::cfg_sla_DatahandlerDataSource,User::cfg_sla_DatahandlerVersion,User::cfg_sla_PlatformCatalog,User::cfg_sla_PlatformDataSource,User::cfg_sla_PollEvery,User::cfg_sla_ProjectCatalog,User::cfg_sla_ProjectDataSource,User::cfg_sla_RunID,User::cfg_sla_TimeOutAfter">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Settings.get_Default():ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Sett" +
    "ings")]

namespace ST_7c98d941be6340a4afa5b23346e85fc7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig;
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Data;
using System.Data.SqlClient;
using System.Reflection;
using System.Windows.Forms;

#endregion

namespace ST_7c98d941be6340a4afa5b23346e85fc7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetNonNullUserVariablesFor<SLA>("User::cfg_tpl_jsonSLA", "cfg_sla_");
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7c98d941be6340a4afa5b23346e85fc7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
	}
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_7c98d941be6340a4afa5b23346e85fc7</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_7c98d941be6340a4afa5b23346e85fc7</msb:DisplayName>
		<msb:ProjectId>{EBA7ABF6-DDB6-4E73-B1F6-9F8861BC9C9C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7c98d941be6340a4afa5b23346e85fc7.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7c98d941be6340a4afa5b23346e85fc7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7c98d941be6340a4afa5b23346e85fc7")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_7c98d941be6340a4afa5b23346e85fc7.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9CD66199-FB02-4B5C-9A30-C7FB7ED47B51}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7c98d941be6340a4afa5b23346e85fc7</RootNamespace>
    <AssemblyName>ST_7c98d941be6340a4afa5b23346e85fc7</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_6.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_7c98d941be6340a4afa5b23346e85fc7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKnzn1oAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAA5i0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJQtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA7A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADI
LQAAAAAAAEgAAAACAAUADCEAANALAAABAAAAAAAAANwsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwA1AAAAAQAAEQIoEAAACnMRAAAKCgZyAQAAcHItAABw
bwEAACveCgYsBgZvEwAACtwCKBAAAAoWbxQAAAoqAAAAARAAAAIADAASHgAKAAAAAB4CKBUAAAoq
HgIoFgAACiqufgEAAAQtHnI/AABw0AMAAAIoFwAACm8YAAAKcxkAAAqAAQAABH4BAAAEKhp+AgAA
BCoeAoACAAAEKhp+AwAABCoeAigaAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAxAMAACN+AAAwBAAAcAUAACNTdHJpbmdzAAAAAKAJAAC0AAAAI1VT
AFQKAAAQAAAAI0dVSUQAAABkCgAAbAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQsAAAD6ATMAFgAA
AQAAAB4AAAAFAAAABgAAAAkAAAABAAAAGgAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAE
AAAAAQAAAAEAAAABAAAAAAB3AwEAAAAAAAYA9QFZBAYAhAJZBAYAQQFGBA8AzQQAAAYAbgHsAwYA
2AHsAwYAuQHsAwYAawLsAwYAFQLsAwYALgLsAwYAhQHsAwYAoAHSAgoASQImAwoAuAAmAw4AVAXs
AgYApgOfAwYAJAFGBAYAMgWfAwYADgR5BAYA/gPXAxIA9ABhAxIAVQFhAxIA1ADCAwYACQFZBAoA
TwMmAw4ALgCoAgYAUwCfAwYAgwCfAwYAXwCfAwYAZwXsAwAAAAAlAAAAAAABAAEAAQAQALcDAQA5
AAEAAQAAABAAgATcBEkAAQADAAABEAALBdwEXQADAAcAAwEAACQFAABBAAQACgARAKsDbwARAKgA
cwARAEMAdwAGBjIAewBWgBQFfgBWgIgAfgBQIAAAAACGAL0DBgABAKQgAAAAAIYYOQQGAAEArCAA
AAAAgxg5BAYAAQC0IAAAAACTCAoEggABAOAgAAAAAJMIkACHAAEA5yAAAAAAkwicAIwAAQDvIAAA
AACWCDkFkgACAPYgAAAAAIYYOQQGAAIA/iAAAAAAkRg/BJcAAgAAAAEAogIJADkEAQARADkEBgAZ
ADkECgApADkEEAAxADkEEAA5ADkEEABBADkEEABJADkEEABRADkEEABZADkEEABhADkEEABpADkE
BgCJADkEBgCxADkEFQDBADkEBgBxABwFIAB5ADkEJQB5AB4EKwDZAOwABgDJAEUFAQBxADkEBgCR
ADkEBgDhAHEANwDhAGMFPgCZADkEQwC5ADkEBgAIABQAZQAIABgAagApAHMA0gAuAAsAqgAuABMA
swAuABsA0gAuACMA2wAuACsABAEuADMABAEuADsABAEuAEMA2wAuAEsACgEuAFMABAEuAFsAIQFD
AGMAagBJAHMA0gBhAHsAagBjAGsAagAbAAMAAQAEAAMAAAAOBJsAAACwAKAAAAA9BaUAAgAEAAMA
AgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAADwGRxrAAAAAAAAAQAAAAQAAAAAAAAAAAAAAEoAOgAA
AAAADgAAAAAAAAAAAAAAUwAHAwAAAAADAAAAAAAAAAAAAABcAOwCAAAAAAQAAAAAAAAAAAAAAEoA
nwMAAAAAAAAAAAEAAACKBAAABQACACUAMgAAAABTVF83Yzk4ZDk0MWJlNjM0MGE0YWZhNWIyMzM0
NmU4NWZjNwA8TW9kdWxlPgBTTEEAdmFsdWVfXwBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UASURp
c3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAVHlwZQBGYWlsdXJl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmpl
Y3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAdmFsdWUARGVsb2l0dGUuUGlwZWxpbmVGcmFtZXdvcmsuUGxhdGZv
cm1Db25maWcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBEZWxvaXR0ZS5QaXBlbGluZUZyYW1l
d29yawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwAU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTViMjMzNDZlODVmYzcuZGxsAFN5c3RlbQBFbnVtAHJl
c291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6
YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBT
ZXROb25OdWxsVXNlclZhcmlhYmxlc0ZvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF83Yzk4
ZDk0MWJlNjM0MGE0YWZhNWIyMzM0NmU4NWZjNy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTViMjMzNDZlODVmYzcuUHJv
cGVydGllcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBPYmplY3QAZ2V0
X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQARGVsb2l0dGVTY3JpcHQAZ2V0X0Fzc2VtYmx5AAArVQBz
AGUAcgA6ADoAYwBmAGcAXwB0AHAAbABfAGoAcwBvAG4AUwBMAEEAABFjAGYAZwBfAHMAbABhAF8A
AHFTAFQAXwA3AGMAOQA4AGQAOQA0ADEAYgBlADYAMwA0ADAAYQA0AGEAZgBhADUAYgAyADMAMwA0
ADYAZQA4ADUAZgBjADcALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAAAGfOMT/WO0VItroiQgr2XsAABCABAQgDIAABBSABARERBCABAQ4FIAEBEVUEBwESPQQgABJl
BSABARJlBjABAgEODgQKARJpBgABEnERdQQgABJ5BiACAQ4SeQi3elxWGTTgiQiJhF3NgIDMkQj5
Ajo2DehLDAQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAASUQUAAQESUQQAABIQ
AwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTViMjMzNDZlODVmYzcAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAxNQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAALwt
AAAAAAAAAAAAANYtAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADILQAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAHGvwGQAAAQAca/AZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwA3AGMAOQA4AGQAOQA0ADEAYgBlADYAMwA0ADAAYQA0AGEAZgBhADUAYgAyADMA
MwA0ADYAZQA4ADUAZgBjADcAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANgA2ADQAMAAuADIANwA0ADIAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwA3AGMAOQA4AGQAOQA0ADEAYgBlADYAMwA0ADAAYQA0AGEAZgBhADUAYgAyADMAMwA0
ADYAZQA4ADUAZgBjADcALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANQAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADcAYwA5ADgAZAA5ADQAMQBiAGUANgAzADQAMABhADQAYQBmAGEANQBi
ADIAMwAzADQANgBlADgANQBmAGMANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA3AGMAOQA4AGQAOQA0ADEAYgBlADYAMwA0ADAAYQA0AGEAZgBhADUAYgAy
ADMAMwA0ADYAZQA4ADUAZgBjADcAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADYANgA0ADAALgAyADcANAAyADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANgA0ADAALgAyADcANAAyADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAA6D0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{613d0036-93ba-4c2d-840b-1fbf1ad8da34}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\NotifySsisApi"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{a45d6012-9d7f-4de7-9645-f2f476754870}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="NotifySsisApi"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_88559eab84cf406ea460ea137331190a"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_88559eab84cf406ea460ea137331190a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CED7755E-802E-4832-8212-AE5EFAE0331F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_065500ea46124711b2237a3a9fbb2b8c</RootNamespace>
    <AssemblyName>ST_88559eab84cf406ea460ea137331190a</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Settings.get_Default():ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Sett" +
    "ings")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using System.Collections;
using System.Collections.Generic;
using Deloitte.PipelineFramework.PlatformConfig;
#endregion

namespace ST_065500ea46124711b2237a3a9fbb2b8c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.UpdateApi(
                    code: (int)DeloitteScript.UpdateCodes.ComponentFinished,
                    message: deloitte.PackageName
                );
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_88559eab84cf406ea460ea137331190a</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_88559eab84cf406ea460ea137331190a</msb:DisplayName>
		<msb:ProjectId>{3677B8C7-60FA-4ECD-8055-45E8018C12C8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_88559eab84cf406ea460ea137331190a.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:
        
[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_88559eab84cf406ea460ea137331190a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKzzn1oAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAli0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEQtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAnA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB4
LQAAAAAAAEgAAAACAAUADCEAAIALAAABAAAAAAAAAIwsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwA2AAAAAQAAEQIoEAAACnMRAAAKCgYg6AMAAAZvEgAA
Cm8TAAAK3goGLAYGbxQAAArcAigQAAAKFm8VAAAKKgAAARAAAAIADAATHwAKAAAAAB4CKBYAAAoq
HgIoFwAACiqufgEAAAQtHnIBAABw0AMAAAIoGAAACm8ZAAAKcxoAAAqAAQAABH4BAAAEKhp+AgAA
BCoeAoACAAAEKhp+AwAABCoeAigbAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAvAMAACN+AAAoBAAAaAUAACNTdHJpbmdzAAAAAJAJAAB0AAAAI1VT
AAQKAAAQAAAAI0dVSUQAAAAUCgAAbAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAA
AQAAAB0AAAAFAAAABgAAAAkAAAABAAAAGwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAE
AAAAAQAAAAEAAAAAAIcDAQAAAAAABgAlAk4EBgC0Ak4EBgBxATsEDwDCBAAABgCeAfwDBgAIAvwD
BgDpAfwDBgCbAvwDBgBFAvwDBgBeAvwDBgC1AfwDBgDQAdgCCgB5AjYDCgDoADYDDgBJBfwCBgC2
A68DBgBUATsEBgAnBa8DBgAeBG4EBgAOBOcDEgAkAXEDEgCFAXEDEgAEAdIDBgA5AU4ECgBfAzYD
BgBzAK8DBgCzAK8DBgB/AK8DBgBcBfwDAAAAAAEAAAAAAAEAAQABABAAxwM/ADkAAQABAAAAEAB1
BNEESQABAAMAAAEQAAAF0QRdAAMABwADAQAAGQUAAEEABAAKABEAuwNtABEA2ABxABEAYwB1AAYG
CgB5AFaACQV8AFaAuAB8AFAgAAAAAIYAzQMGAAEApCAAAAAAhhguBAYAAQCsIAAAAACDGC4EBgAB
ALQgAAAAAJMIGgSAAAEA4CAAAAAAkwjAAIUAAQDnIAAAAACTCMwAigABAO8gAAAAAJYILgWQAAIA
9iAAAAAAhhguBAYAAgD+IAAAAACRGDQElQACAAAAAQDSAgkALgQBABEALgQGABkALgQKACkALgQQ
ADEALgQQADkALgQQAEEALgQQAEkALgQQAFEALgQQAFkALgQQAGEALgQQAGkALgQGAIkALgQGALEA
LgQVAMEALgQGAHEAEQUgAHkALgQlAHkAowArAHkA8gIvANEAHAEGAMkAOgUBAHEALgQGAJEALgQG
ANkAkQA1ANkAWAU8AJkALgRBALkALgQGAAgAFABjAAgAGABoACkAcwDQAC4ACwCoAC4AEwCxAC4A
GwDQAC4AIwDZAC4AKwACAS4AMwACAS4AOwACAS4AQwDZAC4ASwAIAS4AUwACAS4AWwAfAUMAYwBo
AEkAcwDQAGEAewBoAGMAawBoABsAAwABAAQAAwAAAB4EmQAAAOAAngAAADIFowACAAQAAwACAAUA
BQABAAYABQACAAcABwAEgAAAAQAAAPAZHmsAAAAAAAASAAAABAAAAAAAAAAAAAAASAA2AAAAAAAO
AAAAAAAAAAAAAABRABcDAAAAAAMAAAAAAAAAAAAAAFoA/AIAAAAABAAAAAAAAAAAAAAASACvAwAA
AAAAAAAAAQAAAH8EAAAFAAIAAAAAPE1vZHVsZT4AdmFsdWVfXwBTVF84ODU1OWVhYjg0Y2Y0MDZl
YTQ2MGVhMTM3MzMxMTkwYQBtc2NvcmxpYgBTVF8wNjU1MDBlYTQ2MTI0NzExYjIyMzdhM2E5ZmJi
MmI4YwBkZWZhdWx0SW5zdGFuY2UASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUAZ2V0X1BhY2thZ2VOYW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVXBkYXRlQXBpAERlbG9pdHRlLlBpcGVs
aW5lRnJhbWV3b3JrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTVF84ODU1OWVhYjg0Y2Y0MDZlYTQ2MGVhMTM3MzMxMTkwYS5kbGwAU3lzdGVt
AEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VN
YW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzA2NTUwMGVhNDYxMjQ3MTFiMjIzN2Ez
YTlmYmIyYjhjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
VF8wNjU1MDBlYTQ2MTI0NzExYjIyMzdhM2E5ZmJiMmI4Yy5Qcm9wZXJ0aWVzAFNldHRpbmdzAFN1
Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jl
c3VsdABEZWxvaXR0ZVNjcmlwdABnZXRfQXNzZW1ibHkAAAAAAHFTAFQAXwAwADYANQA1ADAAMABl
AGEANAA2ADEAMgA0ADcAMQAxAGIAMgAyADMANwBhADMAYQA5AGYAYgBiADIAYgA4AGMALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAABABayIaR66Sb1x9xNpdiekAAQg
AQEIAyAAAQUgAQEREQQgAQEOBSABARFVBAcBEj0EIAASZQUgAQESZQMgAA4FIAIBCA4GAAESbRFx
BCAAEnUGIAIBDhJ1CLd6XFYZNOCJCImEXc2AgMyRCPkCOjYN6EsMBAAAAAAEAQAAAAMGEk0DBhJR
AwYSEAIGCAMGERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgAEk0ECAASUQQIABIQCAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF8wNjU1MDBl
YTQ2MTI0NzExYjIyMzdhM2E5ZmJiMmI4YwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE2AABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABsLQAAAAAAAAAAAACGLQAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAeC0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAHmvwGQAAAQAea/AZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwAwADYANQA1ADAAMABlAGEANAA2ADEAMgA0ADcAMQAxAGIAMgAyADMANwBhADMA
YQA5AGYAYgBiADIAYgA4AGMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANgA2ADQAMAAuADIANwA0ADIAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwA4ADgANQA1ADkAZQBhAGIAOAA0AGMAZgA0ADAANgBlAGEANAA2ADAAZQBhADEAMwA3
ADMAMwAxADEAOQAwAGEALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADgAOAA1ADUAOQBlAGEAYgA4ADQAYwBmADQAMAA2AGUAYQA0ADYAMABl
AGEAMQAzADcAMwAzADEAMQA5ADAAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwAwADYANQA1ADAAMABlAGEANAA2ADEAMgA0ADcAMQAxAGIAMgAyADMANwBh
ADMAYQA5AGYAYgBiADIAYgA4AGMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADYANgA0ADAALgAyADcANAAyADIAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANgA0ADAALgAyADcANAAyADIAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAmD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container 1"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{467da6b8-a176-42da-adcf-82b605838d7a}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container 1">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container 1\NotifySsisApi"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{e557bf2b-93e1-449b-9e59-e5d8c83680bd}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="NotifySsisApi"
          DTS:ThreadHint="5">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_0d25c8138e5e49599e6a022416a002f5"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Settings.get_Default():ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Sett" +
    "ings")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using System.Collections;
using System.Collections.Generic;
using Deloitte.PipelineFramework.PlatformConfig;
#endregion

namespace ST_065500ea46124711b2237a3a9fbb2b8c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.UpdateApi(
                    code: (int)DeloitteScript.UpdateCodes.ComponentFinished,
                    message: deloitte.PackageName
                );
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_0d25c8138e5e49599e6a022416a002f5.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CED7755E-802E-4832-8212-AE5EFAE0331F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_065500ea46124711b2237a3a9fbb2b8c</RootNamespace>
    <AssemblyName>ST_0d25c8138e5e49599e6a022416a002f5</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_0d25c8138e5e49599e6a022416a002f5</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_0d25c8138e5e49599e6a022416a002f5</msb:DisplayName>
		<msb:ProjectId>{5A45E825-3393-4E0F-B777-BA76A752F4C6}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0d25c8138e5e49599e6a022416a002f5.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_0d25c8138e5e49599e6a022416a002f5.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK7zn1oAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAli0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEQtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAnA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB4
LQAAAAAAAEgAAAACAAUADCEAAIALAAABAAAAAAAAAIwsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwA2AAAAAQAAEQIoEAAACnMRAAAKCgYg6AMAAAZvEgAA
Cm8TAAAK3goGLAYGbxQAAArcAigQAAAKFm8VAAAKKgAAARAAAAIADAATHwAKAAAAAB4CKBYAAAoq
HgIoFwAACiqufgEAAAQtHnIBAABw0AMAAAIoGAAACm8ZAAAKcxoAAAqAAQAABH4BAAAEKhp+AgAA
BCoeAoACAAAEKhp+AwAABCoeAigbAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAvAMAACN+AAAoBAAAaAUAACNTdHJpbmdzAAAAAJAJAAB0AAAAI1VT
AAQKAAAQAAAAI0dVSUQAAAAUCgAAbAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAA
AQAAAB0AAAAFAAAABgAAAAkAAAABAAAAGwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAE
AAAAAQAAAAEAAAAAAIcDAQAAAAAABgAlAk4EBgC0Ak4EBgBxATsEDwDCBAAABgCeAfwDBgAIAvwD
BgDpAfwDBgCbAvwDBgBFAvwDBgBeAvwDBgC1AfwDBgDQAdgCCgB5AjYDCgDoADYDDgBJBfwCBgC2
A68DBgBUATsEBgAnBa8DBgAeBG4EBgAOBOcDEgAkAXEDEgCFAXEDEgAEAdIDBgA5AU4ECgBfAzYD
BgBzAK8DBgCzAK8DBgB/AK8DBgBcBfwDAAAAACUAAAAAAAEAAQABABAAxwM/ADkAAQABAAAAEAB1
BNEESQABAAMAAAEQAAAF0QRdAAMABwADAQAAGQUAAEEABAAKABEAuwNtABEA2ABxABEAYwB1AAYG
LgB5AFaACQV8AFaAuAB8AFAgAAAAAIYAzQMGAAEApCAAAAAAhhguBAYAAQCsIAAAAACDGC4EBgAB
ALQgAAAAAJMIGgSAAAEA4CAAAAAAkwjAAIUAAQDnIAAAAACTCMwAigABAO8gAAAAAJYILgWQAAIA
9iAAAAAAhhguBAYAAgD+IAAAAACRGDQElQACAAAAAQDSAgkALgQBABEALgQGABkALgQKACkALgQQ
ADEALgQQADkALgQQAEEALgQQAEkALgQQAFEALgQQAFkALgQQAGEALgQQAGkALgQGAIkALgQGALEA
LgQVAMEALgQGAHEAEQUgAHkALgQlAHkAowArAHkA8gIvANEAHAEGAMkAOgUBAHEALgQGAJEALgQG
ANkAkQA1ANkAWAU8AJkALgRBALkALgQGAAgAFABjAAgAGABoACkAcwDQAC4ACwCoAC4AEwCxAC4A
GwDQAC4AIwDZAC4AKwACAS4AMwACAS4AOwACAS4AQwDZAC4ASwAIAS4AUwACAS4AWwAfAUMAYwBo
AEkAcwDQAGEAewBoAGMAawBoABsAAwABAAQAAwAAAB4EmQAAAOAAngAAADIFowACAAQAAwACAAUA
BQABAAYABQACAAcABwAEgAAAAQAAAPAZH2sAAAAAAAABAAAABAAAAAAAAAAAAAAASAA2AAAAAAAO
AAAAAAAAAAAAAABRABcDAAAAAAMAAAAAAAAAAAAAAFoA/AIAAAAABAAAAAAAAAAAAAAASACvAwAA
AAAAAAAAAQAAAH8EAAAFAAIAAAAAU1RfMGQyNWM4MTM4ZTVlNDk1OTllNmEwMjI0MTZhMDAyZjUA
PE1vZHVsZT4AdmFsdWVfXwBtc2NvcmxpYgBTVF8wNjU1MDBlYTQ2MTI0NzExYjIyMzdhM2E5ZmJi
MmI4YwBkZWZhdWx0SW5zdGFuY2UASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUAZ2V0X1BhY2thZ2VOYW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVXBkYXRlQXBpAERlbG9pdHRlLlBpcGVs
aW5lRnJhbWV3b3JrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTVF8wZDI1YzgxMzhlNWU0OTU5OWU2YTAyMjQxNmEwMDJmNS5kbGwAU3lzdGVt
AEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VN
YW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzA2NTUwMGVhNDYxMjQ3MTFiMjIzN2Ez
YTlmYmIyYjhjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
VF8wNjU1MDBlYTQ2MTI0NzExYjIyMzdhM2E5ZmJiMmI4Yy5Qcm9wZXJ0aWVzAFNldHRpbmdzAFN1
Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jl
c3VsdABEZWxvaXR0ZVNjcmlwdABnZXRfQXNzZW1ibHkAAAAAAHFTAFQAXwAwADYANQA1ADAAMABl
AGEANAA2ADEAMgA0ADcAMQAxAGIAMgAyADMANwBhADMAYQA5AGYAYgBiADIAYgA4AGMALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAA6PIVatl0mTITKkPPNt/fEAAQg
AQEIAyAAAQUgAQEREQQgAQEOBSABARFVBAcBEj0EIAASZQUgAQESZQMgAA4FIAIBCA4GAAESbRFx
BCAAEnUGIAIBDhJ1CLd6XFYZNOCJCImEXc2AgMyRCPkCOjYN6EsMBAAAAAAEAQAAAAMGEk0DBhJR
AwYSEAIGCAMGERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgAEk0ECAASUQQIABIQCAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF8wNjU1MDBl
YTQ2MTI0NzExYjIyMzdhM2E5ZmJiMmI4YwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE2AABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABsLQAAAAAAAAAAAACGLQAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAeC0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAH2vwGQAAAQAfa/AZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwAwADYANQA1ADAAMABlAGEANAA2ADEAMgA0ADcAMQAxAGIAMgAyADMANwBhADMA
YQA5AGYAYgBiADIAYgA4AGMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANgA2ADQAMAAuADIANwA0ADIAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwAwAGQAMgA1AGMAOAAxADMAOABlADUAZQA0ADkANQA5ADkAZQA2AGEAMAAyADIANAAx
ADYAYQAwADAAMgBmADUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADAAZAAyADUAYwA4ADEAMwA4AGUANQBlADQAOQA1ADkAOQBlADYAYQAw
ADIAMgA0ADEANgBhADAAMAAyAGYANQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwAwADYANQA1ADAAMABlAGEANAA2ADEAMgA0ADcAMQAxAGIAMgAyADMANwBh
ADMAYQA5AGYAYgBiADIAYgA4AGMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADYANgA0ADAALgAyADcANAAyADMAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANgA0ADAALgAyADcANAAyADMAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAmD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set Initialized to True"
      DTS:CreationName="Microsoft.ExpressionTask"
      DTS:Description="Expression Task"
      DTS:DTSID="{dba25308-025f-4c81-9db8-dfcf7afcc9f2}"
      DTS:ExecutableType="Microsoft.ExpressionTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set Initialized to True"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExpressionTask
          Expression="@[User::cfg_tpl_IsPackageSlaInitialized] = True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Timeout expired"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{71dbbbdc-c800-44b6-8bd9-b4e19f36a9d2}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Timeout expired">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Timeout expired\Log - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8ca31460-9918-4882-87b5-0792b86ea33f}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="5">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Timeout expired after " + (DT_WSTR, 16) @[User::cfg_sla_TimeOutAfter] + " seconds.'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{024765D8-5311-4FD6-AC51-730FDA44254C}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_PrepareForVisualization',@source_type='PCK',@source_name='PrepareForVisualization.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run 0: Timeout expired after 0 seconds.'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Timeout expired.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{F5730AB1-9CC9-472D-BF26-1851F384F512}"
          DTS:EventID="219070844"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{9BC91792-F630-4F5C-99BD-5BC1DA7E52DC}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Timeout expired.EventHandlers[OnPostExecute]\Event - Fail executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{7209cdca-6425-418f-ac4a-d71360c4f6ff}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - Fail executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='fail',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Critical'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{024765D8-5311-4FD6-AC51-730FDA44254C}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='fail',@source_id='', @level='Critical'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WAIT FOR Dependencies"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{772C7611-EA54-46FD-B870-24E7D3C95587}"
      DTS:EvalExpression="(! @cfg_tpl_depenciesChecked) &amp;&amp; (DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &gt; GETDATE())"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="WAIT FOR Dependencies">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\WAIT FOR Dependencies\Check dependencies"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5A839827-BE38-467A-8F9A-96AC8DD267F9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check dependencies"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{024765D8-5311-4FD6-AC51-730FDA44254C}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sqlDependencies"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="depenciesChecked"
                SQLTask:DtsVariableName="User::cfg_tpl_depenciesChecked" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{03FFB6D1-A616-4E66-965F-EDB3094EEF2B}"
      DTS:From="Package\Initialize - template"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Check PRE-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{C58D6EA7-BD8C-494B-A3CD-4CFAD58A0FA4}"
      DTS:From="Package\Initialize - specific"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Check PRE-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{9083D54D-716D-4A99-A74F-67E6046BD917}"
      DTS:From="Package\Set Initialized to True"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\Initialize - specific" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{DADD5F79-21CF-4ACC-98B5-7DCE673FCD96}"
      DTS:From="Package\Set Initialized to True"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\Initialize - template" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{2F760A6D-6798-4AE6-BE48-6D1BBDB45BF7}"
      DTS:From="Package\Check PRE-conditions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\WAIT FOR Dependencies" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{22E793E1-9266-46CD-85F6-1599E2B739D3}"
      DTS:EvalOp="3"
      DTS:Expression="(DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &gt; GETDATE())"
      DTS:From="Package\WAIT FOR Dependencies"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Execute Feature" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{EE3B599B-DD89-45EF-98A5-70B724CAB45E}"
      DTS:From="Package\Execute Feature"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Check POST-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{966DA8E2-A242-4C97-A227-2EBD900374E9}"
      DTS:From="Package\Initialize SLA configuration"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Set Initialized to True" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{8CD469A1-1729-4E48-8703-F7E1D60CEFF0}"
      DTS:EvalOp="3"
      DTS:Expression="(DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &lt;= GETDATE())"
      DTS:From="Package\WAIT FOR Dependencies"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Timeout expired" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{1255D310-EAAE-4147-AD52-E5698B574216}"
      DTS:From="Package\Check POST-conditions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Sequence Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{AF9BA307-6735-45CB-B4D4-8E6FE13B9D68}"
      DTS:From="Package\Timeout expired"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Sequence Container 1" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{9B14EC2D-C62A-4F5B-AF7F-09C20198BA75}"
      DTS:EventID="218076652"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{FF3D8288-0078-4AFF-8FFC-7D3A51E28FEA}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Event - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{8EE497B0-52E2-4BDE-B28D-2731FE1849DA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Event - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='fail',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Critical'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{024765D8-5311-4FD6-AC51-730FDA44254C}"
              SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='fail',@source_id='', @level='Critical'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Log - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{50325CDB-5365-4CCA-BBA0-E59D2F898556}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id='" + @[User::cfg_sla_ComponentID] + "', @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Failed executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{024765D8-5311-4FD6-AC51-730FDA44254C}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_PrepareForVisualization',@source_type='PCK',@source_name='PrepareForVisualization.dtsx', @source_id='', @action='END', @status='ERROR', @message = 'Run 0: Failed executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{C0C65379-5B87-46C4-8A1B-68F95D1AB83F}"
      DTS:EventID="217598736"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{2697B6A0-C729-42B6-AA31-FE82A73F616E}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Log - End executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{D62CBAE8-A9F3-40F0-8F30-A324F9EB7ADA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - End executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id='" + @[User::cfg_sla_ComponentID] + "', @action='END', @status='SUCCESS', @rowcount=" + (DT_WSTR, 16) @[User::varRowCount]  + ", @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Completed executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{024765D8-5311-4FD6-AC51-730FDA44254C}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_PrepareForVisualization',@source_type='PCK',@source_name='PrepareForVisualization.dtsx', @source_id='', @action='END', @status='SUCCESS', @rowcount=0, @message = 'Run 0: Completed executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPreExecute]"
      DTS:CreationName="OnPreExecute"
      DTS:DTSID="{1D9A479C-E0C6-48ED-85C3-34E396B5EFD3}"
      DTS:EventID="0"
      DTS:EventName="OnPreExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{2EE79CF6-67B4-43D3-8420-17A83E2B4D0C}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\Log - Start executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{F2B4C1D3-4826-42A5-A743-A1B928CEF988}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Start executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id='" + @[User::cfg_sla_ComponentID] + "', @action='START', @status='SUCCESS', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Starting executable " +  REPLACE(@[System::SourceName], "'", "''") + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{024765D8-5311-4FD6-AC51-730FDA44254C}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_PrepareForVisualization',@source_type='PCK',@source_name='PrepareForVisualization.dtsx', @source_id='', @action='START', @status='SUCCESS', @message = 'Run 0: Starting executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="213,42"
          Id="Package\Check POST-conditions\Check component alignment"
          TopLeft="212.666666666667,82.333333333333" />
        <NodeLayout
          Size="167,42"
          Id="Package\Check POST-conditions\Process test report"
          TopLeft="39.666666666667,157.333333333333" />
        <NodeLayout
          Size="148,42"
          Id="Package\Check POST-conditions\Run Test Suite"
          TopLeft="43,84.0000000000005" />
        <NodeLayout
          Size="131,42"
          Id="Package\Check POST-conditions\Script Task"
          TopLeft="47,17" />
        <EdgeLayout
          Id="Package\Check POST-conditions.PrecedenceConstraints[Constraint]"
          TopLeft="114.75,59">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.0000000000005"
              Start="0,0"
              End="0,17.5000000000005">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5000000000005" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check POST-conditions.PrecedenceConstraints[Constraint 1]"
          TopLeft="120.083333333333,126">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3333333333326"
              Start="0,0"
              End="0,23.8333333333326">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8333333333326" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="431,239"
          Size="431,282"
          Id="Package\Check POST-conditions"
          TopLeft="754.833333333333,2124.07142857143" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,55"
          Size="205,98"
          Id="Package\Check PRE-conditions"
          TopLeft="635.5,882.071428571429" />
        <NodeLayout
          Size="148,43"
          Id="Package\Execute Feature\Create Backup"
          TopLeft="532.916660488894,633.916658511261" />
        <NodeLayout
          Size="155,42"
          Id="Package\Execute Feature\Expression Task"
          TopLeft="613,21" />
        <NodeLayout
          Size="169,42"
          Id="Package\Execute Feature\Landscape\Create Config View"
          TopLeft="73.25,60" />
        <NodeLayout
          Size="201,42"
          Id="Package\Execute Feature\Landscape\Create Fact Points To Plot"
          TopLeft="241.583333333333,172.666666666667" />
        <NodeLayout
          Size="130,74"
          Id="Package\Execute Feature\Landscape\Create Points to Download"
          TopLeft="60,143" />
        <NodeLayout
          Size="171,42"
          Id="Package\Execute Feature\Landscape\Get Custom Metrics"
          TopLeft="260.333333333333,79.0000000000002" />
        <EdgeLayout
          Id="Package\Execute Feature\Landscape.PrecedenceConstraints[Constraint]"
          TopLeft="343.958333333333,121">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51.6666666666665"
              Start="0,0"
              End="0,44.1666666666665">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.1666666666665" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="464,272"
          Size="464,315"
          Id="Package\Execute Feature\Landscape"
          TopLeft="861.333333333333,73.6666666666663" />
        <NodeLayout
          Size="130,78"
          Id="Package\Execute Feature\Landscape - Descriptors\Create Front-end View"
          TopLeft="5.5,13.333333333333" />
        <NodeLayout
          Size="130,73"
          Id="Package\Execute Feature\Landscape - Descriptors\Series Properties"
          TopLeft="205.999999999999,23.8333333333333" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="403,152"
          Size="403,195"
          Id="Package\Execute Feature\Landscape - Descriptors"
          TopLeft="898.333333333333,438.666666666667" />
        <NodeLayout
          Size="221,42"
          Id="Package\Execute Feature\Longlist\Create Company Longlist Web"
          TopLeft="25.75,125.5" />
        <NodeLayout
          Size="181,42"
          Id="Package\Execute Feature\Longlist\Create Longlist Filters"
          TopLeft="51,272.5" />
        <NodeLayout
          Size="176,42"
          Id="Package\Execute Feature\Longlist\Create Longlist Stats"
          TopLeft="45.75,195.5" />
        <NodeLayout
          Size="203,42"
          Id="Package\Execute Feature\Longlist\Create Object Names Web"
          TopLeft="34.75,48.5" />
        <NodeLayout
          Size="123,42"
          Id="Package\Execute Feature\Longlist\Fill Filters"
          TopLeft="12.166667101284,376.333329265316" />
        <NodeLayout
          Size="130,68"
          Id="Package\Execute Feature\Longlist\Update Questionnaire tile"
          TopLeft="140,370.5" />
        <EdgeLayout
          Id="Package\Execute Feature\Longlist.PrecedenceConstraints[Constraint]"
          TopLeft="135,167.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Longlist.PrecedenceConstraints[Constraint 1]"
          TopLeft="136.25,90.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Longlist.PrecedenceConstraints[Constraint 4]"
          TopLeft="137.625,237.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Longlist.PrecedenceConstraints[Constraint 5]"
          TopLeft="112.666666666667,314.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-38.9999995653826,61.833329265316"
              Start="0,0"
              End="-38.9999995653826,54.333329265316">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.0584138315081" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.0584138315081"
                    Point2="0,25.0584138315081"
                    Point3="-4,25.0584138315081" />
                  <mssgle:LineSegment
                    End="-34.9999995653826,25.0584138315081" />
                  <mssgle:CubicBezierSegment
                    Point1="-34.9999995653826,25.0584138315081"
                    Point2="-38.9999995653826,25.0584138315081"
                    Point3="-38.9999995653826,29.0584138315081" />
                  <mssgle:LineSegment
                    End="-38.9999995653826,54.333329265316" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.4999997826913,30.0584138315081,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Longlist.PrecedenceConstraints[Constraint 9]"
          TopLeft="170.333333333333,314.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34.6666666666667,56"
              Start="0,0"
              End="34.6666666666667,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6944140197152" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.6944140197152"
                    Point2="0,22.6944140197152"
                    Point3="4,22.6944140197152" />
                  <mssgle:LineSegment
                    End="30.6666666666667,22.6944140197152" />
                  <mssgle:CubicBezierSegment
                    Point1="30.6666666666667,22.6944140197152"
                    Point2="34.6666666666667,22.6944140197152"
                    Point3="34.6666666666667,26.6944140197152" />
                  <mssgle:LineSegment
                    End="34.6666666666667,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="293,467"
          Size="293,510"
          Id="Package\Execute Feature\Longlist"
          TopLeft="69.8333333333333,90.75" />
        <NodeLayout
          Size="244,42"
          Id="Package\Execute Feature\Temporal Longlist\Create Company Longlist Temporal"
          TopLeft="25.75,125.5" />
        <NodeLayout
          Size="251,42"
          Id="Package\Execute Feature\Temporal Longlist\Create Temporal Object Names Web"
          TopLeft="34.75,48.5" />
        <EdgeLayout
          Id="Package\Execute Feature\Temporal Longlist.PrecedenceConstraints[Constraint 1]"
          TopLeft="160.25,90.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12.5,35"
              Start="0,0"
              End="-12.5,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.5"
                    Point2="0,17.5"
                    Point3="-4,17.5" />
                  <mssgle:LineSegment
                    End="-8.5,17.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.5,17.5"
                    Point2="-12.5,17.5"
                    Point3="-12.5,21.5" />
                  <mssgle:LineSegment
                    End="-12.5,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="293,321"
          Size="293,364"
          Id="Package\Execute Feature\Temporal Longlist"
          TopLeft="466.083333333333,158.916666666666" />
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint]"
          TopLeft="690.5,63">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-474.166666666667,27.75"
              Start="0,0"
              End="-474.166666666667,20.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.875" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.875"
                    Point2="0,13.875"
                    Point3="-4,13.875" />
                  <mssgle:LineSegment
                    End="-470.166666666667,13.875" />
                  <mssgle:CubicBezierSegment
                    Point1="-470.166666666667,13.875"
                    Point2="-474.166666666667,13.875"
                    Point3="-474.166666666667,17.875" />
                  <mssgle:LineSegment
                    End="-474.166666666667,20.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-245.083333333333,18.875,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint 1]"
          TopLeft="715,63">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-102.416666666667,95.9166666666663"
              Start="0,0"
              End="-102.416666666667,88.4166666666663">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.9546615581097" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.9546615581097"
                    Point2="0,38.9546615581097"
                    Point3="-4,38.9546615581097" />
                  <mssgle:LineSegment
                    End="-98.416666666667,38.9546615581097" />
                  <mssgle:CubicBezierSegment
                    Point1="-98.416666666667,38.9546615581097"
                    Point2="-102.416666666667,38.9546615581097"
                    Point3="-102.416666666667,42.9546615581097" />
                  <mssgle:LineSegment
                    End="-102.416666666667,88.4166666666663" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-59.2083333333335,43.9546615581097,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint 2]"
          TopLeft="1096.58333333333,388.666666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.0000000000009"
              Start="0,0"
              End="0,42.5000000000009">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5000000000009" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint 3]"
          TopLeft="216.333333333333,600.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="390.583327155561,33.1666585112609"
              Start="0,0"
              End="390.583327155561,25.6666585112609">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5833292556305" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.5833292556305"
                    Point2="0,16.5833292556305"
                    Point3="4,16.5833292556305" />
                  <mssgle:LineSegment
                    End="386.583327155561,16.5833292556305" />
                  <mssgle:CubicBezierSegment
                    Point1="386.583327155561,16.5833292556305"
                    Point2="390.583327155561,16.5833292556305"
                    Point3="390.583327155561,20.5833292556305" />
                  <mssgle:LineSegment
                    End="390.583327155561,25.6666585112609" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint 4]"
          TopLeft="768,42">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93.333333333333,189.166666666666"
              Start="0,0"
              End="85.833333333333,189.166666666666">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="42.6666666666665,0" />
                  <mssgle:CubicBezierSegment
                    Point1="42.6666666666665,0"
                    Point2="46.6666666666665,0"
                    Point3="46.6666666666665,4" />
                  <mssgle:LineSegment
                    End="46.6666666666665,185.166666666666" />
                  <mssgle:CubicBezierSegment
                    Point1="46.6666666666665,185.166666666666"
                    Point2="46.6666666666665,189.166666666666"
                    Point3="50.6666666666665,189.166666666666" />
                  <mssgle:LineSegment
                    End="85.833333333333,189.166666666666" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="38.6666666666665,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint 8]"
          TopLeft="898.333333333333,536.166666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-217.416672844439,119.249991844594"
              Start="0,0"
              End="-209.916672844439,119.249991844594">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-104.70833642222,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-104.70833642222,0"
                    Point2="-108.70833642222,0"
                    Point3="-108.70833642222,4" />
                  <mssgle:LineSegment
                    End="-108.70833642222,115.249991844594" />
                  <mssgle:CubicBezierSegment
                    Point1="-108.70833642222,115.249991844594"
                    Point2="-108.70833642222,119.249991844594"
                    Point3="-112.70833642222,119.249991844594" />
                  <mssgle:LineSegment
                    End="-209.916672844439,119.249991844594" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1473,733"
          Size="1473,776"
          Id="Package\Execute Feature"
          TopLeft="302.797619047619,1276.17857142857" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="297,179"
          Size="297,222"
          Id="Package\Initialize - specific"
          TopLeft="795,582.142857142858" />
        <NodeLayout
          Size="192,42"
          Id="Package\Initialize - template\Get server configuration"
          TopLeft="20,13" />
        <NodeLayout
          Size="225,42"
          Id="Package\Initialize - template\Initialize package configuration"
          TopLeft="13,220" />
        <NodeLayout
          Size="192,58"
          Id="Package\Initialize - template\Set configuration through Invocation Handler"
          TopLeft="27,118" />
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint]"
          TopLeft="119.5,55">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63"
              Start="0,0"
              End="0,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint 1]"
          TopLeft="124.25,176">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="287,337"
          Size="287,380"
          Id="Package\Initialize - template"
          TopLeft="296,533.214285714286" />
        <NodeLayout
          Size="204,42"
          Id="Package\Initialize SLA configuration"
          TopLeft="623,421.571428571429" />
        <NodeLayout
          Size="139,42"
          Id="Package\Sequence Container\NotifySsisApi"
          TopLeft="36,24" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,121"
          Size="205,164"
          Id="Package\Sequence Container"
          TopLeft="837.5,2448.23809523809" />
        <NodeLayout
          Size="139,42"
          Id="Package\Sequence Container 1\NotifySsisApi"
          TopLeft="36,24" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,121"
          Size="205,164"
          Id="Package\Sequence Container 1"
          TopLeft="1391,1038.23809523809" />
        <NodeLayout
          Size="180,42"
          Id="Package\Set Initialized to True"
          TopLeft="685,505" />
        <NodeLayout
          Size="176,42"
          Id="Package\Timeout expired\Log - Fail executable"
          TopLeft="35,35" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="241,131"
          Size="241,174"
          Id="Package\Timeout expired"
          TopLeft="1019,1036.90476190476" />
        <NodeLayout
          Size="175,42"
          Id="Package\WAIT FOR Dependencies\Check dependencies"
          TopLeft="49.5714285714286,29.8571428571428" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="270,127"
          Size="270,170"
          Id="Package\WAIT FOR Dependencies"
          TopLeft="603.928571428572,1039.10714285714" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="583,723.214285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.5,207.857142857143"
              Start="0,0"
              End="45,207.857142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22.25,0" />
                  <mssgle:CubicBezierSegment
                    Point1="22.25,0"
                    Point2="26.25,0"
                    Point3="26.25,4" />
                  <mssgle:LineSegment
                    End="26.25,203.857142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="26.25,203.857142857143"
                    Point2="26.25,207.857142857143"
                    Point3="30.25,207.857142857143" />
                  <mssgle:LineSegment
                    End="45,207.857142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="943.5,804.142857142858">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-205.5,77.928571428571"
              Start="0,0"
              End="-205.5,70.428571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.9642857142855" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.9642857142855"
                    Point2="0,38.9642857142855"
                    Point3="-4,38.9642857142855" />
                  <mssgle:LineSegment
                    End="-201.5,38.9642857142855" />
                  <mssgle:CubicBezierSegment
                    Point1="-201.5,38.9642857142855"
                    Point2="-205.5,38.9642857142855"
                    Point3="-205.5,42.9642857142855" />
                  <mssgle:LineSegment
                    End="-205.5,70.428571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="775,547">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="168.5,35.142857142858"
              Start="0,0"
              End="168.5,27.642857142858">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.571428571429" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.571428571429"
                    Point2="0,17.571428571429"
                    Point3="4,17.571428571429" />
                  <mssgle:LineSegment
                    End="164.5,17.571428571429" />
                  <mssgle:CubicBezierSegment
                    Point1="164.5,17.571428571429"
                    Point2="168.5,17.571428571429"
                    Point3="168.5,21.571428571429" />
                  <mssgle:LineSegment
                    End="168.5,27.642857142858" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="685,526">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-102,135.214285714286"
              Start="0,0"
              End="-94.5,135.214285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-56.9433962264151,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-56.9433962264151,0"
                    Point2="-60.9433962264151,0"
                    Point3="-60.9433962264151,4" />
                  <mssgle:LineSegment
                    End="-60.9433962264151,131.214285714286" />
                  <mssgle:CubicBezierSegment
                    Point1="-60.9433962264151,131.214285714286"
                    Point2="-60.9433962264151,135.214285714286"
                    Point3="-64.9433962264151,135.214285714286" />
                  <mssgle:LineSegment
                    End="-94.5,135.214285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="738.464285714286,980.071428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.035714285714"
              Start="0,0"
              End="0,51.535714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.535714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="738.928571428572,1209.10714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="300.369047619047,67.07142857143"
              Start="0,0"
              End="300.369047619047,59.57142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.535714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.535714285715"
                    Point2="0,33.535714285715"
                    Point3="4,33.535714285715" />
                  <mssgle:LineSegment
                    End="296.369047619047,33.535714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="296.369047619047,33.535714285715"
                    Point2="300.369047619047,33.535714285715"
                    Point3="300.369047619047,37.535714285715" />
                  <mssgle:LineSegment
                    End="300.369047619047,59.57142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="142.184523809524,38.535714285715,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="1039.29761904762,2052.17857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-68.964285714286,71.8928571428601"
              Start="0,0"
              End="-68.964285714286,64.3928571428601">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.94642857143" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.94642857143"
                    Point2="0,35.94642857143"
                    Point3="-4,35.94642857143" />
                  <mssgle:LineSegment
                    End="-64.964285714286,35.94642857143" />
                  <mssgle:CubicBezierSegment
                    Point1="-64.964285714286,35.94642857143"
                    Point2="-68.964285714286,35.94642857143"
                    Point3="-68.964285714286,39.94642857143" />
                  <mssgle:LineSegment
                    End="-68.964285714286,64.3928571428601" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="757.666666666667,463.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="17.3333333333334,41.428571428571"
              Start="0,0"
              End="17.3333333333334,33.928571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.7648693718731" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.7648693718731"
                    Point2="0,16.7648693718731"
                    Point3="4,16.7648693718731" />
                  <mssgle:LineSegment
                    End="13.3333333333334,16.7648693718731" />
                  <mssgle:CubicBezierSegment
                    Point1="13.3333333333334,16.7648693718731"
                    Point2="17.3333333333334,16.7648693718731"
                    Point3="17.3333333333334,20.7648693718731" />
                  <mssgle:LineSegment
                    End="17.3333333333334,33.928571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="873.928571428572,1124.00595238095">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="145.071428571428,0"
              Start="0,0"
              End="137.571428571428,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="137.571428571428,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="60.785714285714,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="970.333333333333,2406.07142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-30.333333333333,42.1666666666601"
              Start="0,0"
              End="-30.333333333333,34.6666666666601">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.0833333333301" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.0833333333301"
                    Point2="0,21.0833333333301"
                    Point3="-4,21.0833333333301" />
                  <mssgle:LineSegment
                    End="-26.333333333333,21.0833333333301" />
                  <mssgle:CubicBezierSegment
                    Point1="-26.333333333333,21.0833333333301"
                    Point2="-30.333333333333,21.0833333333301"
                    Point3="-30.333333333333,25.0833333333301" />
                  <mssgle:LineSegment
                    End="-30.333333333333,34.6666666666601" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="1260,1122.07142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="131,0"
              Start="0,0"
              End="123.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="123.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package.EventHandlers[OnError]\Event - Fail executable"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="176,42"
          Id="Package.EventHandlers[OnError]\Log - Fail executable"
          TopLeft="0,64" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="178,42"
          Id="Package.EventHandlers[OnPostExecute]\Log - End executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="183,42"
          Id="Package.EventHandlers[OnPreExecute]\Log - Start executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Check POST-conditions.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Check POST-conditions.EventHandlers[OnPostExecute]\Event - End executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Check POST-conditions\Check component alignment">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="154,42"
          Id="Package\Check POST-conditions\Check component alignment\Derived Column"
          TopLeft="407,443" />
        <NodeLayout
          Size="171,42"
          Id="Package\Check POST-conditions\Check component alignment\OLE DB Destination"
          TopLeft="396,539" />
        <EdgeLayout
          Id="Package\Check POST-conditions\Check component alignment.Paths[Derived Column Output]"
          TopLeft="482.75,485">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.3901171875,18.46337890625,30.780234375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="167,42"
          Id="Package\Check POST-conditions\Check component alignment\Data Handler Build"
          TopLeft="358,164" />
        <NodeLayout
          Size="145,42"
          Id="Package\Check POST-conditions\Check component alignment\Platform Build"
          TopLeft="545,165" />
        <NodeLayout
          Size="189,42"
          Id="Package\Check POST-conditions\Check component alignment\SSIS Components Build"
          TopLeft="160,166" />
        <NodeLayout
          Size="130,42"
          Id="Package\Check POST-conditions\Check component alignment\Merge Join"
          TopLeft="340,260" />
        <EdgeLayout
          Id="Package\Check POST-conditions\Check component alignment.Paths[OLE DB Source Output]"
          TopLeft="254.5,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="150.5,52"
              Start="0,0"
              End="150.5,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22"
                    Point2="0,26"
                    Point3="4,26" />
                  <mssgle:LineSegment
                    End="146.5,26" />
                  <mssgle:CubicBezierSegment
                    Point1="146.5,26"
                    Point2="150.5,26"
                    Point3="150.5,30" />
                  <mssgle:LineSegment
                    End="150.5,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check POST-conditions\Check component alignment.Paths[OLE DB Source Output1]"
          TopLeft="441.5,206">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-16.1666666666667,54"
              Start="0,0"
              End="-16.1666666666667,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.0060790273556" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.0060790273556"
                    Point2="0,32.0060790273556"
                    Point3="-4,32.0060790273556" />
                  <mssgle:LineSegment
                    End="-12.1666666666667,32.0060790273556" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.1666666666667,32.0060790273556"
                    Point2="-16.1666666666667,32.0060790273556"
                    Point3="-16.1666666666667,36.0060790273556" />
                  <mssgle:LineSegment
                    End="-16.1666666666667,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-23.1878059895833,37.0060790273556,30.2089453125,9.4462890625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="139,42"
          Id="Package\Check POST-conditions\Check component alignment\Merge Join 1"
          TopLeft="420,354" />
        <EdgeLayout
          Id="Package\Check POST-conditions\Check component alignment.Paths[Merge Join Output]"
          TopLeft="405,302">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84.5,52"
              Start="0,0"
              End="84.5,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22"
                    Point2="0,26"
                    Point3="4,26" />
                  <mssgle:LineSegment
                    End="80.5,26" />
                  <mssgle:CubicBezierSegment
                    Point1="80.5,26"
                    Point2="84.5,26"
                    Point3="84.5,30" />
                  <mssgle:LineSegment
                    End="84.5,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="27.14552734375,31,30.2089453125,9.4462890625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check POST-conditions\Check component alignment.Paths[OLE DB Source Output2]"
          TopLeft="617.5,207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-106.166666666667,147"
              Start="0,0"
              End="-106.166666666667,139.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,83.1963015647226" />
                  <mssgle:CubicBezierSegment
                    Point1="0,83.1963015647226"
                    Point2="0,87.1963015647226"
                    Point3="-4,87.1963015647226" />
                  <mssgle:LineSegment
                    End="-102.166666666667,87.1963015647226" />
                  <mssgle:CubicBezierSegment
                    Point1="-102.166666666667,87.1963015647226"
                    Point2="-106.166666666667,87.1963015647226"
                    Point3="-106.166666666667,91.1963015647226" />
                  <mssgle:LineSegment
                    End="-106.166666666667,139.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-68.1878059895833,92.1963015647226,30.2089453125,9.4462890625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check POST-conditions\Check component alignment.Paths[Merge Join Output1]"
          TopLeft="486.75,396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.3901171875,14.96337890625,30.780234375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Check POST-conditions\Check component alignment\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Check POST-conditions\Check component alignment\SSIS Components Build">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Check POST-conditions\Check component alignment\Platform Build">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Check POST-conditions\Check component alignment\Data Handler Build">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Check POST-conditions\Process test report">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package\Check POST-conditions\Process test report\Test report"
          TopLeft="212,51" />
        <NodeLayout
          Size="154,42"
          Id="Package\Check POST-conditions\Process test report\Derived Column"
          TopLeft="208,132" />
        <NodeLayout
          Size="171,42"
          Id="Package\Check POST-conditions\Process test report\OLE DB Destination"
          TopLeft="197,228" />
        <EdgeLayout
          Id="Package\Check POST-conditions\Process test report.Paths[Derived Column Output]"
          TopLeft="283.75,174">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.3901171875,18.46337890625,30.780234375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check POST-conditions\Process test report.Paths[Flat File Source Output]"
          TopLeft="281.25,93">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.3901171875,10.96337890625,30.780234375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Check POST-conditions\Process test report\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package\Check PRE-conditions.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Check PRE-conditions.EventHandlers[OnPostExecute]\Event - Start executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Execute Feature\Longlist\Fill Filters">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="199,42"
          Id="Package\Execute Feature\Longlist\Fill Filters\Write filters to project DB"
          TopLeft="361,146" />
        <NodeLayout
          Size="159,42"
          Id="Package\Execute Feature\Longlist\Fill Filters\Parse filter string"
          TopLeft="361,51" />
        <EdgeLayout
          Id="Package\Execute Feature\Longlist\Fill Filters.Paths[Output 0]"
          TopLeft="440.5,93">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20,53"
              Start="0,0"
              End="20,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5"
                    Point2="0,26.5"
                    Point3="4,26.5" />
                  <mssgle:LineSegment
                    End="16,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="16,26.5"
                    Point2="20,26.5"
                    Point3="20,30.5" />
                  <mssgle:LineSegment
                    End="20,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="160,42"
          Id="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]\Log SLA property"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Timeout expired.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Timeout expired.EventHandlers[OnPostExecute]\Event - Fail executable"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>