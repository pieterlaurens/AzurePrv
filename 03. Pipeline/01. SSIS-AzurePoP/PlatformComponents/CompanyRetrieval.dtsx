<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/13/2014 4:11:55 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NLLT005553"
  DTS:CreatorName="NL\PBaljon"
  DTS:DTSID="{02ECF6AB-827E-44EC-AE44-CCCF21BD1FF1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.98"
  DTS:LocaleID="1043"
  DTS:ObjectName="CompanyRetrieval"
  DTS:PackageType="5"
  DTS:VersionBuild="413"
  DTS:VersionGUID="{1FAD6218-D625-44ED-908F-20653A6C59EA}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DatahandlerDB]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{C3055AA6-E915-4760-ACDA-C18ED776A394}"
      DTS:ObjectName="DatahandlerDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_DatahandlerCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_DatahandlerDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_dev_dth;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DelayValidation="True"
      DTS:DTSID="{203D8C9D-B8DE-4D71-9BD2-5D29218AFA8F}"
      DTS:ObjectName="DatahandlerDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Data source="+ @[User::cfg_sla_DatahandlerDataSource]+"; Initial Catalog="+ @[User::cfg_sla_DatahandlerCatalog]+"; Integrated Security=SSPI; Connection Timeout=0"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data source=NLAGPDATACORE; Initial Catalog=prv_dev_dth; Integrated Security=SSPI; Connection Timeout=0;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PlatformDB]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
      DTS:ObjectName="PlatformDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_PlatformCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_PlatformDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_dev_inh;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DelayValidation="True"
      DTS:DTSID="{39A482D3-DBB0-4B86-A84A-CCA962295F50}"
      DTS:ObjectName="PlatformDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_PlatformCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_PlatformDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_dev_inh;Integrated Security=True;Application Name=SSIS-CompanyRetrieval-{39A482D3-DBB0-4B86-A84A-CCA962295F50}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProjectDB]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{ABDB0776-1A73-4625-A794-09E7836C862F}"
      DTS:ObjectName="ProjectDB">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_ProjectCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_ProjectDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_prj_deploytest;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProjectDB - ADO.NET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DelayValidation="True"
      DTS:DTSID="{D51700B6-A5A2-46E5-B099-99F17C0369C1}"
      DTS:ObjectName="ProjectDB - ADO.NET">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[User::cfg_sla_ProjectCatalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::cfg_sla_ProjectDataSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=NLAGPDATACORE;Initial Catalog=prv_prj_deploytest;Integrated Security=True;Application Name=SSIS-CompanyRetrieval-{D51700B6-A5A2-46E5-B099-99F17C0369C1}NLAGPDATACORE.prv_app_inh;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{E7D938F2-F5E5-487E-B519-940F083B5E6D}"
      DTS:ObjectName="IN_DEBUG_MODE">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{A883205C-60E9-49CC-A99D-2C1614CBEE90}"
      DTS:ObjectName="JSON_CONFIG">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">{"ComponentParams":[{"PackageName":"ApproximateDistanceIn2D", "NormalizeDistance" : "none" 		, "RandomSeed" : 0 		, "MaxIterations" : 100 		, "Algorithm" : "MatlabMds" 		}]}</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{1460BFDE-B071-40AF-BB3C-04C60FBB1E21}"
      DTS:ObjectName="JSON_SLA">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">{"ComponentID": "D0E4F952-663C-42CA-89E8-318C931D42A9" , "RunID": "-1" , "PollEvery": "00:00:10" , "TimeOutAfter": "3600" , "PlatformDataSource": "nlagpdatacore" , "PlatformCatalog": "prv_dev_inh" , "DatahandlerDataSource": "nlagpdatacore" , "DatahandlerCatalog": "prv_dev_dth" , "DatahandlerVersion": "latest" , "ProjectDataSource":"nlagpdatacore" , "ProjectCatalog":"prv_prj_deploytest" }</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{B9199426-E66A-4A7D-B270-27F3FE4FF9E9}"
      DTS:ObjectName="RUN_ID">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EBCBE7A5-C535-46C4-B467-F6E1ED8972B9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_pkg_RetrievalParams">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8BD67660-C36E-474D-8B57-A6DA52A94420}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ComponentID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7100577B-632D-41C0-ABE0-F7D441D784CB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_dev_dth</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BCE8E57A-753E-4AEB-9160-446C75B6126E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{85F5594A-9876-4F04-9299-3F1373A6A921}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_DatahandlerVersion">
      <DTS:VariableValue
        DTS:DataType="8">vesper</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DD2B6619-59D4-4303-8050-2F09CF5F1527}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PlatformCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_dev_inh</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C55D135A-8350-4280-97E9-7E52C61CB412}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PlatformDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DE52241D-A9D0-4064-A1F2-AAFB74C4FC5E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_PollEvery">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{13D1AB7A-2288-4BA9-8408-3769F8FA81D2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ProjectCatalog">
      <DTS:VariableValue
        DTS:DataType="8">prv_prj_deploytest</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E5B77DC6-0015-4C75-9DE4-28747FB770E5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_ProjectDataSource">
      <DTS:VariableValue
        DTS:DataType="8">NLAGPDATACORE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9E94FC06-0AE8-481A-BD9D-7583F1636DC7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_RunID">
      <DTS:VariableValue
        DTS:DataType="3">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ED4A5A30-DB57-4D67-A630-9E50805E713A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_sla_TimeOutAfter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F872D796-A21E-4982-931B-7BA00602444C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMDatahandlerDB">
      <DTS:VariableValue
        DTS:DataType="8">DatahandlerDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A3E4C4C2-741D-4E88-8A90-70EC0ACDFC7C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMPlatformDB">
      <DTS:VariableValue
        DTS:DataType="8">PlatformDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2710EA22-1646-4EB6-ADD4-ADCCDE92398F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_CMProjectDB">
      <DTS:VariableValue
        DTS:DataType="8">ProjectDB - ADO.NET</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02143704-4064-4B8D-9FC8-C08DF1982CA4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_DBName">
      <DTS:VariableValue
        DTS:DataType="8">prv_central_views</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BAC11FA5-A60C-4A06-B0FA-A7601110EF83}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_DBServer">
      <DTS:VariableValue
        DTS:DataType="8">nlagpdatacore</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FD77FA50-888F-4116-8F29-CEF99734DF3A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_depenciesChecked">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{451BB259-60D0-4049-8EA1-40BDD37DF011}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_EventLog">
      <DTS:VariableValue
        DTS:DataType="8">Application</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ED7B5369-77B3-4142-8EFD-187707DFF2BD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_Feature">
      <DTS:VariableValue
        DTS:DataType="8">CompanyRetrieval</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{24D7C850-7290-4048-A12D-8D8E79BFE692}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_IsPackageSlaInitialized">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1E075E34-4FD9-4AC2-B0BE-BABA156A667F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_jsonConfiguration">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{05292DC4-ADA6-48D4-825A-F860394AE031}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::JSON_SLA]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_jsonSLA">
      <DTS:VariableValue
        DTS:DataType="8">{"ComponentID": "D0E4F952-663C-42CA-89E8-318C931D42A9" , "RunID": "-1" , "PollEvery": "00:00:10" , "TimeOutAfter": "3600" , "PlatformDataSource": "nlagpdatacore" , "PlatformCatalog": "prv_dev_inh" , "DatahandlerDataSource": "nlagpdatacore" , "DatahandlerCatalog": "prv_dev_dth" , "DatahandlerVersion": "latest" , "ProjectDataSource":"nlagpdatacore" , "ProjectCatalog":"prv_prj_deploytest" }</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5BF0D9CE-EA30-464C-9E86-F2F882D357E1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cfg_tpl_Pipeline">
      <DTS:VariableValue
        DTS:DataType="8">Longlist</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DCF0F044-4A98-4CB4-B29C-0195C9720D55}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="rs_RetrievalParams">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{49F08062-92C1-4DBC-8EF1-EFE81BF91F3B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT nlh.checkEvents(ivh.getDependencies('&quot; + @[User::cfg_sla_ComponentID]  + &quot;'), 'complete') AS depenciesChecked&#xA; IF ( SELECT nlh.checkEvents(ivh.getDependencies('&quot; + @[User::cfg_sla_ComponentID]  + &quot;'), 'complete')) = 0&#xA;&#x9;WAITFOR DELAY '&quot;+ @[User::cfg_sla_PollEvery]   +&quot;'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlDependencies">
      <DTS:VariableValue
        DTS:DataType="8">SELECT nlh.checkEvents(ivh.getDependencies(''), 'complete') AS depenciesChecked
 IF ( SELECT nlh.checkEvents(ivh.getDependencies(''), 'complete')) = 0
	WAITFOR DELAY ''</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{12DE250D-6758-4DFA-ADE2-91B434DFD479}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;select&#xA;&#x9;cb.bvd_id as company_id&#xA;&#x9;, cb.company_name&#xA;from&#xA;&#x9;&quot;+ ( @[User::cfg_sla_DatahandlerDataSource]== @[User::cfg_sla_PlatformDataSource] ? &quot;&quot; : @[User::cfg_sla_DatahandlerDataSource] +&quot;.&quot;) + @[User::cfg_sla_DatahandlerCatalog] +&quot;.&quot;+ @[User::cfg_sla_DatahandlerVersion] +&quot;.company_basic cb&#xA;WHERE&#xA;&#x9;cb.bvd_id in (select string from utl.splitString('&quot;+ @[User::this_CompanyId] +&quot;','|'))&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlLookupCompanyListNames">
      <DTS:VariableValue
        DTS:DataType="8">select
	cb.bvd_id as company_id
	, cb.company_name
from
	prv_dev_dth.vesper.company_basic cb
WHERE
	cb.bvd_id in (select string from utl.splitString('','|'))</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E6387397-2E8A-40A6-9C31-8292D5359785}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_BagOfWords">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{87194551-2D51-4663-97C9-15408F7B1E0B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_ClassProfile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EF876C6F-3BDA-4BB7-9290-1996682F4C23}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_CompanyId">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{98C1F433-9949-4507-88EF-69890CC2BD80}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_Constraints">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{41C824B8-AC26-4BA0-9468-86E18E561BBB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_Normalize">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BE7C1DDF-CD51-4A75-B35B-C3041C0522AB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="this_NumberOfCompanies">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4F76553C-A898-486B-A475-D666AE4B2740}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_RetrievalLabel">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE070AD8-E9F9-4F07-B0E8-FA5253A8616F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="this_RetrievalParam">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A25CAE03-12E5-43F1-9B46-98EE4D9CBA53}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_RetrievalType">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5AF4D750-CAB8-444D-8926-37DC10A0DF1A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_TopicCorpus">
      <DTS:VariableValue
        DTS:DataType="8">Patents</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DD18953D-3581-463F-AE98-B3EBBE8E1D9A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="this_TopicName">
      <DTS:VariableValue
        DTS:DataType="8">Biosensor</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{66A606EB-A800-475E-BCF7-3B8833C6178E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C3598A07-06C6-42EA-A184-CAAC20E9F0D3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0A14CA14-A7CF-44A0-AB22-D43E8E92FA0F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::RUN_ID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varRunId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check POST-conditions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{CD0EFE40-77CB-4503-9D46-86B5C23B5E67}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check POST-conditions">
      <DTS:Variables />
      <DTS:Executables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Check POST-conditions.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{25D1233C-4752-4712-A169-1FD8EC181062}"
          DTS:EventID="220557984"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{D50DC156-8E80-4C10-AE7A-B5B96F65A9C6}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check POST-conditions.EventHandlers[OnPostExecute]\Event - End executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{5b297f91-f8a2-499c-8567-24a5b11cdc13}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - End executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='complete',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Information'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='complete',@source_id='', @level='Information'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Check PRE-conditions"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{BD72527C-3864-4CC9-BB95-24133F077D3F}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check PRE-conditions">
      <DTS:Variables />
      <DTS:Executables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Check PRE-conditions.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{46803D1F-37E3-42C7-B6A3-A04C062E86C1}"
          DTS:EventID="503212420"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{7E100175-1A1A-43D8-8726-13CEE9C71127}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check PRE-conditions.EventHandlers[OnPostExecute]\Event - Start executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{f512c0e1-8c67-4414-80c5-839a9fd2c924}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - Start executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='start',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Information'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='start',@source_id='', @level='Information'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute Feature"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{2639E875-9E22-4D4B-9EF0-B3090FD5309D}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute Feature">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Delete duplicates"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{97124694-F126-4269-80D0-C6E4BCF9A0E8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete duplicates"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{ABDB0776-1A73-4625-A794-09E7836C862F}"
              SQLTask:SqlStatementSource="DELETE [dbo].[company_long_list]&#xA;FROM [dbo].[company_long_list]&#xA;LEFT OUTER JOIN (&#xA;   SELECT MIN(row_i) as row_i, company_id &#xA;   FROM [dbo].[company_long_list] &#xA;   GROUP BY company_id&#xA;) as KeepRows ON&#xA;   [dbo].[company_long_list].row_i = KeepRows.row_i&#xA;WHERE&#xA;   KeepRows.row_i IS NULL" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Execute Feature\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{3759C5F0-39B6-4B74-9F7D-DF7C18982323}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
            DTS:DTSID="{A20693D9-AC69-4523-A4E0-2EAE5BDBB176}"
            DTS:ObjectName="{A20693D9-AC69-4523-A4E0-2EAE5BDBB176}">
            <DTS:ObjectData>
              <FEEFVE
                VariableName="User::cfg_pkg_RetrievalParams" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Bag of Words"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:DelayValidation="True"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{cbb9585e-bc90-4dcd-a832-07c20c5496b7}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Bag of Words"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add retrieval key as a column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Inputs[Derived Column Input].Columns[company_name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="company_name"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component.Outputs[Output 0].Columns[company_name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Output].Columns[this_RetrievalLabel]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Output].Columns[this_RetrievalLabel]"
                              name="this_RetrievalLabel"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_RetrievalLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_RetrievalLabel]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Output].Columns[CompanyName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Output].Columns[CompanyName]"
                              name="CompanyName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,255)#{Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component.Outputs[Output 0].Columns[company_name]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,255)company_name</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[company_long_list]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[company_long_list]) [refTable]
where [refTable].[company_id] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="row_i" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="company_id" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="match" dataType="DT_R4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="company_name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="retrieval_key" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Execute Feature\Foreach Loop Container\Bag of Words\190:invalid};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Inputs[Lookup Input].Columns[company_id]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="company_id"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component.Outputs[Output 0].Columns[company_id]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">company_id</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Script Component"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PlatformDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PlatformDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 DatahandlerDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"DatahandlerDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String cfgslaComponentID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ComponentID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerVersion
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerVersion"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 cfgslaRunID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["cfg_sla_RunID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgtplCMDatahandlerDB
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_tpl_CMDatahandlerDB"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgtplCMPlatformDB
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_tpl_CMPlatformDB"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgtplCMProjectDB
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_tpl_CMProjectDB"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisBagOfWords
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_BagOfWords"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisConstraints
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_Constraints"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 thisNumberOfCompanies
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["this_NumberOfCompanies"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 
    IDTSConnectionManager100 myPlatformConnectionManager;
    IDTSConnectionManager100 myDatahandlerConnectionManager;
    SqlConnection myPlatformConnection;
    SqlConnection myDatahandlerConnection;
    string componentid;
    string dthVersion;

    private void LogEntry(string sourceid, string status, string msg)
    {
        using (SqlCommand cmd = new SqlCommand("nlh.log_addEntry", myPlatformConnection))
        {
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("@component", "CompanyRetrieval.dtsx");
            cmd.Parameters.AddWithValue("@source_type", "SCRIPT");
            cmd.Parameters.AddWithValue("@source_name", "BOW Retrieval");
            cmd.Parameters.AddWithValue("@source_id", sourceid);
            cmd.Parameters.AddWithValue("@message", msg);
            cmd.Parameters.AddWithValue("@action", "EXECUTE");
            cmd.Parameters.AddWithValue("@status", status);

            cmd.ExecuteNonQuery();
        }
    }

    public override void PreExecute()
    {
        base.PreExecute();

        myPlatformConnectionManager = this.Connections.PlatformDB;
        myDatahandlerConnectionManager = this.Connections.DatahandlerDB;
        myPlatformConnection = (SqlConnection)myPlatformConnectionManager.AcquireConnection(null);
        myDatahandlerConnection = (SqlConnection)myDatahandlerConnectionManager.AcquireConnection(null);

        componentid = (string)Variables.cfgslaComponentID;
        dthVersion = Variables.cfgslaDatahandlerVersion;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        myPlatformConnectionManager.ReleaseConnection(myPlatformConnection);
        myDatahandlerConnectionManager.ReleaseConnection(myDatahandlerConnection);
    }

    public override void CreateNewOutputRows()
    {

        SqlDataReader reader;
        string BagOfWords = Variables.thisBagOfWords;
        string[] bow = BagOfWords.Split('|');
        string profileSql = "";
        string commandString;
        string constraintWhereClause;
        string topCount;
        int addDoubleQuotes = 1;
        string w;

        /* Bag of Words */
        if (bow.Length > 0)
        {
            addDoubleQuotes = bow[0].IndexOf('#') < 0 ? 1 : 0;
            w = bow[0].Replace('#', '"');
            LogEntry(componentid, "WARNING", String.Format("Set doubleQuotes to {0} for [{1}]", addDoubleQuotes, w));
            profileSql = String.Format("select company_id from {0}.[ufn_company_text]('{1}',{2}) ", dthVersion, w, addDoubleQuotes);
        }
        for (int i = 1; i < bow.Length; i++)
        {
            if (bow[i].Length > 0)
            {
                addDoubleQuotes = bow[i].IndexOf('#') < 0 ? 1 : 0;
                w = bow[i].Replace('#', '"');
                LogEntry(componentid, "WARNING", String.Format("Set doubleQuotes to {0} for [{1}]", addDoubleQuotes, w));
                profileSql = profileSql + String.Format(" union all select company_id from {0}.[ufn_company_text]('{1}',{2}) ", dthVersion, w, addDoubleQuotes);
            }
        }

        /* Constraints */
        if (Variables.thisConstraints.Length == 0)
        {
            constraintWhereClause = "";
        }
        else
        {
            constraintWhereClause = " WHERE ";
            string[] Constraints = Variables.thisConstraints.Split('|');
            string[] ThisConstraint;

            string ThisConstraintAttribute;
            string ThisConstraintValue;

            int nr = 1;
            foreach (string tc in Constraints)
            {
                if (nr > 1)
                    constraintWhereClause = constraintWhereClause + " AND ";

                ThisConstraint = tc.Split(':');
                ThisConstraintAttribute = ThisConstraint[0];
                ThisConstraintValue = "('" + ThisConstraint[1].Replace(",", "','") + "')";

                constraintWhereClause = constraintWhereClause + "cb." + ThisConstraintAttribute + " IN " + ThisConstraintValue + " ";
                nr = nr + 1;
            }
        }
        LogEntry(componentid, "PROGRESS", constraintWhereClause);

        /* Number of companies */
        topCount = String.Format("TOP {0}", Variables.thisNumberOfCompanies);
        LogEntry(componentid, "PROGRESS", topCount);


        commandString = String.Format(@"select {3} a.company_id, cb.company_name
                                         from ({0}) a JOIN {1}.company_basic cb ON cb.bvd_id=a.company_id {2}
                                          group by a.company_id, cb.company_name
                                            order by count(*) desc", profileSql, dthVersion, constraintWhereClause, topCount);

        SqlCommand sqlc = new SqlCommand(commandString, myDatahandlerConnection);
        sqlc.CommandTimeout = 0;

        try
        {
            int rowcount = 0;

            reader = sqlc.ExecuteReader();
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    Output0Buffer.AddRow();
                    Output0Buffer.companyid = reader.GetString(0);
                    Output0Buffer.companyname = (reader.GetString(1).Length > 255 ? reader.GetString(1).Substring(0, 255) : reader.GetString(1));
                    //                Output0Buffer.companyname = reader.GetString(1).Substring(0, 255);

                    rowcount += 1;
                }

                string msg = String.Format("Successfully read {0} number of rows", rowcount);
                LogEntry(componentid, "SUCCESS", msg);
            }
            else
            {
                LogEntry(componentid, "WARNING", String.Format("No rows were added for query [{0}]", commandString));
            }
        }
        catch (Exception e)
        {
            LogEntry(componentid, "FAILURE", e.Message);
            LogEntry(componentid, "FAILURE", String.Format("Failed query was [{0}].", commandString));
        }

    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String companyid
    {
        set
        {
            this[0] = value;
        }
    }
    public bool companyid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String companyname
    {
        set
        {
            this[1] = value;
        }
    }
    public bool companyname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_161065eab84a47cc82d8b8177352436f.Properties.Settings.get_Default():SC_161065eab84a47cc82d8b8177352436f.Properties.Sett" +
    "ings")]

namespace SC_161065eab84a47cc82d8b8177352436f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_161065eab84a47cc82d8b8177352436f</msb:CodeName>
		<msb:DisplayName>SC_161065eab84a47cc82d8b8177352436f</msb:DisplayName>
		<msb:ProjectId>{CEC3539C-C030-49C9-B985-3E7F7EB3ECDF}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_161065eab84a47cc82d8b8177352436f.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:Breakpoint Include="e75c199b6c734787acd11c36166c910c">
			<msb:FileName>main.cs</msb:FileName>
			<msb:ColumnNumber>21</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>221</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_161065eab84a47cc82d8b8177352436f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_161065eab84a47cc82d8b8177352436f")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_161065eab84a47cc82d8b8177352436f.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{f92d985d-ecbe-45bb-a3ae-cc7a9e5f19cc}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_161065eab84a47cc82d8b8177352436f</RootNamespace>
    <AssemblyName>SC_161065eab84a47cc82d8b8177352436f</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_161065eab84a47cc82d8b8177352436f" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_161065eab84a47cc82d8b8177352436f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_161065eab84a47cc82d8b8177352436f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_161065eab84a47cc82d8b8177352436f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_161065eab84a47cc82d8b8177352436f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_161065eab84a47cc82d8b8177352436f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_161065eab84a47cc82d8b8177352436f.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKiC5FgAAAAAAAAAAOAAIiALATAAACoAAAAIAAAAAAAAHkkA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMxIAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJCkAAAAgAAAAKgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAsAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
SQAAAAAAAEgAAAACAAUAgCgAAJQfAAABAAAAAAAAABRIAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwC6AAAAAQAAEXIBAABwAnsDAAAEcxAAAAoKBhpvEQAA
CgZvEgAACnIjAABwcjkAAHBvEwAACiYGbxIAAApyZQAAcHJ/AABwbxMAAAomBm8SAAAKco0AAHBy
pwAAcG8TAAAKJgZvEgAACnLDAABwA28TAAAKJgZvEgAACnLZAABwBW8TAAAKJgZvEgAACnLrAABw
cvsAAHBvEwAACiYGbxIAAApyCwEAcARvEwAACiYGbxQAAAom3goGLAYGbxUAAArcKgAAARAAAAIA
EQCerwAKAAAAABMwAwB5AAAAAAAAAAIoFgAACgICewcAAARvFAAABn0BAAAEAgJ7BwAABG8VAAAG
fQIAAAQCAnsBAAAEFG8XAAAKdA8AAAF9AwAABAICewIAAAQUbxcAAAp0DwAAAX0EAAAEAgJ7CAAA
BG8XAAAGfQUAAAQCAnsIAAAEbxgAAAZ9BgAABCqmAigYAAAKAnsBAAAEAnsDAAAEbxkAAAoCewIA
AAQCewQAAARvGQAACioAGzAGAHQDAAACAAARAnsIAAAEbx0AAAYXjSQAAAElFh98nW8aAAAKC3Ib
AQBwDBcTBgeOLF8HFpofI28bAAAKFjIDFisBFxMGBxaaHyMfIm8cAAAKEwcCAnsFAAAEch0BAHBy
LQEAcBEGjCYAAAERBygdAAAKKAEAAAZycQEAcAJ7BgAABBEHEQaMJgAAASgeAAAKDBcTCSt5BxEJ
mm8fAAAKFjFnBxEJmh8jbxsAAAoWMgMWKwEXEwYHEQmaHyMfIm8cAAAKEwcCAnsFAAAEch0BAHBy
LQEAcBEGjCYAAAERBygdAAAKKAEAAAYIcuUBAHACewYAAAQRBxEGjCYAAAEoHgAACiggAAAKDBEJ
F1gTCREJB45pMoACewgAAARvHgAABm8fAAAKLQxyGwEAcBMEOM4AAABycAIAcBMEAnsIAAAEbx4A
AAYXjSQAAAElFh98nW8aAAAKFxMNEw4WEw84lAAAABEOEQ+aEQ0XMQ4RBHKAAgBwKCAAAAoTBBeN
JAAAASUWHzqdbxoAAAoTChEKFpoTC3KMAgBwEQoXmnKSAgBwcpYCAHBvIQAACnKeAgBwKCIAAAoT
DByNJQAAASUWEQSiJRdypAIAcKIlGBELoiUZcqwCAHCiJRoRDKIlG3K2AgBwoigjAAAKEwQRDRdY
Ew0RDxdYEw8RDxEOjmk/Yf///wICewUAAARyugIAcBEEKAEAAAZyzAIAcAJ7CAAABG8fAAAGjCYA
AAEoJAAAChMFAgJ7BQAABHK6AgBwEQUoAQAABnLcAgBwGo0XAAABJRYIoiUXAnsGAAAEoiUYEQSi
JRkRBaIoJQAACg0JAnsEAAAEcxAAAAoTCBEIFm8mAAAKFhMQEQhvJwAACgoGbygAAAo5jgAAACtc
AnsJAAAEbwsAAAYCewkAAAQGFm8pAAAKbwcAAAYCewkAAAQGF28pAAAKbx8AAAog/wAAADAJBhdv
KQAACisSBhdvKQAAChYg/wAAAG8qAAAKbwkAAAYREBdYExAGbysAAAotnHIzBQBwERCMJgAAASgk
AAAKExECAnsFAAAEcn0FAHARESgBAAAGKxwCAnsFAAAEch0BAHByjQUAcAkoJAAACigBAAAG3jgT
EgICewUAAARy0wUAcBESbywAAAooAQAABgICewUAAARy0wUAcHLjBQBwCSgkAAAKKAEAAAbeACoB
EAAAAAB5AsI7AzgSAAABHgIoDgAABioqAgMEBSgtAAAKKiYCFgMoLgAACipaAywIAhYoLwAACipy
EwYAcHMwAAAKeiYCFwMoLgAACipaAywIAhcoLwAACipyEwYAcHMwAAAKeh4CKDEAAAoqHgIoMgAA
CioeAigzAAAKKn4CKDQAAAoCAnMTAAAGfQcAAAQCAnMWAAAGfQgAAAQqBipuAnsJAAAELBICewkA
AARvDAAABgIUfQkAAAQqABMwBQBJAAAAAwAAERYKKy4EBpQOBHKwBgBwKDUAAAozGQIFBpoCBAaU
KDYAAAoOBHMGAAAGfQkAAAQGF1gKBgMyzgJvEgAABgJvDwAABgIoEAAABio6Aig3AAAKAgN9CgAA
BCqCAnsKAAAEbzgAAApvOQAACnLCBgBwbzoAAApvOwAACiqCAnsKAAAEbzgAAApvOQAACnLYBgBw
bzoAAApvOwAACio6Aig3AAAKAgN9CwAABCqWAnsLAAAEbzwAAApy9AYAcG89AAAKKD4AAApvPwAA
CnQlAAABKpYCewsAAARvPAAACnIcBwBwbz0AAAooPgAACm8/AAAKdCUAAAEqlgJ7CwAABG88AAAK
clIHAHBvPQAACig+AAAKbz8AAAqlJgAAASqWAnsLAAAEbzwAAApybgcAcG89AAAKKD4AAApvPwAA
CnQlAAABKpYCewsAAARvPAAACnKeBwBwbz0AAAooPgAACm8/AAAKdCUAAAEqlgJ7CwAABG88AAAK
csgHAHBvPQAACig+AAAKbz8AAAp0JQAAASqWAnsLAAAEbzwAAApy8AcAcG89AAAKKD4AAApvPwAA
CnQlAAABKpYCewsAAARvPAAACnIQCABwbz0AAAooPgAACm8/AAAKdCUAAAEqlgJ7CwAABG88AAAK
cjIIAHBvPQAACig+AAAKbz8AAAqlJgAAASoeAig3AAAKKq5+DAAABC0ecmAIAHDQBwAAAihAAAAK
b0EAAApzQgAACoAMAAAEfgwAAAQqGn4NAAAEKh4CgA0AAAQqGn4OAAAEKh4CKEMAAAoqLnMlAAAG
gA4AAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAZAgAACN+AADQCAAA
XAsAACNTdHJpbmdzAAAAACwUAADUCAAAI1VTAAAdAAAQAAAAI0dVSUQAAAAQHQAAhAIAACNCbG9i
AAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAADIAAAAIAAAADgAAACYAAAARAAAAQwAAABAA
AAADAAAABQAAABIAAAATAAAAAQAAAAcAAAABAAAAAAAhBQEAAAAAAAYAxgOXCAYAWgSXCAYAEgNx
CA8ACwkAAAYAPwP/BQYAqQP/BQYAigP/BQYAQQT/BQYA5gP/BQYA/wP/BQYAVgP/BQYAcQPOBAoA
GgRMAg4AZgD8BxIAbAZJChIAwgFJChIAUQdJCgYAtwaPBQoAigdMAhYAewdMAgoA4AZMAgoAfQpM
AgYAIQqPBQYA9QJxCAYAmwe3CAYA1AbqBRoAxQILBRoAJgMLBRoApQLVBQYA2gKXCBIAuAHBBhIA
cQJRARIAMQZJChIATQhJCgYA8QGPBQYAPwePBQYA6wSPBQYAqACPBRIARAfBBgYApwaPBR4AAQAk
CB4AKgAkCB4ATQAkCA4AfwD8Bw4AGgD8B1sA/goAAA4AkAD8BwYAeAKPBQYA/QGPBQYAOQv/BQAA
AACuAAAAAAABAAEAAQAQAKIFAAAQAAEAAQABABAAbQcAAE0ABwAGAAEAEABfCgAAWQAHAA4AAQAQ
AKcJAABdAAoAEwABABAAbwkAAF0ACwAWAAAAEAC+CDQJXQAMACAAAAEQAJ4JNAl1AA4AJAABAMEH
QQEBAN0HQQEBAHoGRQEBAI8GRQEBAJ4BSQEBAK0FSQEGAKcJTAEGAG8JUAEGAG0HVAEBAG0KWAEB
AG0KWAERAJYFXAERAJUCYAERANUBZAFQIAAAAACBAFILaAEBACghAAAAAMYAeAQGAAQArSEAAAAA
xgCDBAYABADYIQAAAADGAP8JBgAEAGglAAAAAIYYWggGAAQAcCUAAAAAhhhaCMUABAB7JQAAAACG
CKoBEAAHAIUlAAAAAIYISQVvAQgAnCUAAAAAhgg8AhAACQCmJQAAAACGCF4FbwEKAL0lAAAAAIYA
LgsGAAsAxSUAAAAAhgAoCgYACwDNJQAAAACGACsKsgALANUlAAAAAIYYWggGAAsA9SUAAAAAxgHe
CQYACwD3JQAAAACBAIEBBgALABQmAAAAAMYA3gp0AQsA9SUAAAAAxgH/CQYADwBpJgAAAACGGFoI
gAEPAHgmAAAAAIYIzgD5ABAAmSYAAAAAhgj3APkAEAC6JgAAAACGGFoIgAEQAMkmAAAAAIYILwHB
ABEA7yYAAAAAhgi4BcEAEQAVJwAAAACGCB8BPAARADsnAAAAAIYI3QDBABEAYScAAAAAhgi3AMEA
EQCHJwAAAACGCAkBwQARAK0nAAAAAIYIhAjBABEA0ycAAAAAhgjKCcEAEQD5JwAAAACGCBoJPAAR
AB8oAAAAAIMYWggGABEAJygAAAAAkwiXB4YBEQBTKAAAAACTCH0CiwERAFooAAAAAJMIiQKQAREA
YigAAAAAlgg9CpYBEgBpKAAAAACGGFoIBgASAHEoAAAAAJEYYAibARIAAAABAJUBAAACAOwJAAAD
APwEAAABAJAHAAACAHkJAAADAO4GAAABAJwEAAABAJwEAAABAJwEAAABAJwEAAABAOQJAAACAGcI
AAADALMJAAAEAO4GAAABAIMKAAABAIMKAAABAJwECQBaCAEAEQBaCAYAGQBaCAoAKQBaCBAAMQBa
CBAAOQBaCBAAQQBaCBAASQBaCBAAUQBaCBAAWQBaCBAAYQBaCBAAaQBaCAYAwQBaCAYA4QBaCBUA
8QBaCAYAgQBaCCAA+QBtAicAgQC7CS4ACQGPBDQA+QBCCzwAGQG9AgYAsQB4BAYAcQBIBkAAsQCD
BAYAcQBaBkUAKQE3CmYAKQHGBG0AKQHNAXIAKQEaCngAKQEaCn8AKQEABTwAKQETCocAKQHNAY0A
KQETCpMAKQETCpoAKQEaCqAAKQEaCqYA+QDLCgEAgQBfB60AOQHzCbIAOQHoBLYAKQHyBLsAOQF8
AbIAkQDlAcEAmQBaCMUAmQCGBc8AmQB1BQEAQQFaCBAAmQAuCwYAmQAoCgYAmQArCrIAsQBaCAYA
sQBFAdkAsQCNCeAAuQBaCAYAsQBdAeYASQERBuwAUQEhAvIAWQGrB/kAsQBjCf4AYQF9BQQBsQAZ
CwsBaQHqChEBgQEPAhgBgQE1CyEByQBaCCcB6QBaCAYALgALAL8BLgATAMgBLgAbAOcBLgAjAPAB
LgArABkCLgAzABkCLgA7ABkCLgBDAPABLgBLAB8CLgBTABkCLgBbADYCQwBjAH4C4wBrAH4CwQF7
AH4CCQJzAOcBKQJzAOcBGwBKANUAAwABAAUABQAGAAcABwAQAAgAEgAAAK4BnwEAAE0FowEAAEAC
nwEAAGIFowEAANIApwEAAPsApwEAADMBnwEAALwFnwEAACMBrAEAAOEAnwEAALsAnwEAAA0BnwEA
AIgInwEAAM4JnwEAAB4JrAEAAJsHsAEAAJ0CtQEAAEEKugEBAAcAAwABAAgABQABAAkABwABAAoA
CQACABQACwACABUADQACABcADwACABgAEQACABkAEwACABoAFQACABsAFwACABwAGQACAB0AGwAC
AB4AHQACAB8AHwACACEAIQACACIAIwABACMAIwACACQAJQAEgAAAAQAAAKAYpDUAAAAAAACiBAAA
BAAAAAAAAAAAAAAALwFzAQAAAAALAAAAAAAAAAAAAAA4AY0KAAAAAAsAAAAAAAAAAAAAADgB+AYA
AAAABAAAAAAAAAAAAAAALwFRAQAAAAALAAAAAAAAAAAAAAA4AaoKAAAAAAQAAAAAAAAAAAAAAC8B
jwUAAAAACwAAAAAAAAAAAAAAOAEbBwAAAAAAAAAAAQAAAMgIAAAAAAAAAElEVFNDb21wb25lbnRN
ZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlv
bjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElE
VFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAASW50MzIAPE1vZHVsZT4AZ2V0
X2NmZ3RwbENNUGxhdGZvcm1EQgBnZXRfUGxhdGZvcm1EQgBnZXRfY2ZndHBsQ01EYXRhaGFuZGxl
ckRCAGdldF9EYXRhaGFuZGxlckRCAGdldF9jZmd0cGxDTVByb2plY3REQgBnZXRfY2Znc2xhUnVu
SUQAZ2V0X2NmZ3NsYUNvbXBvbmVudElEAEdldE91dHB1dElEAFN5c3RlbS5EYXRhAGdldF9Db21w
b25lbnRNZXRhRGF0YQBtc2NvcmxpYgBSZWFkAE1hcmtPdXRwdXRzRmluaXNoZWQAc291cmNlaWQA
Y29tcG9uZW50aWQAc2V0X2NvbXBhbnlpZABEYkNvbW1hbmQAU3FsQ29tbWFuZABSZXBsYWNlAGRl
ZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBzZXRfY29tcGFueW5h
bWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAc2V0X0NvbW1hbmRUeXBlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUA
UG9zdEV4ZWN1dGUAQWRkV2l0aFZhbHVlAHZhbHVlAFNDXzE2MTA2NWVhYjg0YTQ3Y2M4MmQ4Yjgx
NzczNTI0MzZmAEluZGV4T2YAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAU3Vi
c3RyaW5nAG1zZwBnZXRfTGVuZ3RoAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18xNjEwNjVlYWI4
NGE0N2NjODJkOGI4MTc3MzUyNDM2Zi5kbGwAc2V0X2NvbXBhbnlpZF9Jc051bGwAc2V0X2NvbXBh
bnluYW1lX0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1h
bgBTY3JpcHRNYWluAGR0aFZlcnNpb24AZ2V0X2NmZ3NsYURhdGFoYW5kbGVyVmVyc2lvbgBTeXN0
ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBn
ZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24AQWNx
dWlyZUNvbm5lY3Rpb24AUmVsZWFzZUNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBteVBsYXRmb3Jt
Q29ubmVjdGlvbgBteURhdGFoYW5kbGVyQ29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0
aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1h
cABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RFRTUGlwZWxpbmVXcmFwAENoYXIARGJEYXRhUmVhZGVyAFNxbERhdGFSZWFkZXIARXhlY3V0ZVJl
YWRlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBteVBsYXRmb3JtQ29ubmVjdGlvbk1hbmFn
ZXIAbXlEYXRhaGFuZGxlckNvbm5lY3Rpb25NYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVy
AFNxbFBhcmFtZXRlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBn
ZXRfdGhpc0JhZ09mV29yZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNDXzE2MTA2NWVhYjg0YTQ3Y2M4MmQ4YjgxNzczNTI0MzZmLlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfdGhpc051bWJlck9mQ29tcGFu
aWVzAFNDXzE2MTA2NWVhYjg0YTQ3Y2M4MmQ4YjgxNzczNTI0MzZmLlByb3BlcnRpZXMAZ2V0X1Jl
YWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0
aW5ncwBDb25uZWN0aW9ucwBCdWZmZXJzAGdldF9QYXJhbWV0ZXJzAGdldF90aGlzQ29uc3RyYWlu
dHMARmluaXNoT3V0cHV0cwBzdGF0dXMAZ2V0X0hhc1Jvd3MAQ3JlYXRlTmV3T3V0cHV0Um93cwBD
b25jYXQARm9ybWF0AE9iamVjdABTZXRFbmRPZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABTeXN0
ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29t
cG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5Q
aXBlbGluZUhvc3QAc2V0X0NvbW1hbmRUaW1lb3V0AFByaW1lT3V0cHV0AEdldFZhbHVlV2l0aENv
bnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAQWRk
Um93AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkATG9nRW50cnkAAAAhbgBsAGgALgBsAG8A
ZwBfAGEAZABkAEUAbgB0AHIAeQAAFUAAYwBvAG0AcABvAG4AZQBuAHQAACtDAG8AbQBwAGEAbgB5
AFIAZQB0AHIAaQBlAHYAYQBsAC4AZAB0AHMAeAAAGUAAcwBvAHUAcgBjAGUAXwB0AHkAcABlAAAN
UwBDAFIASQBQAFQAABlAAHMAbwB1AHIAYwBlAF8AbgBhAG0AZQAAG0IATwBXACAAUgBlAHQAcgBp
AGUAdgBhAGwAABVAAHMAbwB1AHIAYwBlAF8AaQBkAAARQABtAGUAcwBzAGEAZwBlAAAPQABhAGMA
dABpAG8AbgAAD0UAWABFAEMAVQBUAEUAAA9AAHMAdABhAHQAdQBzAAABAA9XAEEAUgBOAEkATgBH
AABDUwBlAHQAIABkAG8AdQBiAGwAZQBRAHUAbwB0AGUAcwAgAHQAbwAgAHsAMAB9ACAAZgBvAHIA
IABbAHsAMQB9AF0AAHNzAGUAbABlAGMAdAAgAGMAbwBtAHAAYQBuAHkAXwBpAGQAIABmAHIAbwBt
ACAAewAwAH0ALgBbAHUAZgBuAF8AYwBvAG0AcABhAG4AeQBfAHQAZQB4AHQAXQAoACcAewAxAH0A
JwAsAHsAMgB9ACkAIAABgIkgAHUAbgBpAG8AbgAgAGEAbABsACAAcwBlAGwAZQBjAHQAIABjAG8A
bQBwAGEAbgB5AF8AaQBkACAAZgByAG8AbQAgAHsAMAB9AC4AWwB1AGYAbgBfAGMAbwBtAHAAYQBu
AHkAXwB0AGUAeAB0AF0AKAAnAHsAMQB9ACcALAB7ADIAfQApACAAAQ8gAFcASABFAFIARQAgAAAL
IABBAE4ARAAgAAAFKAAnAAEDLAAABycALAAnAAEFJwApAAEHYwBiAC4AAAkgAEkATgAgAAADIAAA
EVAAUgBPAEcAUgBFAFMAUwAAD1QATwBQACAAewAwAH0AAIJVcwBlAGwAZQBjAHQAIAB7ADMAfQAg
AGEALgBjAG8AbQBwAGEAbgB5AF8AaQBkACwAIABjAGIALgBjAG8AbQBwAGEAbgB5AF8AbgBhAG0A
ZQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABmAHIAbwBtACAAKAB7ADAAfQApACAAYQAgAEoA
TwBJAE4AIAB7ADEAfQAuAGMAbwBtAHAAYQBuAHkAXwBiAGEAcwBpAGMAIABjAGIAIABPAE4AIABj
AGIALgBiAHYAZABfAGkAZAA9AGEALgBjAG8AbQBwAGEAbgB5AF8AaQBkACAAewAyAH0ACgAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIABnAHIAbwB1AHAAIABiAHkAIABhAC4AYwBvAG0AcABhAG4A
eQBfAGkAZAAsACAAYwBiAC4AYwBvAG0AcABhAG4AeQBfAG4AYQBtAGUACgAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAbwByAGQAZQByACAAYgB5ACAAYwBvAHUAbgB0ACgAKgApACAAZABl
AHMAYwAASVMAdQBjAGMAZQBzAHMAZgB1AGwAbAB5ACAAcgBlAGEAZAAgAHsAMAB9ACAAbgB1AG0A
YgBlAHIAIABvAGYAIAByAG8AdwBzAAAPUwBVAEMAQwBFAFMAUwAARU4AbwAgAHIAbwB3AHMAIAB3
AGUAcgBlACAAYQBkAGQAZQBkACAAZgBvAHIAIABxAHUAZQByAHkAIABbAHsAMAB9AF0AAA9GAEEA
SQBMAFUAUgBFAAAvRgBhAGkAbABlAGQAIABxAHUAZQByAHkAIAB3AGEAcwAgAFsAewAwAH0AXQAu
AACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABz
AGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAA
dABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0
ACAAMAAAFVAAbABhAHQAZgBvAHIAbQBEAEIAABtEAGEAdABhAGgAYQBuAGQAbABlAHIARABCAAAn
YwBmAGcAXwBzAGwAYQBfAEMAbwBtAHAAbwBuAGUAbgB0AEkARAAANWMAZgBnAF8AcwBsAGEAXwBE
AGEAdABhAGgAYQBuAGQAbABlAHIAVgBlAHIAcwBpAG8AbgAAG2MAZgBnAF8AcwBsAGEAXwBSAHUA
bgBJAEQAAC9jAGYAZwBfAHQAcABsAF8AQwBNAEQAYQB0AGEAaABhAG4AZABsAGUAcgBEAEIAAClj
AGYAZwBfAHQAcABsAF8AQwBNAFAAbABhAHQAZgBvAHIAbQBEAEIAACdjAGYAZwBfAHQAcABsAF8A
QwBNAFAAcgBvAGoAZQBjAHQARABCAAAfdABoAGkAcwBfAEIAYQBnAE8AZgBXAG8AcgBkAHMAACF0
AGgAaQBzAF8AQwBvAG4AcwB0AHIAYQBpAG4AdABzAAAtdABoAGkAcwBfAE4AdQBtAGIAZQByAE8A
ZgBDAG8AbQBwAGEAbgBpAGUAcwAAcVMAQwBfADEANgAxADAANgA1AGUAYQBiADgANABhADQANwBj
AGMAOAAyAGQAOABiADgAMQA3ADcAMwA1ADIANAAzADYAZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAAACWO0+1PKXkRZM3FYy49Wm9AAQgAQEIAyAAAQUgAQEREQQg
AQEOBSABARFtBAcBEkEGIAIBDhI9BiABARGAgQUgABKAhQcgAhKAiQ4cAyAACAQgARwcBCABARwb
BxMSRR0ODg4ODggOEkEIHQ4ODggdDggIDhJJBiABHQ4dAwQgAQgDBSACDgMDBgADDg4cHAcABA4O
HBwcBQACDg4OBSACDg4OBgADDg4ODgUAAQ4dDgUAAg4OHAYAAg4OHRwEIAASRQMgAAIEIAEOCAUg
Ag4ICAMgAA4JIAMBElEdCBJVBSACAQgcAwcBCAYAAggSVQ4FIAEdCAgFIAASgKUFIAASgKkGIAES
gK0OBCAAEjkFIAASgLEGIAESgLUcBQAAEoC5BiABHBKAvQgAARKAwRGAxQUgABKAyQcgAgEOEoDJ
CLd6XFYZNOCJCImEXc2AgMyRAwYSOQMGEj0CBg4DBhIUAwYSGAMGEgwDBhJZAwYSZQMGEmkDBhIg
BiADAQ4ODgQgAQECCyAEAQgdCB0SURJVBSABARJZBAAAEmUEAAASaQUAAQESaQQAABIgAwAAAQMo
AA4DKAACBCgAEjkDKAAIBAgAEmUECAASaQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18xNjEwNjVlYWI4NGE0N2NjODJkOGI4MTc3MzUy
NDM2ZgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE3AABHAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQEAQAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAA9EgAAAAAAAAAAAAADkkAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQA
AAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABAKQ1oBgAAAEApDWgGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAA
ABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUA
AAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMQA2
ADEAMAA2ADUAZQBhAGIAOAA0AGEANAA3AGMAYwA4ADIAZAA4AGIAOAAxADcANwAzADUAMgA0ADMA
NgBmAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMwAwADQALgAx
ADMANwAzADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMQA2ADEA
MAA2ADUAZQBhAGIAOAA0AGEANAA3AGMAYwA4ADIAZAA4AGIAOAAxADcANwAzADUAMgA0ADMANgBm
AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIAAgADIAMAAxADcAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQBy
AGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMA
XwAxADYAMQAwADYANQBlAGEAYgA4ADQAYQA0ADcAYwBjADgAMgBkADgAYgA4ADEANwA3ADMANQAy
ADQAMwA2AGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8A
MQA2ADEAMAA2ADUAZQBhAGIAOAA0AGEANAA3AGMAYwA4ADIAZAA4AGIAOAAxADcANwAzADUAMgA0
ADMANgBmAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADMA
MAA0AC4AMQAzADcAMwAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA2ADMAMAA0AC4AMQAzADcAMwAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAACA5AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_161065eab84a47cc82d8b8177352436f</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerVersion,User::cfg_sla_RunID,User::cfg_tpl_CMDatahandlerDB,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_CMProjectDB,User::this_BagOfWords,User::this_Constraints,User::this_NumberOfCompanies</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="1">
                            <arrayElement
                              dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D11.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;221&lt;/FileLine&gt;
&lt;FileColumn&gt;21&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">5a10b3eb9432933361f57c2ece2df26e</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">7034b0e6640687e9386d637348f334564f4f83d8</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component.Connections[PlatformDB]"
                          connectionManagerID="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          name="PlatformDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component.Connections[DatahandlerDB]"
                          connectionManagerID="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          name="DatahandlerDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component.Outputs[Output 0].Columns[company_id]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component.Outputs[Output 0].Columns[company_id]"
                              name="company_id" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component.Outputs[Output 0].Columns[company_name]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component.Outputs[Output 0].Columns[company_name]"
                              name="company_name" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Write to company longlist"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[company_long_list]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input].Columns[company_id]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="company_id"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_id]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component.Outputs[Output 0].Columns[company_id]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input].Columns[this_RetrievalLabel]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="this_RetrievalLabel"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[retrieval_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Output].Columns[this_RetrievalLabel]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input].Columns[CompanyName]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="CompanyName"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_name]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Output].Columns[CompanyName]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[row_i]"
                              dataType="i4"
                              name="row_i" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_id]"
                              dataType="wstr"
                              length="50"
                              name="company_id" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[match]"
                              dataType="r4"
                              name="match" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_name]"
                              dataType="wstr"
                              length="255"
                              name="company_name" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[retrieval_key]"
                              dataType="wstr"
                              length="50"
                              name="retrieval_key" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag of Words.Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Row Count.Inputs[Row Count Input 1]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag of Words.Paths[Lookup No Match Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist.Inputs[OLE DB Destination Input]"
                      name="Lookup No Match Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Outputs[Lookup No Match Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag of Words.Paths[Output 0]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column.Inputs[Derived Column Input]"
                      name="Output 0"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component.Outputs[Output 0]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Bag of Words.Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup.Inputs[Lookup Input]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Bag of Words\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:DelayValidation="True"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{b757f1b2-7b2e-4eef-8940-723b3d3f6cac}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Basic Constraints"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add retrieval key as a column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Inputs[Derived Column Input].Columns[company_name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="company_name"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints.Outputs[Output 0].Columns[company_name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Output].Columns[this_RetrievalLabel]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Output].Columns[this_RetrievalLabel]"
                              name="this_RetrievalLabel"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,50)@[User::this_RetrievalLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,50)@[User::this_RetrievalLabel]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Output].Columns[CompanyName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Output].Columns[CompanyName]"
                              name="CompanyName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,255)#{Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints.Outputs[Output 0].Columns[company_name]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,255)company_name</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Basic Constraints"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 PlatformDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PlatformDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 DatahandlerDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"DatahandlerDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String cfgslaComponentID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ComponentID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerVersion
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerVersion"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 cfgslaRunID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["cfg_sla_RunID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgtplCMDatahandlerDB
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_tpl_CMDatahandlerDB"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgtplCMPlatformDB
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_tpl_CMPlatformDB"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgtplCMProjectDB
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_tpl_CMProjectDB"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisConstraints
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_Constraints"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 thisNumberOfCompanies
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["this_NumberOfCompanies"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 
    IDTSConnectionManager100 myPlatformConnectionManager;
    IDTSConnectionManager100 myDatahandlerConnectionManager;
    SqlConnection myPlatformConnection;
    SqlConnection myDatahandlerConnection;
    string componentid;
    string dthVersion;

    private void LogEntry(string sourceid, string status, string msg)
    {
        using (SqlCommand cmd = new SqlCommand("nlh.log_addEntry", myPlatformConnection))
        {
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("@component", "CompanyRetrieval.dtsx");
            cmd.Parameters.AddWithValue("@source_type", "SCRIPT");
            cmd.Parameters.AddWithValue("@source_name", "Basic Constraints Retrieval");
            cmd.Parameters.AddWithValue("@source_id", sourceid);
            cmd.Parameters.AddWithValue("@message", msg);
            cmd.Parameters.AddWithValue("@action", "EXECUTE");
            cmd.Parameters.AddWithValue("@status", status);

            cmd.ExecuteNonQuery();
        }
    }

    public override void PreExecute()
    {
        base.PreExecute();

        /* Platofmr is used for logging, Datahandler for retrieval */
        myPlatformConnectionManager = this.Connections.PlatformDB;
        myDatahandlerConnectionManager = this.Connections.DatahandlerDB;
        myPlatformConnection = (SqlConnection)myPlatformConnectionManager.AcquireConnection(null);
        myDatahandlerConnection = (SqlConnection)myDatahandlerConnectionManager.AcquireConnection(null);

        componentid = (string)Variables.cfgslaComponentID;
        dthVersion = Variables.cfgslaDatahandlerVersion;
    }

    public override void PostExecute()
    {
        base.PostExecute();

        myPlatformConnectionManager.ReleaseConnection(myPlatformConnection);
        myDatahandlerConnectionManager.ReleaseConnection(myDatahandlerConnection);
    }

    public override void CreateNewOutputRows()
    {

        SqlDataReader reader;
        string commandString;
        string constraintWhereClause;
        string topCount;
        string[] Constraints = Variables.thisConstraints.Split('|');

        /* Constraints; that's the key element of this package */
        if (Variables.thisConstraints.Length == 0 || Constraints.Length == 0)
        {
            // If there are no constraints, the package returns no companies; otherwise it would be just the top N largest which seems useless.
            LogEntry(componentid, "FAILURE", String.Format("No constraints were given. Input variable [{0}].", Variables.thisConstraints));
        }
        else
        {
            constraintWhereClause = " ";
            string[] ThisConstraint;

            string ThisConstraintAttribute;

            int nr = 0; // # constraints
            foreach (string tc in Constraints)
            {
                if (nr > 0)
                    constraintWhereClause = constraintWhereClause + " AND ";

                ThisConstraint = tc.Split(':');
                if (ThisConstraint.Length == 2)
                {
                    ThisConstraintAttribute = ThisConstraint[0];
                    string closingParenthesis = "";
                    if (ThisConstraintAttribute.Substring(0, 1) == "?")
                    {
                        ThisConstraintAttribute = ThisConstraintAttribute.Substring(1);
                        constraintWhereClause = constraintWhereClause + " (" + ThisConstraintAttribute + " IS NULL OR ";
                        closingParenthesis = ")";
                    }

                    if (ThisConstraint[1].Length > 0 && (ThisConstraint[1].Substring(0, 1) == "<" || ThisConstraint[1].Substring(0, 1) == ">"))
                    {
                        // a. ...|attributeX:>100 --> ... AND attributeX > 100
                        constraintWhereClause = constraintWhereClause 
                                                + ThisConstraintAttribute + " " + ThisConstraint[1] + closingParenthesis;
                    }
                    else
                    {
                        bool isNegated = ThisConstraint[1].Substring(0, 1) == "!";
                        if(isNegated) LogEntry(componentid, "PROGRESS", String.Format("Constraint [{0}] is negated.", tc));

                        if (ThisConstraint[1].IndexOf('%') != -1)
                        {
                            // b. ...|attributeX:%otc --> ... AND attributeX like '%otc'
                            constraintWhereClause = constraintWhereClause + ThisConstraintAttribute + (isNegated ? " NOT" : "") + " LIKE '" + ThisConstraint[1].Substring( isNegated ? 1 : 0 ) + "' " + closingParenthesis;
                        }
                        else
                        {
                            // c. ...|attributeX:a,b,c --> ... AND attributeX in ('a','b','c')
                            constraintWhereClause = constraintWhereClause + ThisConstraintAttribute + (isNegated ? " NOT" : "") + " IN ('" + ThisConstraint[1].Substring(isNegated ? 1 : 0 ).Replace(",", "','") + "') " + closingParenthesis;
                        }
                    }
                    nr = nr + 1;
                }
                else
                {
                    LogEntry(componentid, "FAILURE", String.Format("Constraint [{0}] could not be parsed.", tc));
                }
            }

            LogEntry(componentid, "PROGRESS", String.Format("Read {0} constraints out of {1}.", nr, Constraints.Length));
            LogEntry(componentid, "PROGRESS", constraintWhereClause);

            /* Number of companies */
            topCount = String.Format("TOP {0}", Variables.thisNumberOfCompanies);
            LogEntry(componentid, "PROGRESS", topCount);

            /* Construct the final SQL */
            commandString = String.Format(@"SELECT {2}
                                                bvd_id
                                                , company_name
                                            FROM
                                                {0}.company_basic
                                            WHERE
                                                {1}
                                            ORDER BY
                                                revenue DESC", dthVersion, constraintWhereClause, topCount);

            SqlCommand sqlc = new SqlCommand(commandString, myDatahandlerConnection);
            sqlc.CommandTimeout = 0;

            try
            {
                int rowcount = 0;

                reader = sqlc.ExecuteReader();
                if (reader.HasRows)
                {
                    while (reader.Read())
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.companyid = reader.GetString(0);
                        Output0Buffer.companyname = (reader.GetString(1).Length > 255 ? reader.GetString(1).Substring(0, 255) : reader.GetString(1));

                        rowcount += 1;
                    }

                    string msg = String.Format("Successfully read {0} number of rows", rowcount);
                    LogEntry(componentid, "SUCCESS", msg);
                }
                else
                {
                    LogEntry(componentid, "WARNING", String.Format("No rows were added for query [{0}]", commandString));
                }
            }
            catch (Exception e)
            {
                LogEntry(componentid, "FAILURE", e.Message);
                LogEntry(componentid, "FAILURE", String.Format("Failed query was [{0}].", commandString));
            }
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String companyname
    {
        set
        {
            this[0] = value;
        }
    }
    public bool companyname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String companyid
    {
        set
        {
            this[1] = value;
        }
    }
    public bool companyid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c19018a2c56349b1beeb6e9cc04550c1.Properties.Settings.get_Default():SC_c19018a2c56349b1beeb6e9cc04550c1.Properties.Sett" +
    "ings")]

namespace SC_c19018a2c56349b1beeb6e9cc04550c1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c19018a2c56349b1beeb6e9cc04550c1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c19018a2c56349b1beeb6e9cc04550c1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c19018a2c56349b1beeb6e9cc04550c1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_c19018a2c56349b1beeb6e9cc04550c1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_c19018a2c56349b1beeb6e9cc04550c1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_c19018a2c56349b1beeb6e9cc04550c1</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_c19018a2c56349b1beeb6e9cc04550c1</msb:DisplayName>
		<msb:ProjectId>{27730CC2-5A02-4BF9-A358-48DDFDCD641F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_c19018a2c56349b1beeb6e9cc04550c1.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_c19018a2c56349b1beeb6e9cc04550c1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_c19018a2c56349b1beeb6e9cc04550c1")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_c19018a2c56349b1beeb6e9cc04550c1.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{37c7702e-8526-4d94-a3ad-3219c6d941dd}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_c19018a2c56349b1beeb6e9cc04550c1</RootNamespace>
    <AssemblyName>SC_c19018a2c56349b1beeb6e9cc04550c1</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_c19018a2c56349b1beeb6e9cc04550c1" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_c19018a2c56349b1beeb6e9cc04550c1.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOdwrlkAAAAAAAAAAOAAIiALATAAACwAAAAIAAAAAAAAykoA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHhKAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA0CoAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACs
SgAAAAAAAEgAAAACAAUA+CgAAMggAAABAAAAAAAAAMBJAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwC6AAAAAQAAEXIBAABwAnsDAAAEcxAAAAoKBhpvEQAA
CgZvEgAACnIjAABwcjkAAHBvEwAACiYGbxIAAApyZQAAcHJ/AABwbxMAAAomBm8SAAAKco0AAHBy
pwAAcG8TAAAKJgZvEgAACnLfAABwA28TAAAKJgZvEgAACnL1AABwBW8TAAAKJgZvEgAACnIHAQBw
chcBAHBvEwAACiYGbxIAAApyJwEAcARvEwAACiYGbxQAAAom3goGLAYGbxUAAArcKgAAARAAAAIA
EQCerwAKAAAAABMwAwB5AAAAAAAAAAIoFgAACgICewcAAARvFAAABn0BAAAEAgJ7BwAABG8VAAAG
fQIAAAQCAnsBAAAEFG8XAAAKdA8AAAF9AwAABAICewIAAAQUbxcAAAp0DwAAAX0EAAAEAgJ7CAAA
BG8XAAAGfQUAAAQCAnsIAAAEbxgAAAZ9BgAABCqmAigYAAAKAnsBAAAEAnsDAAAEbxkAAAoCewIA
AAQCewQAAARvGQAACioAGzAGABEEAAACAAARAnsIAAAEbx0AAAYXjSQAAAElFh98nW8aAAAKEwQC
ewgAAARvHQAABm8bAAAKLAURBI4tJwICewUAAARyNwEAcHJHAQBwAnsIAAAEbx0AAAYoHAAACigB
AAAGKnKpAQBwDBYTBxEEEwkWEwo4CAIAABEJEQqaEwsRBxYxDAhyrQEAcCgdAAAKDBELF40kAAAB
JRYfOp1vGgAAChMFEQWOaRhArwEAABEFFpoTBnK5AQBwEwwRBhYXbx4AAApyuwEAcCgfAAAKLCQR
BhdvIAAAChMGCHK/AQBwEQZyxQEAcCghAAAKDHLfAQBwEwwRBReabxsAAAoWMVwRBReaFhdvHgAA
CnLjAQBwKB8AAAotFxEFF5oWF28eAAAKcucBAHAoHwAACiwuG40lAAABJRYIoiUXEQaiJRhyqQEA
cKIlGREFF5qiJRoRDKIoIgAACgw4+QAAABEFF5oWF28eAAAKcusBAHAoHwAAChMNEQ0sHQICewUA
AARy7wEAcHIBAgBwEQsoHAAACigBAAAGEQUXmh8lbyMAAAoVLlMdjSUAAAElFgiiJRcRBqIlGBEN
LQdyuQEAcCsFcjsCAHCiJRlyRQIAcKIlGhEFF5oRDS0DFisBF28gAAAKoiUbclUCAHCiJRwRDKIo
IgAACgwrYB2NJQAAASUWCKIlFxEGoiUYEQ0tB3K5AQBwKwVyOwIAcKIlGXJbAgBwoiUaEQUXmhEN
LQMWKwEXbyAAAApyaQIAcHJtAgBwbyQAAAqiJRtydQIAcKIlHBEMoigiAAAKDBEHF1gTBysdAgJ7
BQAABHI3AQBwcn0CAHARCygcAAAKKAEAAAYRChdYEwoRChEJjmk/7f3//wICewUAAARy7wEAcHLJ
AgBwEQeMJgAAAREEjmmMJgAAASglAAAKKAEAAAYCAnsFAAAEcu8BAHAIKAEAAAZyCwMAcAJ7CAAA
BG8eAAAGjCYAAAEoHAAACg0CAnsFAAAEcu8BAHAJKAEAAAZyGwMAcAJ7BgAABAgJKCYAAAoLBwJ7
BAAABHMQAAAKEwgRCBZvJwAAChYTDhEIbygAAAoKBm8pAAAKOY4AAAArXAJ7CQAABG8LAAAGAnsJ
AAAEBhZvKgAACm8JAAAGAnsJAAAEBhdvKgAACm8bAAAKIP8AAAAwCQYXbyoAAAorEgYXbyoAAAoW
IP8AAABvHgAACm8HAAAGEQ4XWBMOBm8rAAAKLZxytAYAcBEOjCYAAAEoHAAAChMPAgJ7BQAABHL+
BgBwEQ8oAQAABiscAgJ7BQAABHIOBwBwch4HAHAHKBwAAAooAQAABt44ExACAnsFAAAEcjcBAHAR
EG8sAAAKKAEAAAYCAnsFAAAEcjcBAHByZAcAcAcoHAAACigBAAAG3gAqAAAAARAAAAAAFgPC2AM4
EgAAAR4CKA4AAAYqKgIDBAUoLQAACiomAhYDKC4AAAoqWgMsCAIWKC8AAAoqcpQHAHBzMAAACnom
AhcDKC4AAAoqWgMsCAIXKC8AAAoqcpQHAHBzMAAACnoeAigxAAAKKh4CKDIAAAoqHgIoMwAACip+
Aig0AAAKAgJzEwAABn0HAAAEAgJzFgAABn0IAAAEKgYqbgJ7CQAABCwSAnsJAAAEbwwAAAYCFH0J
AAAEKgATMAUASQAAAAMAABEWCisuBAaUDgRyMQgAcCg1AAAKMxkCBQaaAgQGlCg2AAAKDgRzBgAA
Bn0JAAAEBhdYCgYDMs4CbxIAAAYCbw8AAAYCKBAAAAYqOgIoNwAACgIDfQoAAAQqggJ7CgAABG84
AAAKbzkAAApyQwgAcG86AAAKbzsAAAoqggJ7CgAABG84AAAKbzkAAApyWQgAcG86AAAKbzsAAAoq
OgIoNwAACgIDfQsAAAQqlgJ7CwAABG88AAAKcnUIAHBvPQAACig+AAAKbz8AAAp0JQAAASqWAnsL
AAAEbzwAAApynQgAcG89AAAKKD4AAApvPwAACnQlAAABKpYCewsAAARvPAAACnLTCABwbz0AAAoo
PgAACm8/AAAKpSYAAAEqlgJ7CwAABG88AAAKcu8IAHBvPQAACig+AAAKbz8AAAp0JQAAASqWAnsL
AAAEbzwAAApyHwkAcG89AAAKKD4AAApvPwAACnQlAAABKpYCewsAAARvPAAACnJJCQBwbz0AAAoo
PgAACm8/AAAKdCUAAAEqlgJ7CwAABG88AAAKcnEJAHBvPQAACig+AAAKbz8AAAp0JQAAASqWAnsL
AAAEbzwAAApykwkAcG89AAAKKD4AAApvPwAACqUmAAABKh4CKDcAAAoqrn4MAAAELR5ywQkAcNAH
AAACKEAAAApvQQAACnNCAAAKgAwAAAR+DAAABCoafg0AAAQqHgKADQAABCoafg4AAAQqHgIoQwAA
CioucyQAAAaADgAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAASAgAACN+
AAC0CAAAVAsAACNTdHJpbmdzAAAAAAgUAAA0CgAAI1VTADweAAAQAAAAI0dVSUQAAABMHgAAfAIA
ACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAADIAAAAIAAAADgAAACUAAAARAAAA
QwAAABAAAAADAAAABQAAABEAAAASAAAAAQAAAAcAAAABAAAAAAAhBQEAAAAAAAYA6gOECAYAfgSE
CAYANgNxCA8A+AgAAAYAYwP/BQYAzQP/BQYArgP/BQYAZQT/BQYACgT/BQYAIwT/BQYAegP/BQYA
lQPOBAoAPgRwAg4AZgD8BxIAbAY2ChIA5gE2ChIAUQc2CgYAtwaPBQoAigdwAhYAewdwAgoA4AZw
AgoAagpwAgYADgqPBQYAGQNxCAYAmwekCAYA1AbqBRoA6QILBRoASgMLBRoAyQLVBQYA/gKECBIA
3AHBBhIAlQJ1ARIAMQY2ChIATQg2CgYAFQKPBQYAPwePBQYA6wSPBQYAzACPBRIARAfBBgYApwaP
BR4AAQAkCB4AKgAkCB4ATQAkCA4AfwD8Bw4AGgD8B1sA6woAAA4AkAD8BwYAnAKPBQYAIQKPBQYA
Jgv/BQAAAADSAAAAAAABAAEAAQAQAKIFAAAQAAEAAQABABAAbQcAAE0ABwAGAAEAEABMCgAAWQAH
AA4AAQAQAJQJAABdAAoAEwABABAAXAkAAF0ACwAWAAAAEACrCCEJXQAMAB8AAAEQAIsJIQl1AA4A
IwABAMEHOQEBAN0HOQEBAHoGPQEBAI8GPQEBAMIBQQEBAK0FQQEGAJQJRAEGAFwJSAEGAG0HTAEB
AFoKUAEBAFoKUAERAJYFVAERALkCWAERAPkBXAFQIAAAAACBAD8LYAEBACghAAAAAMYAnAQGAAQA
rSEAAAAAxgCnBAYABADYIQAAAADGAOwJBgAEAAgmAAAAAIYYWggGAAQAECYAAAAAhhhaCL0ABAAb
JgAAAACGCGACEAAHACUmAAAAAIYIXgVnAQgAPCYAAAAAhgjOARAACQBGJgAAAACGCEkFZwEKAF0m
AAAAAIYAGwsGAAsAZSYAAAAAhgAVCgYACwBtJgAAAACGABgKtQALAHUmAAAAAIYYWggGAAsAlSYA
AAAAxgHLCQYACwCXJgAAAACBAKUBBgALALQmAAAAAMYAywpsAQsAlSYAAAAAxgHsCQYADwAJJwAA
AACGGFoIeAEPABgnAAAAAIYI8gDxABAAOScAAAAAhggbAfEAEABaJwAAAACGGFoIeAEQAGknAAAA
AIYIUwG5ABEAjycAAAAAhgi4BbkAEQC1JwAAAACGCEMBPAARANsnAAAAAIYIAQG5ABEAASgAAAAA
hgjbALkAEQAnKAAAAACGCC0BuQARAE0oAAAAAIYItwm5ABEAcygAAAAAhggHCTwAEQCZKAAAAACD
GFoIBgARAKEoAAAAAJMIlwd+AREAzSgAAAAAkwihAoMBEQDUKAAAAACTCK0CiAERANwoAAAAAJYI
KgqOARIA4ygAAAAAhhhaCAYAEgDrKAAAAACRGGAIkwESAAAAAQC5AQAAAgDZCQAAAwD8BAAAAQCQ
BwAAAgBmCQAAAwDuBgAAAQDABAAAAQDABAAAAQDABAAAAQDABAAAAQDRCQAAAgBnCAAAAwCgCQAA
BADuBgAAAQBwCgAAAQBwCgAAAQDABAkAWggBABEAWggGABkAWggKACkAWggQADEAWggQADkAWggQ
AEEAWggQAEkAWggQAFEAWggQAFkAWggQAGEAWggQAGkAWggGAMEAWggGAOEAWggVAPEAWggGAIEA
WgggAPkAkQInAIEAqAkuAAkBswQ0APkALws8ABkB4QIGALEAnAQGAHEASAZAALEApwQGAHEAWgZF
ACkBJApkACkBAAU8ACkBBwprACkBAApxACkB8gR3ACkBSAt9ACkB8gSDACkBAAqIACkBAAqQACkB
xgSWACkB8QGbACkBBwqhACkBBwqoAPkAuAoBAIEAXwewADkB4Am1ADkB6ASDADkBoAG1AJEACQK5
AJkAWgi9AJkAhgXHAJkAdQUBAEEBWggQAJkAGwsGAJkAFQoGAJkAGAq1ALEAWggGALEAaQHRALEA
egnYALkAWggGALEAgQHeAEkBEQbkAFEBRQLqAFkBqwfxALEAUAn2AGEBfQX8ALEABgsDAWkB1woJ
AYEBMwIQAYEBIgsZAckAWggfAekAWggGAC4ACwC3AS4AEwDAAS4AGwDfAS4AIwDoAS4AKwARAi4A
MwARAi4AOwARAi4AQwDoAS4ASwAXAi4AUwARAi4AWwAuAkMAYwB2AuMAawB2AsEBewB2AukBcwDf
AQkCcwDfARsASgDNAAMAAQAFAAUABgAHAAcADwAIABEAAABkApcBAABiBZsBAADSAZcBAABNBZsB
AAD2AJ8BAAAfAZ8BAABXAZcBAAC8BZcBAABHAaQBAAAFAZcBAADfAJcBAAAxAZcBAAC7CZcBAAAL
CaQBAACbB6gBAADBAq0BAAAuCrIBAQAHAAMAAQAIAAUAAQAJAAcAAQAKAAkAAgAUAAsAAgAVAA0A
AgAXAA8AAgAYABEAAgAZABMAAgAaABUAAgAbABcAAgAcABkAAgAdABsAAgAeAB0AAgAgAB8AAgAh
ACEAAQAiACEAAgAjACMABIAAAAEAAAA5GQNSAAAAAAAAqAAAAAQAAAAAAAAAAAAAACcBlwEAAAAA
CwAAAAAAAAAAAAAAMAF6CgAAAAALAAAAAAAAAAAAAAAwAfgGAAAAAAQAAAAAAAAAAAAAACcBdQEA
AAAACwAAAAAAAAAAAAAAMAGXCgAAAAAEAAAAAAAAAAAAAAAnAY8FAAAAAAsAAAAAAAAAAAAAADAB
GwcAAAAAAAAAAAEAAAC1CAAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJs
ZTEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVj
dGlvbjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZh
bHVhdG9yQ29udGV4dDEwMABTQ19jMTkwMThhMmM1NjM0OWIxYmVlYjZlOWNjMDQ1NTBjMQBJbnQz
MgA8TW9kdWxlPgBnZXRfY2ZndHBsQ01QbGF0Zm9ybURCAGdldF9QbGF0Zm9ybURCAGdldF9jZmd0
cGxDTURhdGFoYW5kbGVyREIAZ2V0X0RhdGFoYW5kbGVyREIAZ2V0X2NmZ3RwbENNUHJvamVjdERC
AGdldF9jZmdzbGFSdW5JRABnZXRfY2Znc2xhQ29tcG9uZW50SUQAR2V0T3V0cHV0SUQAU3lzdGVt
LkRhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFJlYWQATWFya091dHB1dHNGaW5p
c2hlZABzb3VyY2VpZABjb21wb25lbnRpZABzZXRfY29tcGFueWlkAERiQ29tbWFuZABTcWxDb21t
YW5kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAElEaXNwb3NhYmxlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1l
AHNldF9jb21wYW55bmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBzZXRfQ29t
bWFuZFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUASW5kZXhPZgBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBTdWJzdHJpbmcAbXNnAGdldF9MZW5ndGgA
U3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2MxOTAxOGEyYzU2MzQ5YjFiZWViNmU5Y2MwNDU1MGMx
LmRsbABzZXRfY29tcGFueWlkX0lzTnVsbABzZXRfY29tcGFueW5hbWVfSXNOdWxsAFNldE51bGwA
Z2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AZHRoVmVyc2lv
bgBnZXRfY2Znc2xhRGF0YWhhbmRsZXJWZXJzaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNv
bGxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBSZWxlYXNl
Q29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAG15UGxhdGZvcm1Db25uZWN0aW9uAG15RGF0YWhhbmRs
ZXJDb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9u
AEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAAQ2hhcgBE
YkRhdGFSZWFkZXIAU3FsRGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAE91dHB1dDBCdWZmZXIAUGlw
ZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rp
b25NYW5hZ2VyAG15UGxhdGZvcm1Db25uZWN0aW9uTWFuYWdlcgBteURhdGFoYW5kbGVyQ29ubmVj
dGlvbk1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIAU3FsUGFyYW1ldGVyAC5jdG9yAC5j
Y3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19jMTkwMThhMmM1NjM0OWIxYmVlYjZlOWNjMDQ1
NTBjMS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X3Ro
aXNOdW1iZXJPZkNvbXBhbmllcwBTQ19jMTkwMThhMmM1NjM0OWIxYmVlYjZlOWNjMDQ1NTBjMS5Q
cm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENv
bHVtbkluZGV4ZXMAU2V0dGluZ3MAQ29ubmVjdGlvbnMAQnVmZmVycwBnZXRfUGFyYW1ldGVycwBn
ZXRfdGhpc0NvbnN0cmFpbnRzAEZpbmlzaE91dHB1dHMAc3RhdHVzAGdldF9IYXNSb3dzAENyZWF0
ZU5ld091dHB1dFJvd3MAQ29uY2F0AEZvcm1hdABPYmplY3QAU2V0RW5kT2ZSb3dzZXQAU3BsaXQA
Z2V0X0RlZmF1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29t
cG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AHNldF9Db21tYW5kVGltZW91dABQcmltZU91dHB1
dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFs
dWF0b3JDb250ZXh0AEFkZFJvdwBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AExvZ0VudHJ5
AG9wX0VxdWFsaXR5AAAhbgBsAGgALgBsAG8AZwBfAGEAZABkAEUAbgB0AHIAeQAAFUAAYwBvAG0A
cABvAG4AZQBuAHQAACtDAG8AbQBwAGEAbgB5AFIAZQB0AHIAaQBlAHYAYQBsAC4AZAB0AHMAeAAA
GUAAcwBvAHUAcgBjAGUAXwB0AHkAcABlAAANUwBDAFIASQBQAFQAABlAAHMAbwB1AHIAYwBlAF8A
bgBhAG0AZQAAN0IAYQBzAGkAYwAgAEMAbwBuAHMAdAByAGEAaQBuAHQAcwAgAFIAZQB0AHIAaQBl
AHYAYQBsAAAVQABzAG8AdQByAGMAZQBfAGkAZAAAEUAAbQBlAHMAcwBhAGcAZQAAD0AAYQBjAHQA
aQBvAG4AAA9FAFgARQBDAFUAVABFAAAPQABzAHQAYQB0AHUAcwAAD0YAQQBJAEwAVQBSAEUAAGFO
AG8AIABjAG8AbgBzAHQAcgBhAGkAbgB0AHMAIAB3AGUAcgBlACAAZwBpAHYAZQBuAC4AIABJAG4A
cAB1AHQAIAB2AGEAcgBpAGEAYgBsAGUAIABbAHsAMAB9AF0ALgAAAyAAAAsgAEEATgBEACAAAAEA
Az8AAAUgACgAABkgAEkAUwAgAE4AVQBMAEwAIABPAFIAIAAAAykAAAM8AAADPgAAAyEAABFQAFIA
TwBHAFIARQBTAFMAADlDAG8AbgBzAHQAcgBhAGkAbgB0ACAAWwB7ADAAfQBdACAAaQBzACAAbgBl
AGcAYQB0AGUAZAAuAAAJIABOAE8AVAAADyAATABJAEsARQAgACcAAQUnACAAAQ0gAEkATgAgACgA
JwABAywAAAcnACwAJwABBycAKQAgAAFLQwBvAG4AcwB0AHIAYQBpAG4AdAAgAFsAewAwAH0AXQAg
AGMAbwB1AGwAZAAgAG4AbwB0ACAAYgBlACAAcABhAHIAcwBlAGQALgAAQVIAZQBhAGQAIAB7ADAA
fQAgAGMAbwBuAHMAdAByAGEAaQBuAHQAcwAgAG8AdQB0ACAAbwBmACAAewAxAH0ALgAAD1QATwBQ
ACAAewAwAH0AAIOXUwBFAEwARQBDAFQAIAB7ADIAfQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgAGIAdgBkAF8AaQBkAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAALAAgAGMAbwBtAHAAYQBuAHkAXwBuAGEAbQBlAAoAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgAEYAUgBPAE0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAB7ADAAfQAuAGMAbwBtAHAAYQBuAHkAXwBiAGEAcwBpAGMACgAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAVwBIAEUAUgBFAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAewAxAH0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBSAEQA
RQBSACAAQgBZAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcgBlAHYA
ZQBuAHUAZQAgAEQARQBTAEMAAElTAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAgAHIAZQBhAGQAIAB7
ADAAfQAgAG4AdQBtAGIAZQByACAAbwBmACAAcgBvAHcAcwAAD1MAVQBDAEMARQBTAFMAAA9XAEEA
UgBOAEkATgBHAABFTgBvACAAcgBvAHcAcwAgAHcAZQByAGUAIABhAGQAZABlAGQAIABmAG8AcgAg
AHEAdQBlAHIAeQAgAFsAewAwAH0AXQAAL0YAYQBpAGwAZQBkACAAcQB1AGUAcgB5ACAAdwBhAHMA
IABbAHsAMAB9AF0ALgAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4A
bwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAg
AHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4A
ABFPAHUAdABwAHUAdAAgADAAABVQAGwAYQB0AGYAbwByAG0ARABCAAAbRABhAHQAYQBoAGEAbgBk
AGwAZQByAEQAQgAAJ2MAZgBnAF8AcwBsAGEAXwBDAG8AbQBwAG8AbgBlAG4AdABJAEQAADVjAGYA
ZwBfAHMAbABhAF8ARABhAHQAYQBoAGEAbgBkAGwAZQByAFYAZQByAHMAaQBvAG4AABtjAGYAZwBf
AHMAbABhAF8AUgB1AG4ASQBEAAAvYwBmAGcAXwB0AHAAbABfAEMATQBEAGEAdABhAGgAYQBuAGQA
bABlAHIARABCAAApYwBmAGcAXwB0AHAAbABfAEMATQBQAGwAYQB0AGYAbwByAG0ARABCAAAnYwBm
AGcAXwB0AHAAbABfAEMATQBQAHIAbwBqAGUAYwB0AEQAQgAAIXQAaABpAHMAXwBDAG8AbgBzAHQA
cgBhAGkAbgB0AHMAAC10AGgAaQBzAF8ATgB1AG0AYgBlAHIATwBmAEMAbwBtAHAAYQBuAGkAZQBz
AABxUwBDAF8AYwAxADkAMAAxADgAYQAyAGMANQA2ADMANAA5AGIAMQBiAGUAZQBiADYAZQA5AGMA
YwAwADQANQA1ADAAYwAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAAhLhD0afEzk6OJYJIFXqA/QAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERbQQHARJBBiACAQ4S
PQYgAQERgIEFIAASgIUHIAISgIkOHAMgAAgEIAEcHAQgAQEcGQcREkUODg4dDh0ODggSQR0OCA4O
AggOEkkGIAEdDh0DBQACDg4cBQACDg4OBSACDggIBQACAg4OBCABDggHAAQODg4ODgUAAQ4dDgQg
AQgDBSACDg4OBgADDg4cHAcABA4OHBwcBCAAEkUDIAACAyAADgkgAwESUR0IElUFIAIBCBwDBwEI
BgACCBJVDgUgAR0ICAUgABKApQUgABKAqQYgARKArQ4EIAASOQUgABKAsQYgARKAtRwFAAASgLkG
IAEcEoC9CAABEoDBEYDFBSAAEoDJByACAQ4SgMkIt3pcVhk04IkIiYRdzYCAzJEDBhI5AwYSPQIG
DgMGEhQDBhIYAwYSDAMGElkDBhJlAwYSaQMGEiAGIAMBDg4OBCABAQILIAQBCB0IHRJRElUFIAEB
ElkEAAASZQQAABJpBQABARJpBAAAEiADAAABAygADgMoAAIEKAASOQMoAAgECAASZQQIABJpBAgA
EiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1ND
X2MxOTAxOGEyYzU2MzQ5YjFiZWViNmU5Y2MwNDU1MGMxAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAg
IDIwMTcAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUQLk5FVCBGcmFtZXdvcmsgNAQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACgSgAAAAAAAAAAAAC6SgAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArEoAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAA
AAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAA1I5GQAAAQADUjkZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBjADEA
OQAwADEAOABhADIAYwA1ADYAMwA0ADkAYgAxAGIAZQBlAGIANgBlADkAYwBjADAANAA1ADUAMABj
ADEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgA0ADUANwAuADIA
MAA5ADkANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBjADEAOQAw
ADEAOABhADIAYwA1ADYAMwA0ADkAYgAxAGIAZQBlAGIANgBlADkAYwBjADAANAA1ADUAMABjADEA
LgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIA
awBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBf
AGMAMQA5ADAAMQA4AGEAMgBjADUANgAzADQAOQBiADEAYgBlAGUAYgA2AGUAOQBjAGMAMAA0ADUA
NQAwAGMAMQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBj
ADEAOQAwADEAOABhADIAYwA1ADYAMwA0ADkAYgAxAGIAZQBlAGIANgBlADkAYwBjADAANAA1ADUA
MABjADEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANAA1
ADcALgAyADAAOQA5ADUAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADYANAA1ADcALgAyADAAOQA5ADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAzDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_c19018a2c56349b1beeb6e9cc04550c1</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerVersion,User::cfg_sla_RunID,User::cfg_tpl_CMDatahandlerDB,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_CMProjectDB,User::this_Constraints,User::this_NumberOfCompanies</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">46bf5a5b6e47611cf5c3d05be5258516</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">a0116e0c09fbefa6d50d92119b143b53708c0470</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints.Connections[PlatformDB]"
                          connectionManagerID="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          name="PlatformDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints.Connections[DatahandlerDB]"
                          connectionManagerID="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          name="DatahandlerDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints.Outputs[Output 0].Columns[company_name]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints.Outputs[Output 0].Columns[company_name]"
                              name="company_name" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints.Outputs[Output 0].Columns[company_id]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints.Outputs[Output 0].Columns[company_id]"
                              name="company_id" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[company_long_list]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[company_long_list]) [refTable]
where [refTable].[company_id] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="row_i" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="company_id" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="match" dataType="DT_R4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="company_name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="retrieval_key" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Execute Feature\Foreach Loop Container\Basic Constraints\191:invalid};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Inputs[Lookup Input].Columns[company_id]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="company_id"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints.Outputs[Output 0].Columns[company_id]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">company_id</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Write to company longlist"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[company_long_list]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input].Columns[company_id]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="company_id"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_id]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints.Outputs[Output 0].Columns[company_id]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input].Columns[this_RetrievalLabel]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="this_RetrievalLabel"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[retrieval_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Output].Columns[this_RetrievalLabel]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input].Columns[CompanyName]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="CompanyName"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_name]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Output].Columns[CompanyName]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[row_i]"
                              dataType="i4"
                              name="row_i" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_id]"
                              dataType="wstr"
                              length="50"
                              name="company_id" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[match]"
                              dataType="r4"
                              name="match" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_name]"
                              dataType="wstr"
                              length="255"
                              name="company_name" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[retrieval_key]"
                              dataType="wstr"
                              length="50"
                              name="retrieval_key" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints.Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Row Count.Inputs[Row Count Input 1]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints.Paths[Lookup No Match Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist.Inputs[OLE DB Destination Input]"
                      name="Lookup No Match Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Outputs[Lookup No Match Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints.Paths[Output 0]"
                      endId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column.Inputs[Derived Column Input]"
                      name="Output 0"
                      startId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints.Outputs[Output 0]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Basic Constraints.Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup.Inputs[Lookup Input]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Company List"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:DelayValidation="True"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{8E0469D6-A1B0-4187-9850-727A670F94DC}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Company List"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add retrieval key"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Inputs[Derived Column Input].Columns[company_name]"
                              cachedDataType="wstr"
                              cachedLength="500"
                              cachedName="company_name"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].Columns[company_name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Output].Columns[this_RetrievalLabel]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Output].Columns[this_RetrievalLabel]"
                              name="this_RetrievalLabel"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,50)@[User::this_RetrievalLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,50)@[User::this_RetrievalLabel]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Output].Columns[MaxLengthCompanyName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Output].Columns[MaxLengthCompanyName]"
                              name="MaxLengthCompanyName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,255)#{Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].Columns[company_name]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,255)company_name</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Check if they exist"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[company_long_list]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[company_long_list]) [refTable]
where [refTable].[company_id] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="row_i" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="company_id" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="match" dataType="DT_R4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="company_name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="retrieval_key" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].Columns[company_id]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Inputs[Lookup Input].Columns[company_id]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="company_id"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].Columns[company_id]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">company_id</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Get companies from input string and lookup names in Basic"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable">User::sqlLookupCompanyListNames</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[PlatformDB]"
                          connectionManagerRefId="Package.ConnectionManagers[PlatformDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].Columns[company_id]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].ExternalColumns[company_id]"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].Columns[company_id]"
                              name="company_id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].Columns[company_name]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].ExternalColumns[company_name]"
                              length="500"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].Columns[company_name]"
                              name="company_name"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].ExternalColumns[company_id]"
                              dataType="wstr"
                              length="100"
                              name="company_id" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].ExternalColumns[company_name]"
                              dataType="wstr"
                              length="500"
                              name="company_name" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Error Output].Columns[company_id]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Error Output].Columns[company_id]"
                              name="company_id" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Error Output].Columns[company_name]"
                              dataType="wstr"
                              length="500"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Error Output].Columns[company_name]"
                              name="company_name" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company List\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company List\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Write to company longlist"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[company_long_list]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input].Columns[company_id]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="company_id"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_id]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output].Columns[company_id]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input].Columns[this_RetrievalLabel]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="this_RetrievalLabel"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[retrieval_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Output].Columns[this_RetrievalLabel]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input].Columns[MaxLengthCompanyName]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="MaxLengthCompanyName"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_name]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Output].Columns[MaxLengthCompanyName]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[row_i]"
                              dataType="i4"
                              name="row_i" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_id]"
                              dataType="wstr"
                              length="50"
                              name="company_id" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[match]"
                              dataType="r4"
                              name="match" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_name]"
                              dataType="wstr"
                              length="255"
                              name="company_name" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[retrieval_key]"
                              dataType="wstr"
                              length="50"
                              name="retrieval_key" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Company List.Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Inputs[Lookup Input]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Company List.Paths[Lookup No Match Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Company List\Row Count.Inputs[Row Count Input 1]"
                      name="Lookup No Match Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist.Outputs[Lookup No Match Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Company List.Paths[OLE DB Source Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key.Inputs[Derived Column Input]"
                      name="OLE DB Source Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Company List.Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist.Inputs[OLE DB Destination Input]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Company List\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Expression Task"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{CC09E2E5-25D3-401F-934A-749AD18EA464}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Expression Task"
              DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2012; � 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="3+4" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:DelayValidation="True"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{8b5a0366-bbf7-4eb1-b3c7-6a5620e4d14d}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Patent Class Profile"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add retrieval key as a column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Inputs[Derived Column Input].Columns[company_name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="company_name"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Outputs[Output 0].Columns[company_name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Output].Columns[this_RetrievalLabel]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Output].Columns[this_RetrievalLabel]"
                              name="this_RetrievalLabel"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_RetrievalLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_RetrievalLabel]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Output].Columns[CompanyName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Output].Columns[CompanyName]"
                              name="CompanyName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,255)#{Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Outputs[Output 0].Columns[company_name]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,255)company_name</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[company_long_list]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[company_long_list]) [refTable]
where [refTable].[company_id] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="row_i" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="company_id" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="match" dataType="DT_R4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="company_name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="retrieval_key" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Outputs[Output 0].Columns[company_id]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Inputs[Lookup Input].Columns[company_id]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="company_id"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Outputs[Output 0].Columns[company_id]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">company_id</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Patent Class Profile Source"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 DatahandlerDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"DatahandlerDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ProjectDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ProjectDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 PlatformDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PlatformDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String cfgslaComponentID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ComponentID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerVersion
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerVersion"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 cfgslaRunID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["cfg_sla_RunID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisClassProfile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_ClassProfile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisConstraints
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_Constraints"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 thisNumberOfCompanies
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["this_NumberOfCompanies"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 
    IDTSConnectionManager100 myPlatformConnectionManager;
    IDTSConnectionManager100 myDatahandlerConnectionManager;
    SqlConnection myPlatformConnection;
    SqlConnection myDatahandlerConnection;
    string componentid;
    string dthVersion;

    private void LogEntry(string sourceid, string status, string msg)
    {
        using (SqlCommand cmd = new SqlCommand("nlh.log_addEntry", myPlatformConnection))
        {
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("@component", "CompanyRetrieval.dtsx");
            cmd.Parameters.AddWithValue("@source_type", "SCRIPT");
            cmd.Parameters.AddWithValue("@source_name", "Patent Class Profile Source");
            cmd.Parameters.AddWithValue("@source_id", sourceid);
            cmd.Parameters.AddWithValue("@message", msg);
            cmd.Parameters.AddWithValue("@action", "EXECUTE");
            cmd.Parameters.AddWithValue("@status", status);

            cmd.ExecuteNonQuery();
        }
    }

    public override void PreExecute()
    {
        base.PreExecute();

        myPlatformConnectionManager = this.Connections.PlatformDB;
        myDatahandlerConnectionManager = this.Connections.DatahandlerDB;
        myPlatformConnection = (SqlConnection)myPlatformConnectionManager.AcquireConnection(null);
        myDatahandlerConnection = (SqlConnection)myDatahandlerConnectionManager.AcquireConnection(null);

        componentid = (string)Variables.cfgslaComponentID;
        dthVersion = (string)Variables.cfgslaDatahandlerVersion;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        myPlatformConnectionManager.ReleaseConnection(myPlatformConnection);
        myDatahandlerConnectionManager.ReleaseConnection(myDatahandlerConnection);
    }

    public override void CreateNewOutputRows()
    {
        int tt = myDatahandlerConnection.ConnectionTimeout;
        string cs = myDatahandlerConnection.ConnectionString;


        string classProfile = Variables.thisClassProfile;
        string[] cc = classProfile.Split('|');
        string[] this_cc;
        string profileSql = "";
        string commandString;
        string constraintWhereClause;
        string topCount = "";
        int rowcount = 0;

        /* Class profile */
        if (cc.Length > 0)
        {
            this_cc = cc[0].Split(':');
            if (this_cc.Length != 2)
                return;
            else
                profileSql = String.Format("insert into @p select '{0}', {1}", this_cc[0], this_cc[1]);
        }
        for (int i = 1; i < cc.Length; i++)
        {
            if (cc[i].Length > 0)
            {
                this_cc = cc[i].Split(':');
                if (this_cc.Length != 2)
                    return;
                else
                    profileSql = profileSql + String.Format(" union all select '{0}', {1}", this_cc[0], this_cc[1]);
            }
        }

        /* Constraints */
        if (Variables.thisConstraints.Length == 0)
        {
            constraintWhereClause = "";
        }
        else
        {
            constraintWhereClause = " AND ";
            string[] Constraints = Variables.thisConstraints.Split('|');
            string[] ThisConstraint;

            string ThisConstraintAttribute;
            string ThisConstraintValue;

            int nr = 1;
            foreach (string tc in Constraints)
            {
                if (nr > 1)
                    constraintWhereClause = constraintWhereClause + " AND ";

                ThisConstraint = tc.Split(':');
                ThisConstraintAttribute = ThisConstraint[0];
                ThisConstraintValue = "('" + ThisConstraint[1].Replace(",", "','") + "')";

                constraintWhereClause = constraintWhereClause + "cb." + ThisConstraintAttribute + " IN " + ThisConstraintValue + " ";
                nr = nr + 1;
            }
        }
        LogEntry(componentid, "PROGRESS", constraintWhereClause);

        /* Number of companies */
        topCount = String.Format("TOP {0}", Variables.thisNumberOfCompanies);
        LogEntry(componentid, "PROGRESS", topCount);

        /*        commandString = String.Format(@"declare @p table(class_code nvarchar(16), class_weight real);
                                                {0};
                                                select --top 1000
                                                    ab.bvd_id
                                                    , sum( p.class_weight ) as profile_score
                                                    , cb.company_name
                                                from
                                                    @p p JOIN
                                                    {1}.patent_class pc ON p.class_code=pc.class_code JOIN
                                                    {1}.applicant_family_class_date af ON af.class_id=pc.class_id JOIN
                                                    {1}.applicant_bvd_id ab ON ab.applicant_id=af.applicant_id JOIN
                                                    {1}.company_basic cb ON cb.bvd_id=ab.bvd_id
                                                group by
                                                    ab.bvd_id
                                                    , cb.company_name
                                                order by
                                                    profile_score desc", profileSql, dthVersion);*/
        commandString = String.Format(@"declare @p table(class_code nvarchar(16), class_weight real);
                                        {0};
                                        select {3} --top 1000
                                            ab.bvd_id
                                            , sum( p.class_weight ) as profile_score
                                            , isnull(cb.company_name,'n/a') as company_name
                                        from
                                            @p p JOIN
                                            {1}.patent_class pc ON p.class_code=pc.class_code JOIN
                                            {1}.patent_family_class af ON af.class_id=pc.class_id JOIN
                                            {1}.company_patent_family ab ON ab.patent_family_id=af.patent_family_id JOIN
                                            {1}.company_basic cb ON cb.bvd_id=ab.bvd_id
                                        WHERE
                                            year(af.priority_date) > 1996
                                            {2}
                                        group by
                                            ab.bvd_id
                                            , cb.company_name
                                        order by
                                            profile_score desc", profileSql, dthVersion,constraintWhereClause,topCount);

        SqlCommand sqlc = new SqlCommand(commandString, myDatahandlerConnection);
        sqlc.CommandTimeout = 0;
        LogEntry(componentid, "PROGRESS", commandString.Replace(profileSql,"<profile>"));

        try
        {
            SqlDataReader reader = sqlc.ExecuteReader();
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    Output0Buffer.AddRow();
                    Output0Buffer.companyid = reader.GetString(0);
                    Output0Buffer.companyname = (reader.GetString(2).Length > 255 ? reader.GetString(2).Substring(0, 255) : reader.GetString(2));

                    rowcount += 1;
                }

                string msg = String.Format("Successfully added {0} number of companies to profile", rowcount);
                LogEntry(componentid, "SUCCESS", msg);
            }
            else
            {
                LogEntry(componentid, "WARNING", "No companies were added to profile");
            }
        }
        catch (Exception e)
        {
            LogEntry(componentid, "FAILURE", e.Message);
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String companyid
    {
        set
        {
            this[0] = value;
        }
    }
    public bool companyid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String companyname
    {
        set
        {
            this[1] = value;
        }
    }
    public bool companyname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_45de4e06938b4d1a84b9c2e5fe007a2a.Properties.Settings.get_Default():SC_45de4e06938b4d1a84b9c2e5fe007a2a.Properties.Sett" +
    "ings")]

namespace SC_45de4e06938b4d1a84b9c2e5fe007a2a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_45de4e06938b4d1a84b9c2e5fe007a2a.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{036d80f2-4786-492e-9552-41ab5f495d1c}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_45de4e06938b4d1a84b9c2e5fe007a2a</RootNamespace>
    <AssemblyName>SC_45de4e06938b4d1a84b9c2e5fe007a2a</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_45de4e06938b4d1a84b9c2e5fe007a2a" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_45de4e06938b4d1a84b9c2e5fe007a2a</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_45de4e06938b4d1a84b9c2e5fe007a2a</msb:DisplayName>
		<msb:ProjectId>{AB379962-3FA0-4E30-A032-A4C56E055E01}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_45de4e06938b4d1a84b9c2e5fe007a2a.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:Breakpoint Include="f0200f9a2d2744848ccdd51f43a7f538">
			<msb:FileName>main.cs</msb:FileName>
			<msb:ColumnNumber>9</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>139</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_45de4e06938b4d1a84b9c2e5fe007a2a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_45de4e06938b4d1a84b9c2e5fe007a2a")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_45de4e06938b4d1a84b9c2e5fe007a2a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_45de4e06938b4d1a84b9c2e5fe007a2a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_45de4e06938b4d1a84b9c2e5fe007a2a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_45de4e06938b4d1a84b9c2e5fe007a2a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_45de4e06938b4d1a84b9c2e5fe007a2a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_45de4e06938b4d1a84b9c2e5fe007a2a.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOot1VgAAAAAAAAAAOAAIiALATAAADAAAAAIAAAAAAAAUk8A
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAABPAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAWC8AAAAgAAAAMAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAyAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA0
TwAAAAAAAEgAAAACAAUA5CcAAGQmAAABAAAAAAAAAEhOAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwC6AAAAAQAAEXIBAABwAnsDAAAEcxAAAAoKBhpvEQAA
CgZvEgAACnIjAABwcjkAAHBvEwAACiYGbxIAAApyZQAAcHJ/AABwbxMAAAomBm8SAAAKco0AAHBy
pwAAcG8TAAAKJgZvEgAACnLfAABwA28TAAAKJgZvEgAACnL1AABwBW8TAAAKJgZvEgAACnIHAQBw
chcBAHBvEwAACiYGbxIAAApyJwEAcARvEwAACiYGbxQAAAom3goGLAYGbxUAAArcKgAAARAAAAIA
EQCerwAKAAAAABMwAwB5AAAAAAAAAAIoFgAACgICewcAAARvFgAABn0BAAAEAgJ7BwAABG8UAAAG
fQIAAAQCAnsBAAAEFG8XAAAKdA8AAAF9AwAABAICewIAAAQUbxcAAAp0DwAAAX0EAAAEAgJ7CAAA
BG8YAAAGfQUAAAQCAnsIAAAEbxkAAAZ9BgAABCqmAigYAAAKAnsBAAAEAnsDAAAEbxkAAAoCewIA
AAQCewQAAARvGQAACioAGzAGACsDAAACAAARAnsEAAAEbxoAAAomAnsEAAAEbxsAAAomAnsIAAAE
bxsAAAYXjSUAAAElFh98nW8cAAAKCnI3AQBwDHI3AQBwEwUWEwYGjiwsBhaaF40lAAABJRYfOp1v
HAAACgsHjmkYLgEqcjkBAHAHFpoHF5ooHQAACgwXEwgrRQYRCJpvHgAAChYxMwYRCJoXjSUAAAEl
Fh86nW8cAAAKCweOaRguASoIcnsBAHAHFpoHF5ooHQAACigfAAAKDBEIF1gTCBEIBo5pMrQCewgA
AARvHAAABm8eAAAKLQxyNwEAcBMEOM4AAABytQEAcBMEAnsIAAAEbxwAAAYXjSUAAAElFh98nW8c
AAAKFxMMEw0WEw44lAAAABENEQ6aEQwXMQ4RBHK1AQBwKB8AAAoTBBeNJQAAASUWHzqdbxwAAAoT
CREJFpoTCnLBAQBwEQkXmnLHAQBwcssBAHBvIAAACnLTAQBwKCEAAAoTCxyNJgAAASUWEQSiJRdy
2QEAcKIlGBEKoiUZcuEBAHCiJRoRC6IlG3LrAQBwoigiAAAKEwQRDBdYEwwRDhdYEw4RDhENjmk/
Yf///wICewUAAARy7wEAcBEEKAEAAAZyAQIAcAJ7CAAABG8dAAAGjCcAAAEoIwAAChMFAgJ7BQAA
BHLvAQBwEQUoAQAABnIRAgBwGo0XAAABJRYIoiUXAnsGAAAEoiUYEQSiJRkRBaIoJAAACg0JAnsE
AAAEcxAAAAoTBxEHFm8lAAAKAgJ7BQAABHLvAQBwCQhyqAwAcG8gAAAKKAEAAAYRB28mAAAKEw8R
D28nAAAKOZMAAAArYAJ7CQAABG8LAAAGAnsJAAAEEQ8WbygAAApvBwAABgJ7CQAABBEPGG8oAAAK
bx4AAAog/wAAADAKEQ8YbygAAAorExEPGG8oAAAKFiD/AAAAbykAAApvCQAABhEGF1gTBhEPbyoA
AAotl3K8DABwEQaMJwAAASgjAAAKExACAnsFAAAEcigNAHARECgBAAAGKxYCAnsFAAAEcjgNAHBy
SA0AcCgBAAAG3hwTEQICewUAAARyjg0AcBERbysAAAooAQAABt4AKgABEAAAAABOAsAOAxwSAAAB
HgIoDgAABioqAgMEBSgsAAAKKiYCFgMoLQAACipaAywIAhYoLgAACipyng0AcHMvAAAKeiYCFwMo
LQAACipaAywIAhcoLgAACipyng0AcHMvAAAKeh4CKDAAAAoqHgIoMQAACioeAigyAAAKKn4CKDMA
AAoCAnMTAAAGfQcAAAQCAnMXAAAGfQgAAAQqBipuAnsJAAAELBICewkAAARvDAAABgIUfQkAAAQq
ABMwBQBJAAAAAwAAERYKKy4EBpQOBHI7DgBwKDQAAAozGQIFBpoCBAaUKDUAAAoOBHMGAAAGfQkA
AAQGF1gKBgMyzgJvEgAABgJvDwAABgIoEAAABio6Aig2AAAKAgN9CgAABCqCAnsKAAAEbzcAAApv
OAAACnJNDgBwbzkAAApvOgAACiqCAnsKAAAEbzcAAApvOAAACnJpDgBwbzkAAApvOgAACiqCAnsK
AAAEbzcAAApvOAAACnJ9DgBwbzkAAApvOgAACio6Aig2AAAKAgN9CwAABCqWAnsLAAAEbzsAAApy
kw4AcG88AAAKKD0AAApvPgAACnQmAAABKpYCewsAAARvOwAACnK7DgBwbzwAAAooPQAACm8+AAAK
dCYAAAEqlgJ7CwAABG87AAAKcvEOAHBvPAAACig9AAAKbz4AAAqlJwAAASqWAnsLAAAEbzsAAApy
DQ8AcG88AAAKKD0AAApvPgAACnQmAAABKpYCewsAAARvOwAACnIxDwBwbzwAAAooPQAACm8+AAAK
dCYAAAEqlgJ7CwAABG87AAAKclMPAHBvPAAACig9AAAKbz4AAAqlJwAAASoeAig2AAAKKq5+DAAA
BC0ecoEPAHDQBwAAAig/AAAKb0AAAApzQQAACoAMAAAEfgwAAAQqGn4NAAAEKh4CgA0AAAQqGn4O
AAAEKh4CKEIAAAoqLnMjAAAGgA4AAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAMAgAACN+AACcCAAAVAsAACNTdHJpbmdzAAAAAPATAAD0DwAAI1VTAOQjAAAQAAAAI0dVSUQA
AAD0IwAAcAIAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAADMAAAAIAAAADgAA
ACQAAAARAAAAQgAAABAAAAADAAAABQAAABAAAAARAAAAAQAAAAcAAAABAAAAAAAKBQEAAAAAAAYA
xgN6CAYAWgR6CAYAEgNnCA8A7ggAAAYAPwPoBQYAqQPoBQYAigPoBQYAQQToBQYA5gPoBQYA/wPo
BQYAVgPoBQYAcQOiBAoAGgRMAg4AZgDyBxIAYgYsChIArQEsChIARwcsCgYArQZ4BQoAgAdMAhYA
cQdMAgoA1gZMAgoAYApMAgYABAp4BQYA9QJnCAYAkQeaCAYAygbTBRoAxQL0BBoAJgP0BBoApQK+
BQYA2gJ6CBIAowG3BhIAcQI8ARIAGgYsChIAQwgsCgYA3AF4BRIAMQa3BgYANQd4BQYA1AR4BQYA
qAB4BRIAOge3BgYAnQZ4BR4AAQAaCB4AKgAaCB4ATQAaCA4AfwDyBw4AGgDyB1sA9woAAA4AkADy
BwYAeAJ4BQYA6AF4BQYAMgvoBQAAAACuAAAAAAABAAEAAQAQAIsFAAAQAAEAAQABABAAYwcAAE0A
BwAGAAEAEABCCgAAWQAHAA4AAQAQAIoJAABdAAoAEwABABAAUgkAAF0ACwAXAAAAEAChCBcJXQAM
AB4AAAEQAIEJFwl1AA4AIgABALcHLgEBANMHLgEBAHAGMgEBAIUGMgEBAIkBNgEBAJYFNgEGAIoJ
OQEGAFIJPQEGAGMHQQEBAFAKRQEBAFAKRQERAH8FSQERAJUCTQERAMABUQFQIAAAAACBAEsLVQEB
ACghAAAAAMYAeAQGAAQArSEAAAAAxgCDBAYABADYIQAAAADGAOIJBgAEACAlAAAAAIYYUAgGAAQA
KCUAAAAAhhhQCLIABAAzJQAAAACGCJUBEAAHAD0lAAAAAIYIMgVcAQgAVCUAAAAAhgg8AhAACQBe
JQAAAACGCEcFXAEKAHUlAAAAAIYAJwsGAAsAfSUAAAAAhgALCgYACwCFJQAAAACGAA4KowALAI0l
AAAAAIYYUAgGAAsArSUAAAAAxgHBCQYACwCvJQAAAACBAGwBBgALAMwlAAAAAMYA1wphAQsArSUA
AAAAxgHiCQYADwAhJgAAAACGGFAIbQEPADAmAAAAAIYIxgDmABAAUSYAAAAAhgjYAOYAEAByJgAA
AACGCLcA5gAQAJMmAAAAAIYYUAhtARAAoiYAAAAAhgj2AGYAEQDIJgAAAACGCKEFZgARAO4mAAAA
AIYI5gA8ABEAFCcAAAAAhggMAmYAEQA6JwAAAACGCK0JZgARAGAnAAAAAIYI/Qg8ABEAhicAAAAA
gxhQCAYAEQCOJwAAAACTCI0HcwERALonAAAAAJMIfQJ4AREAwScAAAAAkwiJAn0BEQDJJwAAAACW
CCAKgwESANAnAAAAAIYYUAgGABIA2CcAAAAAkRhWCIgBEgAAAAEAgAEAAAIAzwkAAAMA5QQAAAEA
hgcAAAIAXAkAAAMA5AYAAAEAnAQAAAEAnAQAAAEAnAQAAAEAnAQAAAEAxwkAAAIAXQgAAAMAlgkA
AAQA5AYAAAEAZgoAAAEAZgoAAAEAnAQJAFAIAQARAFAIBgAZAFAICgApAFAIEAAxAFAIEAA5AFAI
EABBAFAIEABJAFAIEABRAFAIEABZAFAIEABhAFAIEABpAFAIBgDBAFAIBgDhAFAIFQDxAFAIBgCB
AFAIIAD5AG0CJwCBAJ4JLgAJAY8ENAD5ADsLPAAZAb0CBgCxAHgEBgBxAD4GQACxAIMEBgBxAFAG
RQAhAcEKPAAhAbwEZgAxARoKagAxAf0JcQAxAekEPAAxAfYJeAAxAbgBfgAxAfYJhAAxAfYJiwAx
Af0JkQAxAf0JlwD5AK4KAQCBAFUHngBBAdYJowBBAdEEpwAxAdsErABBAWcBowCRANABZgCZAFAI
sgCZAG8FvACZAF4FAQBJAVAIEACZACcLBgCZAAsKBgCZAA4KowCxAFAIBgCxAAwBxgCxAHAJzQC5
AFAIBgCxAEgB0wBRAfoF2QBZASEC3wBhAaEH5gCxAEYJ6wBpAWYF8QCxABIL+ABxAeMK/gCJAfoB
BQGJAS4LDgHJAFAIFAHpAFAIBgAuAAsArAEuABMAtQEuABsA1AEuACMA3QEuACsABgIuADMABgIu
ADsABgIuAEMA3QEuAEsADAIuAFMABgIuAFsAIwJDAGMAawLjAGsAawLBAXsAawLJAXMA1AHpAXMA
1AEbAEoAwgADAAEABQAFAAYACAAHAA4ACAAQAAAAmQGMAQAANgWQAQAAQAKMAQAASwWQAQAAygCU
AQAA3ACUAQAAuwCUAQAA+gCMAQAApQWMAQAA6gCZAQAAEAKMAQAAsQmMAQAAAQmZAQAAkQedAQAA
nQKiAQAAJAqnAQEABwADAAEACAAFAAEACQAHAAEACgAJAAIAFAALAAIAFQANAAIAFgAPAAIAGAAR
AAIAGQATAAIAGgAVAAIAGwAXAAIAHAAZAAIAHQAbAAIAHwAdAAIAIAAfAAEAIQAfAAIAIgAhAASA
AAABAAAAlBg9bQAAAAAAABgBAAAEAAAAAAAAAAAAAAAcAV4BAAAAAAsAAAAAAAAAAAAAACUBcAoA
AAAACwAAAAAAAAAAAAAAJQHuBgAAAAAEAAAAAAAAAAAAAAAcATwBAAAAAAsAAAAAAAAAAAAAACUB
jQoAAAAABAAAAAAAAAAAAAAAHAF4BQAAAAALAAAAAAAAAAAAAAAlAREHAAAAAAAAAAABAAAAqwgA
AAAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJsZTEwMABJRFRTUnVudGlt
ZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29u
bmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEw
MABJbnQzMgA8TW9kdWxlPgBnZXRfUGxhdGZvcm1EQgBnZXRfRGF0YWhhbmRsZXJEQgBnZXRfUHJv
amVjdERCAGdldF9jZmdzbGFSdW5JRABnZXRfY2Znc2xhQ29tcG9uZW50SUQAR2V0T3V0cHV0SUQA
U0NfNDVkZTRlMDY5MzhiNGQxYTg0YjljMmU1ZmUwMDdhMmEAU3lzdGVtLkRhdGEAZ2V0X0NvbXBv
bmVudE1ldGFEYXRhAG1zY29ybGliAFJlYWQATWFya091dHB1dHNGaW5pc2hlZABzb3VyY2VpZABj
b21wb25lbnRpZABzZXRfY29tcGFueWlkAERiQ29tbWFuZABTcWxDb21tYW5kAFJlcGxhY2UAZGVm
YXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAGdldF90aGlzQ2xhc3NQcm9maWxlAEdldFJ1bnRpbWVDb25uZWN0aW9u
QnlOYW1lAHNldF9jb21wYW55bmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBz
ZXRfQ29tbWFuZFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFw
cGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGls
ZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dh
YmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBB
c3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2lu
dEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUAU3lzdGVt
LlJ1bnRpbWUuVmVyc2lvbmluZwBnZXRfQ29ubmVjdGlvblN0cmluZwBHZXRTdHJpbmcAU3Vic3Ry
aW5nAG1zZwBnZXRfTGVuZ3RoAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ180NWRlNGUwNjkzOGI0
ZDFhODRiOWMyZTVmZTAwN2EyYS5kbGwAc2V0X2NvbXBhbnlpZF9Jc051bGwAc2V0X2NvbXBhbnlu
YW1lX0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAGR0aFZlcnNpb24AZ2V0X2NmZ3NsYURhdGFoYW5kbGVyVmVyc2lvbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRf
UnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGJDb25u
ZWN0aW9uAEFjcXVpcmVDb25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24A
bXlQbGF0Zm9ybUNvbm5lY3Rpb24AbXlEYXRhaGFuZGxlckNvbm5lY3Rpb24ASW52YWxpZE9wZXJh
dGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1h
cABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQu
U3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABDaGFyAERiRGF0YVJlYWRlcgBTcWxEYXRhUmVhZGVy
AEV4ZWN1dGVSZWFkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIA
Z2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFnZXIAbXlQbGF0Zm9ybUNvbm5l
Y3Rpb25NYW5hZ2VyAG15RGF0YWhhbmRsZXJDb25uZWN0aW9uTWFuYWdlcgBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxp
bmUuV3JhcHBlcgBTcWxQYXJhbWV0ZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlh
Z25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNDXzQ1ZGU0ZTA2OTM4YjRkMWE4NGI5YzJlNWZlMDA3YTJhLlByb3BlcnRpZXMuUmVzb3VyY2Vz
LnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfdGhpc051bWJlck9mQ29tcGFuaWVzAFNDXzQ1
ZGU0ZTA2OTM4YjRkMWE4NGI5YzJlNWZlMDA3YTJhLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFy
aWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBDb25u
ZWN0aW9ucwBCdWZmZXJzAGdldF9QYXJhbWV0ZXJzAGdldF90aGlzQ29uc3RyYWludHMARmluaXNo
T3V0cHV0cwBzdGF0dXMAZ2V0X0hhc1Jvd3MAQ3JlYXRlTmV3T3V0cHV0Um93cwBDb25jYXQARm9y
bWF0AE9iamVjdABTZXRFbmRPZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABTeXN0ZW0uRGF0YS5T
cWxDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhv
c3QAc2V0X0NvbW1hbmRUaW1lb3V0AGdldF9Db25uZWN0aW9uVGltZW91dABQcmltZU91dHB1dABH
ZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0
b3JDb250ZXh0AEFkZFJvdwBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AExvZ0VudHJ5AAAh
bgBsAGgALgBsAG8AZwBfAGEAZABkAEUAbgB0AHIAeQAAFUAAYwBvAG0AcABvAG4AZQBuAHQAACtD
AG8AbQBwAGEAbgB5AFIAZQB0AHIAaQBlAHYAYQBsAC4AZAB0AHMAeAAAGUAAcwBvAHUAcgBjAGUA
XwB0AHkAcABlAAANUwBDAFIASQBQAFQAABlAAHMAbwB1AHIAYwBlAF8AbgBhAG0AZQAAN1AAYQB0
AGUAbgB0ACAAQwBsAGEAcwBzACAAUAByAG8AZgBpAGwAZQAgAFMAbwB1AHIAYwBlAAAVQABzAG8A
dQByAGMAZQBfAGkAZAAAEUAAbQBlAHMAcwBhAGcAZQAAD0AAYQBjAHQAaQBvAG4AAA9FAFgARQBD
AFUAVABFAAAPQABzAHQAYQB0AHUAcwAAAQBBaQBuAHMAZQByAHQAIABpAG4AdABvACAAQABwACAA
cwBlAGwAZQBjAHQAIAAnAHsAMAB9ACcALAAgAHsAMQB9AAE5IAB1AG4AaQBvAG4AIABhAGwAbAAg
AHMAZQBsAGUAYwB0ACAAJwB7ADAAfQAnACwAIAB7ADEAfQABCyAAQQBOAEQAIAAABSgAJwABAywA
AAcnACwAJwABBScAKQABB2MAYgAuAAAJIABJAE4AIAAAAyAAABFQAFIATwBHAFIARQBTAFMAAA9U
AE8AUAAgAHsAMAB9AACKlWQAZQBjAGwAYQByAGUAIABAAHAAIAB0AGEAYgBsAGUAKABjAGwAYQBz
AHMAXwBjAG8AZABlACAAbgB2AGEAcgBjAGgAYQByACgAMQA2ACkALAAgAGMAbABhAHMAcwBfAHcA
ZQBpAGcAaAB0ACAAcgBlAGEAbAApADsACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHsAMAB9ADsA
CgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAZQBsAGUAYwB0ACAAewAzAH0AIAAtAC0AdABvAHAA
IAAxADAAMAAwAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAYgAuAGIAdgBkAF8A
aQBkAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACwAIABzAHUAbQAoACAAcAAuAGMA
bABhAHMAcwBfAHcAZQBpAGcAaAB0ACAAKQAgAGEAcwAgAHAAcgBvAGYAaQBsAGUAXwBzAGMAbwBy
AGUACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALAAgAGkAcwBuAHUAbABsACgAYwBi
AC4AYwBvAG0AcABhAG4AeQBfAG4AYQBtAGUALAAnAG4ALwBhACcAKQAgAGEAcwAgAGMAbwBtAHAA
YQBuAHkAXwBuAGEAbQBlAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABmAHIAbwBtAAoAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAcAAgAHAAIABKAE8ASQBOAAoAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgAHsAMQB9AC4AcABhAHQAZQBuAHQAXwBjAGwAYQBzAHMAIABwAGMA
IABPAE4AIABwAC4AYwBsAGEAcwBzAF8AYwBvAGQAZQA9AHAAYwAuAGMAbABhAHMAcwBfAGMAbwBk
AGUAIABKAE8ASQBOAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHsAMQB9AC4AcABh
AHQAZQBuAHQAXwBmAGEAbQBpAGwAeQBfAGMAbABhAHMAcwAgAGEAZgAgAE8ATgAgAGEAZgAuAGMA
bABhAHMAcwBfAGkAZAA9AHAAYwAuAGMAbABhAHMAcwBfAGkAZAAgAEoATwBJAE4ACgAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAewAxAH0ALgBjAG8AbQBwAGEAbgB5AF8AcABhAHQAZQBu
AHQAXwBmAGEAbQBpAGwAeQAgAGEAYgAgAE8ATgAgAGEAYgAuAHAAYQB0AGUAbgB0AF8AZgBhAG0A
aQBsAHkAXwBpAGQAPQBhAGYALgBwAGEAdABlAG4AdABfAGYAYQBtAGkAbAB5AF8AaQBkACAASgBP
AEkATgAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB7ADEAfQAuAGMAbwBtAHAAYQBu
AHkAXwBiAGEAcwBpAGMAIABjAGIAIABPAE4AIABjAGIALgBiAHYAZABfAGkAZAA9AGEAYgAuAGIA
dgBkAF8AaQBkAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBSAEUACgAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAeQBlAGEAcgAoAGEAZgAuAHAAcgBpAG8AcgBpAHQAeQBfAGQA
YQB0AGUAKQAgAD4AIAAxADkAOQA2AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHsA
MgB9AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABnAHIAbwB1AHAAIABiAHkACgAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAYQBiAC4AYgB2AGQAXwBpAGQACgAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAALAAgAGMAYgAuAGMAbwBtAHAAYQBuAHkAXwBuAGEAbQBlAAoAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIABvAHIAZABlAHIAIABiAHkACgAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAcAByAG8AZgBpAGwAZQBfAHMAYwBvAHIAZQAgAGQAZQBzAGMAARM8AHAAcgBvAGYA
aQBsAGUAPgAAa1MAdQBjAGMAZQBzAHMAZgB1AGwAbAB5ACAAYQBkAGQAZQBkACAAewAwAH0AIABu
AHUAbQBiAGUAcgAgAG8AZgAgAGMAbwBtAHAAYQBuAGkAZQBzACAAdABvACAAcAByAG8AZgBpAGwA
ZQAAD1MAVQBDAEMARQBTAFMAAA9XAEEAUgBOAEkATgBHAABFTgBvACAAYwBvAG0AcABhAG4AaQBl
AHMAIAB3AGUAcgBlACAAYQBkAGQAZQBkACAAdABvACAAcAByAG8AZgBpAGwAZQAAD0YAQQBJAEwA
VQBSAEUAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIA
ZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1
AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQA
cAB1AHQAIAAwAAAbRABhAHQAYQBoAGEAbgBkAGwAZQByAEQAQgAAE1AAcgBvAGoAZQBjAHQARABC
AAAVUABsAGEAdABmAG8AcgBtAEQAQgAAJ2MAZgBnAF8AcwBsAGEAXwBDAG8AbQBwAG8AbgBlAG4A
dABJAEQAADVjAGYAZwBfAHMAbABhAF8ARABhAHQAYQBoAGEAbgBkAGwAZQByAFYAZQByAHMAaQBv
AG4AABtjAGYAZwBfAHMAbABhAF8AUgB1AG4ASQBEAAAjdABoAGkAcwBfAEMAbABhAHMAcwBQAHIA
bwBmAGkAbABlAAAhdABoAGkAcwBfAEMAbwBuAHMAdAByAGEAaQBuAHQAcwAALXQAaABpAHMAXwBO
AHUAbQBiAGUAcgBPAGYAQwBvAG0AcABhAG4AaQBlAHMAAHFTAEMAXwA0ADUAZABlADQAZQAwADYA
OQAzADgAYgA0AGQAMQBhADgANABiADkAYwAyAGUANQBmAGUAMAAwADcAYQAyAGEALgBQAHIAbwBw
AGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAABFbsVSZ86fSa4L8IykUhlPAAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFtBAcBEkEGIAIBDhI9BiABARGAgQUgABKAhQcgAhKAiQ4cAyAA
CAQgARwcBCABARwbBxIdDh0ODg4ODggSQQgdDg4OCB0OCBJFDhJJAyAADgYgAR0OHQMGAAMODhwc
BQACDg4OBSACDg4OBgADDg4ODgUAAQ4dDgUAAg4OHAYAAg4OHRwEIAASRQMgAAIEIAEOCAUgAg4I
CAkgAwESUR0IElUFIAIBCBwDBwEIBgACCBJVDgUgAR0ICAUgABKAqQUgABKArQYgARKAsQ4EIAAS
OQUgABKAtQYgARKAuRwFAAASgL0GIAEcEoDBCAABEoDFEYDJBSAAEoDNByACAQ4SgM0It3pcVhk0
4IkIiYRdzYCAzJEDBhI5AwYSPQIGDgMGEhQDBhIYAwYSDAMGElkDBhJlAwYSaQMGEiAGIAMBDg4O
BCABAQILIAQBCB0IHRJRElUFIAEBElkEAAASZQQAABJpBQABARJpBAAAEiADAAABAygADgMoAAIE
KAASOQMoAAgECAASZQQIABJpBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBCAEAAgAAAAAAKAEAI1NDXzQ1ZGU0ZTA2OTM4YjRkMWE4NGI5YzJlNWZlMDA3YTJhAAAF
AQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTUAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
MAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAQBAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAChPAAAAAAAAAAAAAEJPAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0TwAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQAAAAA
AAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
AD1tlBgAAAEAPW2UGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoA
AQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAA
AAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANAA1AGQA
ZQA0AGUAMAA2ADkAMwA4AGIANABkADEAYQA4ADQAYgA5AGMAMgBlADUAZgBlADAAMAA3AGEAMgBh
AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMgA5ADIALgAyADcA
OQA2ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANAA1AGQAZQA0
AGUAMAA2ADkAMwA4AGIANABkADEAYQA4ADQAYgA5AGMAMgBlADUAZgBlADAAMAA3AGEAMgBhAC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsA
cwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA0
ADUAZABlADQAZQAwADYAOQAzADgAYgA0AGQAMQBhADgANABiADkAYwAyAGUANQBmAGUAMAAwADcA
YQAyAGEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANAA1
AGQAZQA0AGUAMAA2ADkAMwA4AGIANABkADEAYQA4ADQAYgA5AGMAMgBlADUAZgBlADAAMAA3AGEA
MgBhAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADIAOQAy
AC4AMgA3ADkANgA1AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA2ADIAOQAyAC4AMgA3ADkANgA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAFQ/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_45de4e06938b4d1a84b9c2e5fe007a2a</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerVersion,User::cfg_sla_RunID,User::this_ClassProfile,User::this_Constraints,User::this_NumberOfCompanies</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="1">
                            <arrayElement
                              dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D11.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;139&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">2f18c2b90ec06d06fed71f192239e5ed</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">57f7e76bbf695f2cb755ff1c6859fc3f24e89aad</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Connections[DatahandlerDB]"
                          connectionManagerID="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          name="DatahandlerDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Connections[ProjectDB]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB - ADO.NET]"
                          name="ProjectDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Connections[PlatformDB]"
                          connectionManagerID="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          name="PlatformDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Outputs[Output 0].Columns[company_id]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Outputs[Output 0].Columns[company_id]"
                              name="company_id" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Outputs[Output 0].Columns[company_name]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Outputs[Output 0].Columns[company_name]"
                              name="company_name" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Write to company longlist"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[company_long_list]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input].Columns[company_id]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="company_id"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_id]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Outputs[Output 0].Columns[company_id]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input].Columns[this_RetrievalLabel]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="this_RetrievalLabel"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[retrieval_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Output].Columns[this_RetrievalLabel]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input].Columns[CompanyName]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="CompanyName"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_name]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Output].Columns[CompanyName]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[row_i]"
                              dataType="i4"
                              name="row_i" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_id]"
                              dataType="wstr"
                              length="50"
                              name="company_id" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[match]"
                              dataType="r4"
                              name="match" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_name]"
                              dataType="wstr"
                              length="255"
                              name="company_name" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[retrieval_key]"
                              dataType="wstr"
                              length="50"
                              name="retrieval_key" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile.Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Inputs[Lookup Input]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile.Paths[Lookup No Match Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Row Count.Inputs[Row Count Input 1]"
                      name="Lookup No Match Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup.Outputs[Lookup No Match Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile.Paths[Output 0]"
                      endId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column.Inputs[Derived Column Input]"
                      name="Output 0"
                      startId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source.Outputs[Output 0]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile.Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist.Inputs[OLE DB Destination Input]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Script Task"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{AAF8385C-395C-4DCC-BDDF-355FB8C269B7}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Script Task"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_adb8bbf362354cf985607e70fb6e5c4a"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMDatahandlerDB,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_CMProjectDB,User::cfg_tpl_jsonConfiguration,System::PackageName,User::this_RetrievalParam"
                  ReadWriteVariables="User::this_BagOfWords,User::this_ClassProfile,User::this_CompanyId,User::this_Constraints,User::this_Normalize,User::this_NumberOfCompanies,User::this_RetrievalLabel,User::this_RetrievalType,User::this_TopicCorpus,User::this_TopicName">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_adb8bbf362354cf985607e70fb6e5c4a.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{38FDFEB1-BDAA-48FE-BA89-8A65FC90244A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_adb8bbf362354cf985607e70fb6e5c4a</RootNamespace>
    <AssemblyName>ST_adb8bbf362354cf985607e70fb6e5c4a</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Newtonsoft.Json\v4.0_7.0.0.0__30ad4fe6b2a6aeed\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_adb8bbf362354cf985607e70fb6e5c4a.Properties.Settings.get_Default():ST_adb8bbf362354cf985607e70fb6e5c4a.Properties.Sett" +
    "ings")]

namespace ST_adb8bbf362354cf985607e70fb6e5c4a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig.Params;
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Reflection;
using System.Windows.Forms;
#endregion

namespace ST_adb8bbf362354cf985607e70fb6e5c4a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        public void Main()
        {
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetupLogger();
                deloitte.SetNonNullUserVariablesFor<RetrievalParam>("User::this_RetrievalParam");
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_adb8bbf362354cf985607e70fb6e5c4a</msb:CodeName>
		<msb:DisplayName>ST_adb8bbf362354cf985607e70fb6e5c4a</msb:DisplayName>
		<msb:ProjectId>{6C9968E4-9102-473D-B9A0-7157A4118609}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_adb8bbf362354cf985607e70fb6e5c4a.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_adb8bbf362354cf985607e70fb6e5c4a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_adb8bbf362354cf985607e70fb6e5c4a")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_adb8bbf362354cf985607e70fb6e5c4a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_adb8bbf362354cf985607e70fb6e5c4a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_adb8bbf362354cf985607e70fb6e5c4a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_adb8bbf362354cf985607e70fb6e5c4a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_adb8bbf362354cf985607e70fb6e5c4a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_adb8bbf362354cf985607e70fb6e5c4a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAF5V1VYAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAPi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOQtAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
LgAAAAAAAEgAAAACAAUAyCEAABwMAAABAAAAAAAAABAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAgAqAAAAAgAAEQIoFgAACnMXAAAKCgZvGAAACgZycwAAcG8BAAAr
3goGLAYGbxoAAArcKgAAARAAAAIADAATHwAKAAAAAB4CKBsAAAoqAAAAALQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABC
U0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADIAwAAI34AADQEAADIBQAAI1N0cmlu
Z3MAAAAA/AkAAKgAAAAjVVMApAoAABAAAAAjR1VJRAAAALQKAABoAQAAI0Jsb2IAAAAAAAAAAgAA
AVcdogEJCwAAAPolMwAWAAABAAAAHgAAAAUAAAAGAAAACQAAAAEAAAAbAAAAAgAAAA8AAAACAAAA
AgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9
ARQBBgBZAboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnAC
BgAHA3ACBgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgDgA80DBgD9A7oABgACBLoABgAm
BHACCgBSBDwECgBrBDwEBgCABG8DDgCiBBQBDgDEBBQBEgD5BN4EEgBgBS8FBgBvBboAAAAAAAEA
AAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAA
ABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJKAFaALwJKAFAgAAAAAIMYvAEbAAEA
WCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCz
IAAAAACGGLwBGwACAKcgAAAAAJEYmwSJAAIAvCAAAAAAhgAaAhsAAgAEIQAAAACGGLwBGwACAAAA
AQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFYAHkAvAFY
AIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAFARiAKEALwRpACkAvAFuALkAvAF6AMkA
vAEbABEAvAEbANEAvAEbABkA1gSNAOEAvAGbAOEACAUbAOEAFAWhAPEAewUbABkAvAEbAAgAFABO
AAgAGABTACkAkwCAAC4AGwAiAS4AIwAiAS4AYwBIAS4ACwCxAC4AEwD5AC4AMwD5AC4AKwAiAS4A
OwAoAS4AQwAiAS4AWwA/AUMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAHUArAACAAEAAwADAAAAbwEv
AAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAEBf3QwAAAAAAAH8A
AAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1
AAAAAAADAAAAAAAAAAAAAACSAN4EAAAAAAAAAAABAAAAgwUAAAUABAAzAKcAAAAAAAA8TW9kdWxl
PgBTVF9hZGI4YmJmMzYyMzU0Y2Y5ODU2MDdlNzBmYjZlNWM0YS5kbGwAUmVzb3VyY2VzAFNUX2Fk
YjhiYmYzNjIzNTRjZjk4NTYwN2U3MGZiNmU1YzRhLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0
TWFpbgBTVF9hZGI4YmJmMzYyMzU0Y2Y5ODU2MDdlNzBmYjZlNWM0YQBTY3JpcHRSZXN1bHRzAG1z
Y29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0A
U3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZs
ZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlW
ZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0
ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0u
Q29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5
UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBEZWxvaXR0ZS5QaXBlbGlu
ZUZyYW1ld29yawBEZWxvaXR0ZVNjcmlwdABTZXR1cExvZ2dlcgBTZXROb25OdWxsVXNlclZhcmlh
Ymxlc0ZvcgBEZWxvaXR0ZS5QaXBlbGluZUZyYW1ld29yay5QbGF0Zm9ybUNvbmZpZy5QYXJhbXMA
UmV0cmlldmFsUGFyYW0ASURpc3Bvc2FibGUARGlzcG9zZQBTVF9hZGI4YmJmMzYyMzU0Y2Y5ODU2
MDdlNzBmYjZlNWM0YS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAcVMAVABfAGEA
ZABiADgAYgBiAGYAMwA2ADIAMwA1ADQAYwBmADkAOAA1ADYAMAA3AGUANwAwAGYAYgA2AGUANQBj
ADQAYQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAM1UAcwBlAHIA
OgA6AHQAaABpAHMAXwBSAGUAdAByAGkAZQB2AGEAbABQAGEAcgBhAG0AAAB2SB2qrNFdSabTP2Br
8l1sAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQI
ABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkG
IAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0I+QI6Ng3oSwwFIAEBEm0FMAEBAQ4E
CgESdQQHARJxRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUX2FkYjhiYmYzNjIzNTRjZjk4NTYwN2U3MGZi
NmU1YzRhAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEADC4AAAAAAAAAAAAALi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAACAuAAAAAAAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQD3QxAXAAABAPdDEBc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AYQBkAGIAOABiAGIAZgAzADYAMgAzADUANABjAGYAOQA4ADUANgAwADcAZQA3ADAAZgBiADYA
ZQA1AGMANABhAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQAw
ADQALgAxADcAMwA5ADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
YQBkAGIAOABiAGIAZgAzADYAMgAzADUANABjAGYAOQA4ADUANgAwADcAZQA3ADAAZgBiADYAZQA1
AGMANABhAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AYQBkAGIAOABiAGIAZgAzADYAMgAzADUANABjAGYAOQA4ADUA
NgAwADcAZQA3ADAAZgBiADYAZQA1AGMANABhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfAGEAZABiADgAYgBiAGYAMwA2ADIAMwA1ADQAYwBmADkAOAA1ADYA
MAA3AGUANwAwAGYAYgA2AGUANQBjADQAYQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA5ADAANAAuADEANwAzADkAOQAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADAANAAuADEANwAzADkAOQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABAPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Execute Feature\Foreach Loop Container\Topic Score"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:DelayValidation="True"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{2368a243-89b4-4d44-9f4e-42560d08305e}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Topic Score"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add retrieval key as a column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Inputs[Derived Column Input].Columns[company_name]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="company_name"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Outputs[Output 0].Columns[company_name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Output].Columns[this_RetrievalLabel]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Output].Columns[this_RetrievalLabel]"
                              name="this_RetrievalLabel"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,100)@[User::this_RetrievalLabel]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,100)@[User::this_RetrievalLabel]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Output].Columns[CompanyName]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Output].Columns[CompanyName]"
                              name="CompanyName"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_WSTR,255)#{Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Outputs[Output 0].Columns[company_name]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_WSTR,255)company_name</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[company_long_list]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[company_long_list]) [refTable]
where [refTable].[company_id] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="row_i" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="company_id" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="match" dataType="DT_R4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="company_name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="retrieval_key" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Outputs[Output 0].Columns[company_id]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Inputs[Lookup Input].Columns[company_id]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="company_id"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Outputs[Output 0].Columns[company_id]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">company_id</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Row Count"
                      componentClassID="Microsoft.RowCount"
                      contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                      name="Row Count">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the variable to hold the row count."
                          name="VariableName">User::varRowCount</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Row Count.Inputs[Row Count Input 1]"
                          hasSideEffects="true"
                          name="Row Count Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Row Count.Outputs[Row Count Output 1]"
                          name="Row Count Output 1"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic Score\Row Count.Inputs[Row Count Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Topic Score Retrieval"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 DatahandlerDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"DatahandlerDB").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 PlatformDB
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"PlatformDB").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String cfgslaComponentID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_ComponentID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgslaDatahandlerVersion
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_sla_DatahandlerVersion"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 cfgslaRunID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["cfg_sla_RunID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgtplCMDatahandlerDB
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_tpl_CMDatahandlerDB"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgtplCMPlatformDB
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_tpl_CMPlatformDB"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String cfgtplCMProjectDB
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["cfg_tpl_CMProjectDB"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisConstraints
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_Constraints"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisNormalize
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_Normalize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 thisNumberOfCompanies
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["this_NumberOfCompanies"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisTopicCorpus
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_TopicCorpus"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String thisTopicName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["this_TopicName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 
    IDTSConnectionManager100 myPlatformConnectionManager;
    IDTSConnectionManager100 myDatahandlerConnectionManager;
    SqlConnection myPlatformConnection;
    SqlConnection myDatahandlerConnection;
    string componentid;
    string dthVersion;
    string topicCorpus;
    private void LogEntry(string sourceid, string status, string msg)
    {
        using (SqlCommand cmd = new SqlCommand("nlh.log_addEntry", myPlatformConnection))
        {
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("@component", "CompanyRetrieval.dtsx");
            cmd.Parameters.AddWithValue("@source_type", "SCRIPT");
            cmd.Parameters.AddWithValue("@source_name", "Topic Retrieval");
            cmd.Parameters.AddWithValue("@source_id", sourceid);
            cmd.Parameters.AddWithValue("@message", msg);
            cmd.Parameters.AddWithValue("@action", "EXECUTE");
            cmd.Parameters.AddWithValue("@status", status);

            cmd.ExecuteNonQuery();
        }
    }

    public override void PreExecute()
    {
        base.PreExecute();

        myPlatformConnectionManager = this.Connections.PlatformDB;
        myDatahandlerConnectionManager = this.Connections.DatahandlerDB;
        myPlatformConnection = (SqlConnection)myPlatformConnectionManager.AcquireConnection(null);
        myDatahandlerConnection = (SqlConnection)myDatahandlerConnectionManager.AcquireConnection(null);

        componentid = (string) Variables.cfgslaComponentID;
        dthVersion = Variables.cfgslaDatahandlerVersion;
        topicCorpus = Variables.thisTopicCorpus;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        myPlatformConnectionManager.ReleaseConnection(myPlatformConnection);
        myDatahandlerConnectionManager.ReleaseConnection(myDatahandlerConnection);
    }

    public override void CreateNewOutputRows()
    {

        SqlDataReader reader;
        string TopicName = Variables.thisTopicName;
        string commandString;
        string constraintWhereClause;
        string topCount;
        LogEntry(componentid, "PROGRESS", String.Format("Retrieving [{0}] from [{1}].",TopicName,topicCorpus));

        /* Constraints */
        if (Variables.thisConstraints.Length == 0)
        {
            constraintWhereClause = "";
        }
        else
        {
            constraintWhereClause = " WHERE ";
            string[] Constraints = Variables.thisConstraints.Split('|');
            string[] ThisConstraint;

            string ThisConstraintAttribute;
            string ThisConstraintValue;

            int nr = 1;
            foreach (string tc in Constraints)
            {
                if (nr > 1)
                    constraintWhereClause = constraintWhereClause + " AND ";

                ThisConstraint = tc.Split(':');
                ThisConstraintAttribute = ThisConstraint[0];
                ThisConstraintValue = "('" + ThisConstraint[1].Replace(",", "','") + "')";

                constraintWhereClause = constraintWhereClause + "cb." + ThisConstraintAttribute + " IN " + ThisConstraintValue + " ";
                nr = nr + 1;
            }
        }
        LogEntry(componentid, "PROGRESS", constraintWhereClause);

        /* Normalize patent score by company portfolio size */
        string normalizeQuery = "";
        if (Variables.thisNormalize == "Portfolio")
        {
            normalizeQuery = " / cast(case when cb.[number_of_patents]>0 then cb.[number_of_patents] else 1 end as real) ";
            LogEntry(componentid, "PROGRESS", "Normalizing by portfolio; only applicable to patent score.");
        }
        /* Number of companies */
        topCount = String.Format("TOP {0}", Variables.thisNumberOfCompanies);
        LogEntry(componentid, "PROGRESS", topCount);
        commandString = "";

        switch(topicCorpus)
        {
            case "Patents":
                commandString = String.Format(@"WITH p AS(
                    SELECT patent_family_id,score_value FROM {1}.[ufn_patent_text_topic]('{0}')
                ) SELECT {3}
                    cb.bvd_id, cb.company_name, sum(p.score_value){4} as company_score
                FROM
                    p JOIN
                    {1}.company_patent_family cpf ON cpf.patent_family_id = p.patent_family_id JOIN
                    {1}.company_basic cb ON cb.bvd_id = cpf.bvd_id
                {2}
                GROUP BY
                    cb.bvd_id, cb.company_name, cb.[number_of_patents]
                ORDER BY
                    company_score DESC", TopicName, dthVersion, constraintWhereClause, topCount,normalizeQuery);
                break;
            case "Website":
                commandString = String.Format(@"WITH p AS(
                    SELECT website,score_value FROM {1}.[ufn_web_text_topic]('{0}')
                ) SELECT {3}
                    cb.bvd_id, cb.company_name, sum(p.score_value) as company_score
                FROM
                    p JOIN
                    {1}.company_website cpf ON cpf.website = p.website JOIN
                    {1}.company_basic cb ON cb.bvd_id = cpf.company_id
                {2}
                GROUP BY
                    cb.bvd_id, cb.company_name
                ORDER BY
                    company_score DESC", TopicName, dthVersion, constraintWhereClause, topCount);
                break;
            case "Trade":
                commandString = String.Format(@"WITH p AS(
                    SELECT company_id,score_value FROM {1}.[ufn_company_text_topic]('{0}')
                ) SELECT {3}
                    cb.bvd_id, cb.company_name, sum(p.score_value) as company_score
                FROM
                    p JOIN
                    {1}.company_basic cb ON cb.bvd_id = p.company_id
                {2}
                GROUP BY
                    cb.bvd_id, cb.company_name
                ORDER BY
                    company_score DESC", TopicName, dthVersion, constraintWhereClause, topCount);
                break;
            case "Sec":
                commandString = String.Format(@"WITH p AS(
                    SELECT company_id,score_value FROM {1}.[ufn_sec_text_topic]('{0}')
                ) SELECT {3}
                    cb.bvd_id, cb.company_name, sum(p.score_value) as company_score
                FROM
                    p JOIN
                    {1}.company_basic cb ON cb.bvd_id = p.company_id
                {2}
                GROUP BY
                    cb.bvd_id, cb.company_name
                ORDER BY
                    company_score DESC", TopicName, dthVersion, constraintWhereClause, topCount);
                break;
            default:
                LogEntry(componentid, "FAILURE", String.Format("Invalid Topic Corpus [{0}].", topicCorpus));
                break;
        }

        if (commandString != "")
        {
            SqlCommand sqlc = new SqlCommand(commandString, myDatahandlerConnection);
            sqlc.CommandTimeout = 0;

            try
            {
                int rowcount = 0;

                reader = sqlc.ExecuteReader();
                if (reader.HasRows)
                {
                    while (reader.Read())
                    {
                        Output0Buffer.AddRow();
                        Output0Buffer.companyid = reader.GetString(0);
                        Output0Buffer.companyname = (reader.GetString(1).Length > 255 ? reader.GetString(1).Substring(0, 255) : reader.GetString(1));
                        //                Output0Buffer.companyname = reader.GetString(1).Substring(0, 255);

                        rowcount += 1;
                    }

                    string msg = String.Format("Successfully read {0} number of rows ({1} on {2})", rowcount,TopicName,topicCorpus);
                    LogEntry(componentid, "SUCCESS", msg);
                }
                else
                {
                    LogEntry(componentid, "WARNING", String.Format("No rows were added for query [{0}] ({1} on {2})", commandString, TopicName, topicCorpus));
                }
            }
            catch (Exception e)
            {
                LogEntry(componentid, "FAILURE", e.Message);
                LogEntry(componentid, "FAILURE", String.Format("Failed query was [{0}].", commandString));
            }
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String companyid
    {
        set
        {
            this[0] = value;
        }
    }
    public bool companyid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String companyname
    {
        set
        {
            this[1] = value;
        }
    }
    public bool companyname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_33ad0ff299b742669a0516edf8761d2a.Properties.Settings.get_Default():SC_33ad0ff299b742669a0516edf8761d2a.Properties.Sett" +
    "ings")]

namespace SC_33ad0ff299b742669a0516edf8761d2a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_33ad0ff299b742669a0516edf8761d2a.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a49819cc-3773-4115-993d-794247a4f92d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_33ad0ff299b742669a0516edf8761d2a</RootNamespace>
    <AssemblyName>SC_33ad0ff299b742669a0516edf8761d2a</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_33ad0ff299b742669a0516edf8761d2a" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_33ad0ff299b742669a0516edf8761d2a</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_33ad0ff299b742669a0516edf8761d2a</msb:DisplayName>
		<msb:ProjectId>{81AC24FC-C86C-4BE4-8774-5FB94550096F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_33ad0ff299b742669a0516edf8761d2a.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_33ad0ff299b742669a0516edf8761d2a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_33ad0ff299b742669a0516edf8761d2a")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_33ad0ff299b742669a0516edf8761d2a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_33ad0ff299b742669a0516edf8761d2a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_33ad0ff299b742669a0516edf8761d2a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_33ad0ff299b742669a0516edf8761d2a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_33ad0ff299b742669a0516edf8761d2a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_33ad0ff299b742669a0516edf8761d2a.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANrtklkAAAAAAAAAAOAAIiALATAAADoAAAAIAAAAAAAA6lkA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJhZAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA8DkAAAAgAAAAOgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAA8AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAQgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADM
WQAAAAAAAEgAAAACAAUARCkAAJwvAAABAAAAAAAAAOBYAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwC6AAAAAQAAEXIBAABwAnsDAAAEcxAAAAoKBhpvEQAA
CgZvEgAACnIjAABwcjkAAHBvEwAACiYGbxIAAApyZQAAcHJ/AABwbxMAAAomBm8SAAAKco0AAHBy
pwAAcG8TAAAKJgZvEgAACnLHAABwA28TAAAKJgZvEgAACnLdAABwBW8TAAAKJgZvEgAACnLvAABw
cv8AAHBvEwAACiYGbxIAAApyDwEAcARvEwAACiYGbxQAAAom3goGLAYGbxUAAArcKgAAARAAAAIA
EQCerwAKAAAAABMwAwCKAAAAAAAAAAIoFgAACgICewgAAARvFQAABn0BAAAEAgJ7CAAABG8UAAAG
fQIAAAQCAnsBAAAEFG8XAAAKdA8AAAF9AwAABAICewIAAAQUbxcAAAp0DwAAAX0EAAAEAgJ7CQAA
BG8XAAAGfQUAAAQCAnsJAAAEbxgAAAZ9BgAABAICewkAAARvIAAABn0HAAAEKqYCKBgAAAoCewEA
AAQCewMAAARvGQAACgJ7AgAABAJ7BAAABG8ZAAAKKhswBwDaAwAAAgAAEQJ7CQAABG8hAAAGCwIC
ewUAAARyHwEAcHIxAQBwBwJ7BwAABCgaAAAKKAEAAAYCewkAAARvHQAABm8bAAAKLQtyawEAcA04
yQAAAHJtAQBwDQJ7CQAABG8dAAAGF40lAAABJRYffJ1vHAAAChcTCRMKFhMLOJAAAAARChELmhEJ
FzEMCXJ9AQBwKB0AAAoNF40lAAABJRYfOp1vHAAAChMGEQYWmhMHcokBAHARBheaco8BAHBykwEA
cG8eAAAKcpsBAHAoHwAAChMIHI0kAAABJRYJoiUXcqEBAHCiJRgRB6IlGXKpAQBwoiUaEQiiJRty
swEAcKIoIAAACg0RCRdYEwkRCxdYEwsRCxEKjmk/Zf///wICewUAAARyHwEAcAkoAQAABnJrAQBw
EwUCewkAAARvHgAABnK3AQBwKCEAAAosHXLLAQBwEwUCAnsFAAAEch8BAHByhAIAcCgBAAAGcvoC
AHACewkAAARvHwAABowmAAABKCIAAAoTBAICewUAAARyHwEAcBEEKAEAAAZyawEAcAwCewcAAAQT
DBEMcgoDAHAoIQAACi0yEQxyGgMAcCghAAAKLVURDHIqAwBwKCEAAAotcBEMcjYDAHAoIQAACjqI
AAAAOKwAAAByPgMAcBuNFwAAASUWB6IlFwJ7BgAABKIlGAmiJRkRBKIlGhEFoigjAAAKDDicAAAA
chMIAHAajRcAAAElFgeiJRcCewYAAASiJRgJoiUZEQSiKCMAAAoMK3NycgwAcBqNFwAAASUWB6Il
FwJ7BgAABKIlGAmiJRkRBKIoIwAACgwrSnJDEABwGo0XAAABJRYHoiUXAnsGAAAEoiUYCaIlGREE
oigjAAAKDCshAgJ7BQAABHIMFABwchwUAHACewcAAAQoIgAACigBAAAGCHJrAQBwKCQAAAo5HgEA
AAgCewQAAARzEAAAChMNEQ0WbyUAAAoWEw4RDW8mAAAKCgZvJwAACjmVAAAAK1wCewoAAARvCwAA
BgJ7CgAABAYWbygAAApvBwAABgJ7CgAABAYXbygAAApvGwAACiD/AAAAMAkGF28oAAAKKxIGF28o
AAAKFiD/AAAAbykAAApvCQAABhEOF1gTDgZvKgAACi2cclQUAHARDowmAAABBwJ7BwAABCgrAAAK
Ew8CAnsFAAAEcrgUAHARDygBAAAGKyMCAnsFAAAEcsgUAHBy2BQAcAgHAnsHAAAEKCsAAAooAQAA
Bt44ExACAnsFAAAEcgwUAHAREG8sAAAKKAEAAAYCAnsFAAAEcgwUAHByOBUAcAgoIgAACigBAAAG
3gAqAAABEAAAAADRAtChAzgSAAABHgIoDgAABioqAgMEBSgtAAAKKiYCFgMoLgAACipaAywIAhYo
LwAACipyaBUAcHMwAAAKeiYCFwMoLgAACipaAywIAhcoLwAACipyaBUAcHMwAAAKeh4CKDEAAAoq
HgIoMgAACioeAigzAAAKKn4CKDQAAAoCAnMTAAAGfQgAAAQCAnMWAAAGfQkAAAQqBipuAnsKAAAE
LBICewoAAARvDAAABgIUfQoAAAQqABMwBQBJAAAAAwAAERYKKy4EBpQOBHIFFgBwKDUAAAozGQIF
BpoCBAaUKDYAAAoOBHMGAAAGfQoAAAQGF1gKBgMyzgJvEgAABgJvDwAABgIoEAAABio6Aig3AAAK
AgN9CwAABCqCAnsLAAAEbzgAAApvOQAACnIXFgBwbzoAAApvOwAACiqCAnsLAAAEbzgAAApvOQAA
CnIzFgBwbzoAAApvOwAACio6Aig3AAAKAgN9DAAABCqWAnsMAAAEbzwAAApySRYAcG89AAAKKD4A
AApvPwAACnQkAAABKpYCewwAAARvPAAACnJxFgBwbz0AAAooPgAACm8/AAAKdCQAAAEqlgJ7DAAA
BG88AAAKcqcWAHBvPQAACig+AAAKbz8AAAqlJgAAASqWAnsMAAAEbzwAAApywxYAcG89AAAKKD4A
AApvPwAACnQkAAABKpYCewwAAARvPAAACnLzFgBwbz0AAAooPgAACm8/AAAKdCQAAAEqlgJ7DAAA
BG88AAAKch0XAHBvPQAACig+AAAKbz8AAAp0JAAAASqWAnsMAAAEbzwAAApyRRcAcG89AAAKKD4A
AApvPwAACnQkAAABKpYCewwAAARvPAAACnJnFwBwbz0AAAooPgAACm8/AAAKdCQAAAEqlgJ7DAAA
BG88AAAKcoUXAHBvPQAACig+AAAKbz8AAAqlJgAAASqWAnsMAAAEbzwAAApysxcAcG89AAAKKD4A
AApvPwAACnQkAAABKpYCewwAAARvPAAACnLVFwBwbz0AAAooPgAACm8/AAAKdCQAAAEqHgIoNwAA
Ciqufg0AAAQtHnLzFwBw0AcAAAIoQAAACm9BAAAKc0IAAAqADQAABH4NAAAEKhp+DgAABCoeAoAO
AAAEKhp+DwAABCoeAihDAAAKKi5zJwAABoAPAAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMw
MzE5AAAAAAUAbAAAAJwIAAAjfgAACAkAAKALAAAjU3RyaW5ncwAAAACoFAAAaBgAACNVUwAQLQAA
EAAAACNHVUlEAAAAIC0AAHwCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAy
AAAACAAAAA8AAAAoAAAAEQAAAEMAAAAQAAAAAwAAAAUAAAAUAAAAFQAAAAEAAAAHAAAAAQAAAAAA
PQUBAAAAAAAGAPwDoAgGAJAEoAgGAEgDjQgPABQJAAAGAHUDGwYGAN8DGwYGAMADGwYGAHcEGwYG
ABwEGwYGADUEGwYGAIwDGwYGAKcD6gQKAFAEggIOAGYAGAgSAIgGcgoSAOYBcgoSAG0HcgoGANMG
qwUKAKYHggIWAJcHggIKAPwGggIKAKYKggIGAEoKqwUGACsDjQgGALcHwAgGAPAGBgYaAPsCJwUa
AFwDJwUaANsC8QUGABADoAgSANwB3QYSAKcCdQESAE0GcgoSAGkIcgoGABUCqwUGAAcFqwUGAFsH
qwUGAKgAqwUSAGAH3QYGAMMGqwUeAAEAQAgeACoAQAgeAE0AQAgOAH8AGAgOABoAGAhbACcLAAAO
AJAAGAgGAK4CqwUGACECqwUGAGILGwYAAAAArgAAAAAAAQABAAEAEAC+BQAAEAABAAEAAQAQAIkH
AABNAAgABgABABAAiAoAAFkACAAOAAEAEACwCQAAXQALABMAAQAQAHgJAABdAAwAFgAAABAAxwg9
CV0ADQAiAAABEACnCT0JdQAPACYAAQDdBzkBAQD5BzkBAQCWBj0BAQCrBj0BAQDCAUEBAQDJBUEB
AQAJCkEBBgCwCUQBBgB4CUgBBgCJB0wBAQCWClABAQCWClABEQCyBVQBEQDLAlgBEQD5AVwBUCAA
AAAAgQB7C2ABAQAoIQAAAADGAK4EBgAEAL4hAAAAAMYAuQQGAAQA6CEAAAAAxgAoCgYABADgJQAA
AACGGHYIBgAEAOglAAAAAIYYdgi9AAQA8yUAAAAAhgjOARAABwD9JQAAAACGCGUFZwEIABQmAAAA
AIYIcgIQAAkAHiYAAAAAhgh6BWcBCgA1JgAAAACGAFcLBgALAD0mAAAAAIYAUQoGAAsARSYAAAAA
hgBUCqIACwBNJgAAAACGGHYIBgALAG0mAAAAAMYB5wkGAAsAbyYAAAAAgQClAQYACwCMJgAAAADG
AAcLbAELAG0mAAAAAMYBKAoGAA8A4SYAAAAAhhh2CHgBDwDwJgAAAACGCPcA8QAQABEnAAAAAIYI
zgDxABAAMicAAAAAhhh2CHgBEABBJwAAAACGCC8BuQARAGcnAAAAAIYI1AW5ABEAjScAAAAAhggf
ATwAEQCzJwAAAACGCN0AuQARANknAAAAAIYItwC5ABEA/ycAAAAAhggJAbkAEQAlKAAAAACGCNMJ
uQARAEsoAAAAAIYI2AS5ABEAcSgAAAAAhggjCTwAEQCXKAAAAACGCPUJuQARAL0oAAAAAIYIRQK5
ABEA4ygAAAAAgxh2CAYAEQDrKAAAAACTCLMHfgERABcpAAAAAJMIswKDAREAHikAAAAAkwi/AogB
EQAmKQAAAACWCGYKjgESAC0pAAAAAIYYdggGABIANSkAAAAAkRh8CJMBEgAAAAEAuQEAAAIAFQoA
AAMAGAUAAAEArAcAAAIAggkAAAMACgcAAAEA0gQAAAEA0gQAAAEA0gQAAAEA0gQAAAEA7QkAAAIA
gwgAAAMAvAkAAAQACgcAAAEArAoAAAEArAoAAAEA0gQJAHYIAQARAHYIBgAZAHYICgApAHYIEAAx
AHYIEAA5AHYIEABBAHYIEABJAHYIEABRAHYIEABZAHYIEABhAHYIEABpAHYIBgDBAHYIBgDhAHYI
FQDxAHYIBgCBAHYIIAD5AKMCJwCBAMQJLgAJAcUENAD5AGsLPAAZAfMCBgCxAK4EBgBxAGQGQACx
ALkEBgBxAHYGRQAhAUMKYwAhARwFPAAhAWAKagAhATwKcQAhAfEBdwAhATwKfQAhATwKhAAhAYQL
igAhAUMKkAAhAUMKlgAhAZALigD5APQKAQCBAHsHnQA5ARwKogA5AQQFpgAhAQ4FqwA5AaABogAh
AUMKsQCRAAkCuQCZAHYIvQCZAKIFxwCZAJEFAQBBAXYIEACZAFcLBgCZAFEKBgCZAFQKogCxAHYI
BgCxAEUB0QCxAJYJ2AC5AHYIBgCxAIEB3gBJAS0G5ABRAVcC6gBZAccH8QCxAGwJ9gBhAZkF/ACx
AEILAwFpARMLCQGBATMCEAGBAV4LGQHJAHYIHwHpAHYIBgAuAAsAtwEuABMAwAEuABsA3wEuACMA
6AEuACsAEQIuADMAEQIuADsAEQIuAEMA6AEuAEsAFwIuAFMAEQIuAFsALgJDAGMAdgLjAGsAdgLh
AXsAdgJJAnMA3wFpAnMA3wEbAEoAzQADAAEABQAFAAYABwAHABIACAAUAAAA0gGXAQAAaQWbAQAA
dgKXAQAAfgWbAQAA+wCfAQAA0gCfAQAAMwGXAQAA2AWXAQAAIwGkAQAA4QCXAQAAuwCXAQAADQGX
AQAA1wmXAQAA3ASXAQAAJwmkAQAA+QmXAQAASQKXAQAAtweoAQAA0wKtAQAAagqyAQEABwADAAEA
CAAFAAEACQAHAAEACgAJAAIAFAALAAIAFQANAAIAFwAPAAIAGAARAAIAGQATAAIAGgAVAAIAGwAX
AAIAHAAZAAIAHQAbAAIAHgAdAAIAHwAfAAIAIAAhAAIAIQAjAAIAIwAlAAIAJAAnAAEAJQAnAAIA
JgApAASAAAABAAAAJBk9aAAAAAAAAFEBAAAEAAAAAAAAAAAAAAAnAZcBAAAAAAsAAAAAAAAAAAAA
ADABtgoAAAAACwAAAAAAAAAAAAAAMAEUBwAAAAAEAAAAAAAAAAAAAAAnAXUBAAAAAAsAAAAAAAAA
AAAAADAB0woAAAAABAAAAAAAAAAAAAAAJwGrBQAAAAALAAAAAAAAAAAAAAAwATcHAAAAAAAAAAAB
AAAA0QgAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1
bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURU
U0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRl
eHQxMDAASW50MzIAPE1vZHVsZT4AZ2V0X2NmZ3RwbENNUGxhdGZvcm1EQgBnZXRfUGxhdGZvcm1E
QgBnZXRfY2ZndHBsQ01EYXRhaGFuZGxlckRCAGdldF9EYXRhaGFuZGxlckRCAGdldF9jZmd0cGxD
TVByb2plY3REQgBnZXRfY2Znc2xhUnVuSUQAZ2V0X2NmZ3NsYUNvbXBvbmVudElEAEdldE91dHB1
dElEAFNDXzMzYWQwZmYyOTliNzQyNjY5YTA1MTZlZGY4NzYxZDJhAFN5c3RlbS5EYXRhAGdldF9D
b21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBSZWFkAE1hcmtPdXRwdXRzRmluaXNoZWQAc291cmNl
aWQAY29tcG9uZW50aWQAc2V0X2NvbXBhbnlpZABEYkNvbW1hbmQAU3FsQ29tbWFuZABSZXBsYWNl
AGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfdGhpc1RvcGljTmFtZQBHZXRSdW50aW1lQ29ubmVjdGlv
bkJ5TmFtZQBzZXRfY29tcGFueW5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUA
c2V0X0NvbW1hbmRUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAQWRkV2l0aFZhbHVlAHZhbHVlAGdldF90
aGlzTm9ybWFsaXplAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAFN1YnN0cmlu
ZwBtc2cAZ2V0X0xlbmd0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMzNhZDBmZjI5OWI3NDI2
NjlhMDUxNmVkZjg3NjFkMmEuZGxsAHNldF9jb21wYW55aWRfSXNOdWxsAHNldF9jb21wYW55bmFt
ZV9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2Ny
aXB0TWFpbgBkdGhWZXJzaW9uAGdldF9jZmdzbGFEYXRhaGFuZGxlclZlcnNpb24AU3lzdGVtLkNv
bmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X1J1
bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAEFjcXVpcmVD
b25uZWN0aW9uAFJlbGVhc2VDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24AbXlQbGF0Zm9ybUNvbm5l
Y3Rpb24AbXlEYXRhaGFuZGxlckNvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBT
eXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWlj
cm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1Bp
cGVsaW5lV3JhcABDaGFyAERiRGF0YVJlYWRlcgBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIA
T3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFu
YWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFnZXIAbXlQbGF0Zm9ybUNvbm5lY3Rpb25NYW5hZ2VyAG15
RGF0YWhhbmRsZXJDb25uZWN0aW9uTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBTcWxQ
YXJhbWV0ZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzMzYWQwZmYyOTli
NzQyNjY5YTA1MTZlZGY4NzYxZDJhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBnZXRfdGhpc051bWJlck9mQ29tcGFuaWVzAFNDXzMzYWQwZmYyOTliNzQyNjY5
YTA1MTZlZGY4NzYxZDJhLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNv
bHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBDb25uZWN0aW9ucwBCdWZmZXJz
AGdldF9QYXJhbWV0ZXJzAGdldF90aGlzQ29uc3RyYWludHMARmluaXNoT3V0cHV0cwBnZXRfdGhp
c1RvcGljQ29ycHVzAHRvcGljQ29ycHVzAHN0YXR1cwBnZXRfSGFzUm93cwBDcmVhdGVOZXdPdXRw
dXRSb3dzAENvbmNhdABGb3JtYXQAT2JqZWN0AFNldEVuZE9mUm93c2V0AFNwbGl0AGdldF9EZWZh
dWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABT
Y3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3Fs
U2VydmVyLlBpcGVsaW5lSG9zdABzZXRfQ29tbWFuZFRpbWVvdXQAUHJpbWVPdXRwdXQAR2V0VmFs
dWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29u
dGV4dABBZGRSb3cAZ2V0X0Fzc2VtYmx5AEV4ZWN1dGVOb25RdWVyeQBMb2dFbnRyeQBvcF9FcXVh
bGl0eQBvcF9JbmVxdWFsaXR5AAAAACFuAGwAaAAuAGwAbwBnAF8AYQBkAGQARQBuAHQAcgB5AAAV
QABjAG8AbQBwAG8AbgBlAG4AdAAAK0MAbwBtAHAAYQBuAHkAUgBlAHQAcgBpAGUAdgBhAGwALgBk
AHQAcwB4AAAZQABzAG8AdQByAGMAZQBfAHQAeQBwAGUAAA1TAEMAUgBJAFAAVAAAGUAAcwBvAHUA
cgBjAGUAXwBuAGEAbQBlAAAfVABvAHAAaQBjACAAUgBlAHQAcgBpAGUAdgBhAGwAABVAAHMAbwB1
AHIAYwBlAF8AaQBkAAARQABtAGUAcwBzAGEAZwBlAAAPQABhAGMAdABpAG8AbgAAD0UAWABFAEMA
VQBUAEUAAA9AAHMAdABhAHQAdQBzAAARUABSAE8ARwBSAEUAUwBTAAA5UgBlAHQAcgBpAGUAdgBp
AG4AZwAgAFsAewAwAH0AXQAgAGYAcgBvAG0AIABbAHsAMQB9AF0ALgAAAQAPIABXAEgARQBSAEUA
IAAACyAAQQBOAEQAIAAABSgAJwABAywAAAcnACwAJwABBScAKQABB2MAYgAuAAAJIABJAE4AIAAA
AyAAABNQAG8AcgB0AGYAbwBsAGkAbwAAgLcgAC8AIABjAGEAcwB0ACgAYwBhAHMAZQAgAHcAaABl
AG4AIABjAGIALgBbAG4AdQBtAGIAZQByAF8AbwBmAF8AcABhAHQAZQBuAHQAcwBdAD4AMAAgAHQA
aABlAG4AIABjAGIALgBbAG4AdQBtAGIAZQByAF8AbwBmAF8AcABhAHQAZQBuAHQAcwBdACAAZQBs
AHMAZQAgADEAIABlAG4AZAAgAGEAcwAgAHIAZQBhAGwAKQAgAAB1TgBvAHIAbQBhAGwAaQB6AGkA
bgBnACAAYgB5ACAAcABvAHIAdABmAG8AbABpAG8AOwAgAG8AbgBsAHkAIABhAHAAcABsAGkAYwBh
AGIAbABlACAAdABvACAAcABhAHQAZQBuAHQAIABzAGMAbwByAGUALgAAD1QATwBQACAAewAwAH0A
AA9QAGEAdABlAG4AdABzAAAPVwBlAGIAcwBpAHQAZQAAC1QAcgBhAGQAZQAAB1MAZQBjAACE01cA
SQBUAEgAIABwACAAQQBTACgACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAUwBFAEwARQBDAFQAIABwAGEAdABlAG4AdABfAGYAYQBtAGkAbAB5AF8AaQBkACwAcwBjAG8A
cgBlAF8AdgBhAGwAdQBlACAARgBSAE8ATQAgAHsAMQB9AC4AWwB1AGYAbgBfAHAAYQB0AGUAbgB0
AF8AdABlAHgAdABfAHQAbwBwAGkAYwBdACgAJwB7ADAAfQAnACkACgAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACkAIABTAEUATABFAEMAVAAgAHsAMwB9AAoAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMAYgAuAGIAdgBkAF8AaQBkACwAIABjAGIALgBjAG8A
bQBwAGEAbgB5AF8AbgBhAG0AZQAsACAAcwB1AG0AKABwAC4AcwBjAG8AcgBlAF8AdgBhAGwAdQBl
ACkAewA0AH0AIABhAHMAIABjAG8AbQBwAGEAbgB5AF8AcwBjAG8AcgBlAAoAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAHAAIABKAE8ASQBOAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgAHsAMQB9AC4AYwBvAG0AcABhAG4AeQBfAHAAYQB0AGUAbgB0AF8AZgBhAG0AaQBs
AHkAIABjAHAAZgAgAE8ATgAgAGMAcABmAC4AcABhAHQAZQBuAHQAXwBmAGEAbQBpAGwAeQBfAGkA
ZAAgAD0AIABwAC4AcABhAHQAZQBuAHQAXwBmAGEAbQBpAGwAeQBfAGkAZAAgAEoATwBJAE4ACgAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAewAxAH0ALgBjAG8AbQBwAGEA
bgB5AF8AYgBhAHMAaQBjACAAYwBiACAATwBOACAAYwBiAC4AYgB2AGQAXwBpAGQAIAA9ACAAYwBw
AGYALgBiAHYAZABfAGkAZAAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAewAyAH0A
CgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEcAUgBPAFUAUAAgAEIAWQAKACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABjAGIALgBiAHYAZABfAGkAZAAsACAA
YwBiAC4AYwBvAG0AcABhAG4AeQBfAG4AYQBtAGUALAAgAGMAYgAuAFsAbgB1AG0AYgBlAHIAXwBv
AGYAXwBwAGEAdABlAG4AdABzAF0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8A
UgBEAEUAUgAgAEIAWQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABj
AG8AbQBwAGEAbgB5AF8AcwBjAG8AcgBlACAARABFAFMAQwABhF1XAEkAVABIACAAcAAgAEEAUwAo
AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAA
dwBlAGIAcwBpAHQAZQAsAHMAYwBvAHIAZQBfAHYAYQBsAHUAZQAgAEYAUgBPAE0AIAB7ADEAfQAu
AFsAdQBmAG4AXwB3AGUAYgBfAHQAZQB4AHQAXwB0AG8AcABpAGMAXQAoACcAewAwAH0AJwApAAoA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAApACAAUwBFAEwARQBDAFQAIAB7ADMAfQAK
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABjAGIALgBiAHYAZABfAGkA
ZAAsACAAYwBiAC4AYwBvAG0AcABhAG4AeQBfAG4AYQBtAGUALAAgAHMAdQBtACgAcAAuAHMAYwBv
AHIAZQBfAHYAYQBsAHUAZQApACAAYQBzACAAYwBvAG0AcABhAG4AeQBfAHMAYwBvAHIAZQAKACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAKACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIABwACAASgBPAEkATgAKACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAB7ADEAfQAuAGMAbwBtAHAAYQBuAHkAXwB3AGUAYgBzAGkAdABl
ACAAYwBwAGYAIABPAE4AIABjAHAAZgAuAHcAZQBiAHMAaQB0AGUAIAA9ACAAcAAuAHcAZQBiAHMA
aQB0AGUAIABKAE8ASQBOAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
AHsAMQB9AC4AYwBvAG0AcABhAG4AeQBfAGIAYQBzAGkAYwAgAGMAYgAgAE8ATgAgAGMAYgAuAGIA
dgBkAF8AaQBkACAAPQAgAGMAcABmAC4AYwBvAG0AcABhAG4AeQBfAGkAZAAKACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAewAyAH0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgAEcAUgBPAFUAUAAgAEIAWQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIABjAGIALgBiAHYAZABfAGkAZAAsACAAYwBiAC4AYwBvAG0AcABhAG4AeQBfAG4AYQBtAGUA
CgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8AUgBEAEUAUgAgAEIAWQAKACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABjAG8AbQBwAGEAbgB5AF8AcwBjAG8A
cgBlACAARABFAFMAQwABg89XAEkAVABIACAAcAAgAEEAUwAoAAoAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAAYwBvAG0AcABhAG4AeQBfAGkAZAAs
AHMAYwBvAHIAZQBfAHYAYQBsAHUAZQAgAEYAUgBPAE0AIAB7ADEAfQAuAFsAdQBmAG4AXwBjAG8A
bQBwAGEAbgB5AF8AdABlAHgAdABfAHQAbwBwAGkAYwBdACgAJwB7ADAAfQAnACkACgAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACkAIABTAEUATABFAEMAVAAgAHsAMwB9AAoAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMAYgAuAGIAdgBkAF8AaQBkACwAIABj
AGIALgBjAG8AbQBwAGEAbgB5AF8AbgBhAG0AZQAsACAAcwB1AG0AKABwAC4AcwBjAG8AcgBlAF8A
dgBhAGwAdQBlACkAIABhAHMAIABjAG8AbQBwAGEAbgB5AF8AcwBjAG8AcgBlAAoAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgAHAAIABKAE8ASQBOAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAHsAMQB9AC4AYwBvAG0AcABhAG4AeQBfAGIAYQBzAGkAYwAgAGMAYgAgAE8A
TgAgAGMAYgAuAGIAdgBkAF8AaQBkACAAPQAgAHAALgBjAG8AbQBwAGEAbgB5AF8AaQBkAAoAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB7ADIAfQAKACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAARwBSAE8AVQBQACAAQgBZAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAGMAYgAuAGIAdgBkAF8AaQBkACwAIABjAGIALgBjAG8AbQBwAGEAbgB5AF8A
bgBhAG0AZQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBSAEQARQBSACAAQgBZ
AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMAbwBtAHAAYQBuAHkA
XwBzAGMAbwByAGUAIABEAEUAUwBDAAGDx1cASQBUAEgAIABwACAAQQBTACgACgAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIABjAG8AbQBwAGEAbgB5
AF8AaQBkACwAcwBjAG8AcgBlAF8AdgBhAGwAdQBlACAARgBSAE8ATQAgAHsAMQB9AC4AWwB1AGYA
bgBfAHMAZQBjAF8AdABlAHgAdABfAHQAbwBwAGkAYwBdACgAJwB7ADAAfQAnACkACgAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACkAIABTAEUATABFAEMAVAAgAHsAMwB9AAoAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMAYgAuAGIAdgBkAF8AaQBkACwAIABj
AGIALgBjAG8AbQBwAGEAbgB5AF8AbgBhAG0AZQAsACAAcwB1AG0AKABwAC4AcwBjAG8AcgBlAF8A
dgBhAGwAdQBlACkAIABhAHMAIABjAG8AbQBwAGEAbgB5AF8AcwBjAG8AcgBlAAoAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgAHAAIABKAE8ASQBOAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAHsAMQB9AC4AYwBvAG0AcABhAG4AeQBfAGIAYQBzAGkAYwAgAGMAYgAgAE8A
TgAgAGMAYgAuAGIAdgBkAF8AaQBkACAAPQAgAHAALgBjAG8AbQBwAGEAbgB5AF8AaQBkAAoAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB7ADIAfQAKACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAARwBSAE8AVQBQACAAQgBZAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAGMAYgAuAGIAdgBkAF8AaQBkACwAIABjAGIALgBjAG8AbQBwAGEAbgB5AF8A
bgBhAG0AZQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBSAEQARQBSACAAQgBZ
AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMAbwBtAHAAYQBuAHkA
XwBzAGMAbwByAGUAIABEAEUAUwBDAAEPRgBBAEkATABVAFIARQAAN0kAbgB2AGEAbABpAGQAIABU
AG8AcABpAGMAIABDAG8AcgBwAHUAcwAgAFsAewAwAH0AXQAuAABjUwB1AGMAYwBlAHMAcwBmAHUA
bABsAHkAIAByAGUAYQBkACAAewAwAH0AIABuAHUAbQBiAGUAcgAgAG8AZgAgAHIAbwB3AHMAIAAo
AHsAMQB9ACAAbwBuACAAewAyAH0AKQAAD1MAVQBDAEMARQBTAFMAAA9XAEEAUgBOAEkATgBHAABf
TgBvACAAcgBvAHcAcwAgAHcAZQByAGUAIABhAGQAZABlAGQAIABmAG8AcgAgAHEAdQBlAHIAeQAg
AFsAewAwAH0AXQAgACgAewAxAH0AIABvAG4AIAB7ADIAfQApAAAvRgBhAGkAbABlAGQAIABxAHUA
ZQByAHkAIAB3AGEAcwAgAFsAewAwAH0AXQAuAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIA
dAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBz
AHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkA
bgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAAG0QAYQB0AGEAaABhAG4AZABsAGUAcgBE
AEIAABVQAGwAYQB0AGYAbwByAG0ARABCAAAnYwBmAGcAXwBzAGwAYQBfAEMAbwBtAHAAbwBuAGUA
bgB0AEkARAAANWMAZgBnAF8AcwBsAGEAXwBEAGEAdABhAGgAYQBuAGQAbABlAHIAVgBlAHIAcwBp
AG8AbgAAG2MAZgBnAF8AcwBsAGEAXwBSAHUAbgBJAEQAAC9jAGYAZwBfAHQAcABsAF8AQwBNAEQA
YQB0AGEAaABhAG4AZABsAGUAcgBEAEIAACljAGYAZwBfAHQAcABsAF8AQwBNAFAAbABhAHQAZgBv
AHIAbQBEAEIAACdjAGYAZwBfAHQAcABsAF8AQwBNAFAAcgBvAGoAZQBjAHQARABCAAAhdABoAGkA
cwBfAEMAbwBuAHMAdAByAGEAaQBuAHQAcwAAHXQAaABpAHMAXwBOAG8AcgBtAGEAbABpAHoAZQAA
LXQAaABpAHMAXwBOAHUAbQBiAGUAcgBPAGYAQwBvAG0AcABhAG4AaQBlAHMAACF0AGgAaQBzAF8A
VABvAHAAaQBjAEMAbwByAHAAdQBzAAAddABoAGkAcwBfAFQAbwBwAGkAYwBOAGEAbQBlAABxUwBD
AF8AMwAzAGEAZAAwAGYAZgAyADkAOQBiADcANAAyADYANgA5AGEAMAA1ADEANgBlAGQAZgA4ADcA
NgAxAGQAMgBhAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAAJ
MSPta+qdTK//IndrYvj6AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFtBAcBEkEGIAIBDhI9BiAB
ARGAgQUgABKAhQcgAhKAiQ4cAyAACAQgARwcBCABARwYBxESRQ4ODg4OHQ4ODggdDggOEkEIDhJJ
BgADDg4cHAYgAR0OHQMFAAIODg4FIAIODg4GAAMODg4OBQABDh0OBQACAg4OBQACDg4cBgACDg4d
HAQgABJFAyAAAgQgAQ4IBSACDggIBwAEDg4cHBwDIAAOCSADARJRHQgSVQUgAgEIHAMHAQgGAAII
ElUOBSABHQgIBSAAEoClBSAAEoCpBiABEoCtDgQgABI5BSAAEoCxBiABEoC1HAUAABKAuQYgARwS
gL0IAAESgMERgMUFIAASgMkHIAIBDhKAyQi3elxWGTTgiQiJhF3NgIDMkQMGEjkDBhI9AgYOAwYS
FAMGEhgDBhIMAwYSWQMGEmUDBhJpAwYSIAYgAwEODg4EIAEBAgsgBAEIHQgdElESVQUgAQESWQQA
ABJlBAAAEmkFAAEBEmkEAAASIAMAAAEDKAAOAygAAgQoABI5AygACAQIABJlBAgAEmkECAASIAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMzNh
ZDBmZjI5OWI3NDI2NjlhMDUxNmVkZjg3NjFkMmEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAx
NQAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRAuTkVUIEZyYW1ld29yayA0BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMBZAAAAAAAAAAAAANpZAAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADMWQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAA
AAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoEAAAAAAAAAAAA
ABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQA9aCQZ
AAABAD1oJBk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJ
AG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAAAQBTAHQA
cgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBD
AG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAA
cAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADMAMwBhAGQAMABm
AGYAMgA5ADkAYgA3ADQAMgA2ADYAOQBhADAANQAxADYAZQBkAGYAOAA3ADYAMQBkADIAYQAAAD4A
DwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADQAMwA2AC4AMgA2ADYAOAA1
AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADMAMwBhAGQAMABmAGYA
MgA5ADkAYgA3ADQAMgA2ADYAOQBhADAANQAxADYAZQBkAGYAOAA3ADYAMQBkADIAYQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMwAzAGEA
ZAAwAGYAZgAyADkAOQBiADcANAAyADYANgA5AGEAMAA1ADEANgBlAGQAZgA4ADcANgAxAGQAMgBh
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADMAMwBhAGQA
MABmAGYAMgA5ADkAYgA3ADQAMgA2ADYAOQBhADAANQAxADYAZQBkAGYAOAA3ADYAMQBkADIAYQAA
AEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA0ADMANgAuADIA
NgA2ADgANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANgA0ADMANgAuADIANgA2ADgANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAADsOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_33ad0ff299b742669a0516edf8761d2a</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerVersion,User::cfg_sla_RunID,User::cfg_tpl_CMDatahandlerDB,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_CMProjectDB,User::this_Constraints,User::this_Normalize,User::this_NumberOfCompanies,User::this_TopicCorpus,User::this_TopicName</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">2374c6a40745afb5381752c7d660bf77</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">fb84cc24f2816845d75dba30c9320a31dc87aae4</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Connections[DatahandlerDB]"
                          connectionManagerID="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[DatahandlerDB - ADO.NET]"
                          name="DatahandlerDB" />
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Connections[PlatformDB]"
                          connectionManagerID="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          connectionManagerRefId="Package.ConnectionManagers[PlatformDB - ADO.NET]"
                          name="PlatformDB" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Outputs[Output 0]"
                          hasSideEffects="true"
                          name="Output 0">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Outputs[Output 0].Columns[company_id]"
                              dataType="wstr"
                              length="50"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Outputs[Output 0].Columns[company_id]"
                              name="company_id" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Outputs[Output 0].Columns[company_name]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Outputs[Output 0].Columns[company_name]"
                              name="company_name" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Write to company longlist"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[company_long_list]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[ProjectDB]"
                          connectionManagerRefId="Package.ConnectionManagers[ProjectDB]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input].Columns[company_id]"
                              cachedDataType="wstr"
                              cachedLength="50"
                              cachedName="company_id"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_id]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Outputs[Output 0].Columns[company_id]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input].Columns[this_RetrievalLabel]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="this_RetrievalLabel"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[retrieval_key]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Output].Columns[this_RetrievalLabel]" />
                            <inputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input].Columns[CompanyName]"
                              cachedDataType="wstr"
                              cachedLength="255"
                              cachedName="CompanyName"
                              externalMetadataColumnId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_name]"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Output].Columns[CompanyName]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[row_i]"
                              dataType="i4"
                              name="row_i" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_id]"
                              dataType="wstr"
                              length="50"
                              name="company_id" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[match]"
                              dataType="r4"
                              name="match" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[company_name]"
                              dataType="wstr"
                              length="255"
                              name="company_name" />
                            <externalMetadataColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input].ExternalColumns[retrieval_key]"
                              dataType="wstr"
                              length="50"
                              name="retrieval_key" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Topic Score.Paths[Derived Column Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Topic Score\Row Count.Inputs[Row Count Input 1]"
                      name="Derived Column Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Topic Score.Paths[Lookup No Match Output]"
                      endId="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist.Inputs[OLE DB Destination Input]"
                      name="Lookup No Match Output"
                      startId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Outputs[Lookup No Match Output]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Topic Score.Paths[Output 0]"
                      endId="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column.Inputs[Derived Column Input]"
                      name="Output 0"
                      startId="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval.Outputs[Output 0]" />
                    <path
                      refId="Package\Execute Feature\Foreach Loop Container\Topic Score.Paths[Row Count Output 1]"
                      endId="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup.Inputs[Lookup Input]"
                      name="Row Count Output 1"
                      startId="Package\Execute Feature\Foreach Loop Container\Topic Score\Row Count.Outputs[Row Count Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{0086CC72-409B-4EDE-BEBC-7C0AE09EED51}"
              DTS:EvalOp="1"
              DTS:Expression="@[User::this_RetrievalType]==&quot;CompanyList&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Expression Task"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Company List" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{B908B154-1CA4-4A8A-91DE-92EE2166661C}"
              DTS:EvalOp="1"
              DTS:Expression="@[User::this_RetrievalType]==&quot;PatentClassProfile&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Expression Task"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Patent Class Profile" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{F22A99FC-FE24-4D34-B6F8-1A922B608844}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_RetrievalType]==&quot;CompanyTextBagOfWords&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Expression Task"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Bag of Words" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{1D0EEAFB-194C-42C2-8302-416CE08E0FCF}"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Script Task"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Expression Task" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{D191BC69-0E91-4DF8-AAAF-DAB76EE20100}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_RetrievalType]==&quot;TopicScore&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Expression Task"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Topic Score" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{188D36A8-1BDF-4447-ACCE-41980640FDAA}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::this_RetrievalType]==&quot;BasicConstraints&quot;"
              DTS:From="Package\Execute Feature\Foreach Loop Container\Expression Task"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Execute Feature\Foreach Loop Container\Basic Constraints" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{29DB90EA-3CCA-4B73-8EA3-09AA5E58139E}"
              DTS:ObjectName="{29DB90EA-3CCA-4B73-8EA3-09AA5E58139E}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::this_RetrievalParam" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Execute Feature.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{584552F2-3276-47E9-8F41-ADF74816ED5F}"
          DTS:From="Package\Execute Feature\Foreach Loop Container"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Execute Feature\Delete duplicates" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize - specific"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{135C3F88-D40E-45ED-8380-EAC8BC0479A5}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize - specific">
      <DTS:Variables />
      <DTS:Executables />
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize - template"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{69B47144-88C3-4405-9108-C2EB725E9302}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize - template">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Get server configuration"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{AE982227-B473-4741-93BA-2C7548C957D8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get server configuration"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
              SQLTask:SqlStatementSource="select @@ServerName AS DBServer, DB_NAME() AS DBName"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="DBServer"
                SQLTask:DtsVariableName="User::cfg_tpl_DBServer" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="DBName"
                SQLTask:DtsVariableName="User::cfg_tpl_DBName" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Initialize package configuration"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{ED93F9E1-6865-496B-A1C1-BE5A70B402F7}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Initialize package configuration"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_9560e13f3ccd474984696163ed602485"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName"
              ReadWriteVariables="User::cfg_pkg_RetrievalParams">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_9560e13f3ccd474984696163ed602485.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1ABA36DA-5BA4-4AF6-9BF4-505AAF9ABD43}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9560e13f3ccd474984696163ed602485</RootNamespace>
    <AssemblyName>ST_9560e13f3ccd474984696163ed602485</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>C:\Users\pbaljon\Documents\source\PRV\packages\Newtonsoft.Json.7.0.1\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig.Params;
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Reflection;
using System.Windows.Forms;
#endregion

namespace ST_9560e13f3ccd474984696163ed602485
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        public void Main()
        {
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetupLogger();

                deloitte.SetCollectionForForEachLoopToVar<RetrievalParam>(deloitte.PackageConfig.RetrievalParams, "cfg_pkg_RetrievalParams");
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_9560e13f3ccd474984696163ed602485</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_9560e13f3ccd474984696163ed602485</msb:DisplayName>
		<msb:ProjectId>{03AACEC8-9E74-49AC-BCEE-CECD33245B34}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_9560e13f3ccd474984696163ed602485.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="packages.config"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="7.0.1" targetFramework="net40" />
</packages>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Settings.get_Default():ST_9560e13f3ccd474984696163ed602485.Properties.Sett" +
    "ings")]

namespace ST_9560e13f3ccd474984696163ed602485.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9560e13f3ccd474984696163ed602485")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9560e13f3ccd474984696163ed602485")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9560e13f3ccd474984696163ed602485.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9560e13f3ccd474984696163ed602485.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9560e13f3ccd474984696163ed602485.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_9560e13f3ccd474984696163ed602485.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAlV1VYAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAHi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMQuAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
LwAAAAAAAEgAAAACAAUA4CEAAOQMAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwBCAAAAAgAAEQIoFgAACnMXAAAKCgZvGAAACgYGbxkAAApvGgAA
CnJzAABwbwEAACsm3goGLAYGbxwAAArcAigWAAAKFm8dAAAKKgAAARAAAAIADAAfKwAKAAAAAB4C
KB4AAAoqAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADkAwAAI34AAFAEAABkBgAAI1N0cmluZ3MAAAAAtAoAAKQAAAAjVVMAWAsAABAAAAAjR1VJRAAA
AGgLAAB8AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJCwAAAPolMwAWAAABAAAAIAAAAAUAAAAGAAAA
CQAAAAEAAAAeAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAEAAAAA
AAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnAC
BgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3ACBgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCv
A28DBgDgA80DBgD9A7oABgACBLoABgAmBHACCgBSBDwECgBrBDwEBgCABG8DDgCiBBQBDgDEBBQB
EgD5BN4EEgA+BRQFBgB6BV8FEgC5BYgFBgD9BboAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQAB
AAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEArAEXABEA
9gE5AAYGHwJHAFaAJwJKAFaALwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACT
CNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY
mwSJAAIAvCAAAAAAhgAaAhsAAgAcIQAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFY
AFEAvAFYAFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkA
vAEbAAkAvAEbAKEAFARiAKEALwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA1gSN
AOEAvAGbAOEACAUbAOEATQWhAOkAyAWmAOEA3AWvAAEBCQYbANkAEQZdABkAvAEbAAgAFABOAAgA
GABTACkAkwCAAC4AGwA2AS4AIwA2AS4AYwBcAS4ACwDFAC4AEwANAS4AMwANAS4AKwA2AS4AOwA8
AS4AQwA2AS4AWwBTAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAHUAwAACAAEAAwADAAAAbwEvAAAA
7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAEBfMQwAAAAAAAH8AAAAE
AAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAA
AAADAAAAAAAAAAAAAACSAN4EAAAAAAAAAAABAAAAIAYAAAUABAA3ALsAAAAAPE1vZHVsZT4AU1Rf
OTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYzZWQ2MDI0ODUuZGxsAFJlc291cmNlcwBTVF85NTYwZTEz
ZjNjY2Q0NzQ5ODQ2OTYxNjNlZDYwMjQ4NS5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4A
U1RfOTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYzZWQ2MDI0ODUAU2NyaXB0UmVzdWx0cwBtc2Nvcmxp
YgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3Rl
bS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0
aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZh
dWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlv
bgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lv
bkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVs
YXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRp
YWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMARGVsb2l0dGUuUGlwZWxpbmVGcmFt
ZXdvcmsARGVsb2l0dGVTY3JpcHQAU2V0dXBMb2dnZXIARGVsb2l0dGUuUGlwZWxpbmVGcmFtZXdv
cmsuUGxhdGZvcm1Db25maWcAQ29tcG9uZW50UGFyYW0AZ2V0X1BhY2thZ2VDb25maWcAU3lzdGVt
LkNvbGxlY3Rpb25zLkdlbmVyaWMASUVudW1lcmFibGVgMQBEZWxvaXR0ZS5QaXBlbGluZUZyYW1l
d29yay5QbGF0Zm9ybUNvbmZpZy5QYXJhbXMAUmV0cmlldmFsUGFyYW0AZ2V0X1JldHJpZXZhbFBh
cmFtcwBTZXRDb2xsZWN0aW9uRm9yRm9yRWFjaExvb3BUb1ZhcgBJRGlzcG9zYWJsZQBEaXNwb3Nl
AHNldF9UYXNrUmVzdWx0AFNUXzk1NjBlMTNmM2NjZDQ3NDk4NDY5NjE2M2VkNjAyNDg1LlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwA5ADUANgAwAGUAMQAzAGYAMwBjAGMA
ZAA0ADcANAA5ADgANAA2ADkANgAxADYAMwBlAGQANgAwADIANAA4ADUALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAC9jAGYAZwBfAHAAawBnAF8AUgBlAHQAcgBpAGUA
dgBhAGwAUABhAHIAYQBtAHMAAADapc0gcO2tSK2mTw2jXyIlAAi3elxWGTTgiQiJhF3NgIDMkQMG
EhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEU
BAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAA
AAADAAABBCAAEm0I+QI6Ng3oSwwFIAEBEm0EIAASdQggABUSeQESfQswAQICFRJ5AR4ADgQKARJ9
BAcBEnFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfOTU2MGUxM2YzY2NkNDc0OTg0Njk2MTYzZWQ2MDI0
ODUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQDsLgAAAAAAAAAAAAAOLwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AC8AAAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDMQxAXAAABAMxDEBc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AOQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQANgA5ADYAMQA2ADMAZQBkADYA
MAAyADQAOAA1AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQAw
ADQALgAxADcAMwA1ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
OQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQANgA5ADYAMQA2ADMAZQBkADYAMAAy
ADQAOAA1AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AOQA1ADYAMABlADEAMwBmADMAYwBjAGQANAA3ADQAOQA4ADQA
NgA5ADYAMQA2ADMAZQBkADYAMAAyADQAOAA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADkANQA2ADAAZQAxADMAZgAzAGMAYwBkADQANwA0ADkAOAA0ADYA
OQA2ADEANgAzAGUAZAA2ADAAMgA0ADgANQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA5ADAANAAuADEANwAzADUANgAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADAANAAuADEANwAzADUANgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialize - template\Set configuration through Invocation Handler"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5da70f18-38f4-4821-b78f-675f8bb0c9a3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set configuration through Invocation Handler"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
              SQLTask:SqlStatementSource="select value from ivh.run_paramvalue where run_id=? and parameter='api_config' "
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::cfg_tpl_jsonConfiguration" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::cfg_sla_RunID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{1EE95288-4657-41E9-B1D4-18FE5E6E92DC}"
          DTS:From="Package\Initialize - template\Get server configuration"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Initialize - template\Set configuration through Invocation Handler" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialize - template.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{39A61DDF-9D6F-404A-A6B5-F953DB933059}"
          DTS:From="Package\Initialize - template\Set configuration through Invocation Handler"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Initialize - template\Initialize package configuration" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize SLA configuration"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DisableEventHandlers="True"
      DTS:DTSID="{FC6A7598-B253-436F-AD25-1913E018D18A}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize SLA configuration"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{CB5C1A99-A45B-45EB-8878-C09B347EE7C3}"
          DTS:EventID="1153301676"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{BBB8BE84-FFEB-4BA0-82C7-692A6A373B28}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]\Log SLA property"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{681e51a6-8f9c-4b43-b568-95bc88ffdf0e}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log SLA property"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::cfg_sla_RunID]  +  ": SLA key [ComponentID] was set with value \"" +  @[User::cfg_sla_ComponentID] + "\". '"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
                  SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_CompanyRetrieval',@source_type='PCK',@source_name='CompanyRetrieval.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run -1: SLA key [ComponentID] was set with value &quot;&quot;. '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_7c98d941be6340a4afa5b23346e85fc7"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,User::cfg_tpl_jsonConfiguration,User::cfg_tpl_jsonSLA,System::PackageName"
          ReadWriteVariables="User::cfg_sla_ComponentID,User::cfg_sla_DatahandlerCatalog,User::cfg_sla_DatahandlerDataSource,User::cfg_sla_DatahandlerVersion,User::cfg_sla_PlatformCatalog,User::cfg_sla_PlatformDataSource,User::cfg_sla_PollEvery,User::cfg_sla_ProjectCatalog,User::cfg_sla_ProjectDataSource,User::cfg_sla_RunID,User::cfg_sla_TimeOutAfter">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="7.0.1" targetFramework="net40" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Settings.get_Default():ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Sett" +
    "ings")]

namespace ST_7c98d941be6340a4afa5b23346e85fc7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Data;
using System.Collections;
using System.Reflection;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using Deloitte.PipelineFramework.PlatformConfig;

#endregion

namespace ST_7c98d941be6340a4afa5b23346e85fc7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        public void Main()
        {
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.SetNonNullUserVariablesFor<SLA>("User::cfg_tpl_jsonSLA", "cfg_sla_");
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7c98d941be6340a4afa5b23346e85fc7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7c98d941be6340a4afa5b23346e85fc7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_7c98d941be6340a4afa5b23346e85fc7</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_7c98d941be6340a4afa5b23346e85fc7</msb:DisplayName>
		<msb:ProjectId>{2FE85E53-2960-4E7B-AF1B-D38BAF1E3336}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_7c98d941be6340a4afa5b23346e85fc7.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7c98d941be6340a4afa5b23346e85fc7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7c98d941be6340a4afa5b23346e85fc7")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_7c98d941be6340a4afa5b23346e85fc7.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9CD66199-FB02-4B5C-9A30-C7FB7ED47B51}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7c98d941be6340a4afa5b23346e85fc7</RootNamespace>
    <AssemblyName>ST_7c98d941be6340a4afa5b23346e85fc7</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>C:\Users\pbaljon\Documents\source\PRV\packages\Newtonsoft.Json.7.0.1\lib\net40\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_7c98d941be6340a4afa5b23346e85fc7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACo02VYAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAPi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOgtAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
LgAAAAAAAEgAAAACAAUA0CEAABgMAAABAAAAAAAAABghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwA1AAAAAgAAEQIoFgAACnMXAAAKCgZycwAAcHKfAABwbwEAACve
CgYsBgZvGQAACtwCKBYAAAoWbxoAAAoqAAAAARAAAAIADAASHgAKAAAAAB4CKBsAAAoqtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMgDAAAjfgAANAQAALgF
AAAjU3RyaW5ncwAAAADsCQAAtAAAACNVUwCgCgAAEAAAACNHVUlEAAAAsAoAAGgBAAAjQmxvYgAA
AAAAAAACAAABVx2iAQkLAAAA+iUzABYAAAEAAAAeAAAABQAAAAYAAAAJAAAAAQAAABsAAAACAAAA
DwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAK
AN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUC
cAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAG
AAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAPkE3gQSAE0FIwUGAFEF
ugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAI
AAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAA
gxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACW
CAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACABAhAAAAAIYY
vAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8
AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4A
uQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A4QC8AZsA4QAIBaEA8QBdBRsA2QBlBV0AGQC8
ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbACMBLgAjACMBLgBjAEkBLgALALIALgATAPoALgAzAPoA
LgArACMBLgA7ACkBLgBDACMBLgBbAEABQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCtAAIAAQAD
AAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAATFx05
AAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAA
AAAAAAAKAPUAAAAAAAMAAAAAAAAAAAAAAJIA3gQAAAAAAAAAAAEAAAB0BQAABQAEADEAqAAAAAAA
ADxNb2R1bGU+AFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2ZTg1ZmM3LmRsbABSZXNvdXJj
ZXMAU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTViMjMzNDZlODVmYzcuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2ZTg1ZmM3AFNjcmlwdFJl
c3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jl
c291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0
YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lz
dGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBB
c3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5
AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRU
YXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAERlbG9pdHRl
LlBpcGVsaW5lRnJhbWV3b3JrAERlbG9pdHRlU2NyaXB0AFNldE5vbk51bGxVc2VyVmFyaWFibGVz
Rm9yAERlbG9pdHRlLlBpcGVsaW5lRnJhbWV3b3JrLlBsYXRmb3JtQ29uZmlnAFNMQQBJRGlzcG9z
YWJsZQBEaXNwb3NlAHNldF9UYXNrUmVzdWx0AFNUXzdjOThkOTQxYmU2MzQwYTRhZmE1YjIzMzQ2
ZTg1ZmM3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwA3AGMAOQA4AGQA
OQA0ADEAYgBlADYAMwA0ADAAYQA0AGEAZgBhADUAYgAyADMAMwA0ADYAZQA4ADUAZgBjADcALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACtVAHMAZQByADoAOgBjAGYA
ZwBfAHQAcABsAF8AagBzAG8AbgBTAEwAQQAAEWMAZgBnAF8AcwBsAGEAXwAAAAAAfa+WXyncsEyP
33d0C77NiAAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgA
EhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQg
ABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtCPkCOjYN6EsMBSABARJtBjAB
AgEODgQKARJ1BAcBEnFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfN2M5OGQ5NDFiZTYzNDBhNGFmYTVi
MjMzNDZlODVmYzcAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzARAuAAAAAAAAAAAAAC4uAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAgLgAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAdORMXAAABAB05Exc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8ANwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYAYQA1AGIAMgAzADMANAA2AGUA
OAA1AGYAYwA3AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOQAw
ADcALgAxADQANgAyADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYAYQA1AGIAMgAzADMANAA2AGUAOAA1
AGYAYwA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8ANwBjADkAOABkADkANAAxAGIAZQA2ADMANAAwAGEANABhAGYA
YQA1AGIAMgAzADMANAA2AGUAOAA1AGYAYwA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADcAYwA5ADgAZAA5ADQAMQBiAGUANgAzADQAMABhADQAYQBmAGEA
NQBiADIAMwAzADQANgBlADgANQBmAGMANwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA5ADAANwAuADEANAA2ADIAMQAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADAANwAuADEANAA2ADIAMQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABAPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{5bd2f707-e3ca-48ad-a399-dcadca6cc539}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\NotifySsisApi"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{11e6c3c5-f7a4-4c11-8988-9f1e7ca49ba0}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="NotifySsisApi"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_f2ac02d68cb64d6a8a93138bfe503550"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_f2ac02d68cb64d6a8a93138bfe503550.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{CED7755E-802E-4832-8212-AE5EFAE0331F}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_065500ea46124711b2237a3a9fbb2b8c</RootNamespace><AssemblyName>ST_f2ac02d68cb64d6a8a93138bfe503550</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL"><SpecificVersion>False</SpecificVersion><HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath></Reference><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using System.Collections;
using System.Collections.Generic;
using Deloitte.PipelineFramework.PlatformConfig;
#endregion

namespace ST_065500ea46124711b2237a3a9fbb2b8c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.UpdateApi(
                    code: (int)DeloitteScript.UpdateCodes.ComponentFinished,
                    message: deloitte.PackageName
                );
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_065500ea46124711b2237a3a9fbb2b8c</msb:CodeName>
		<msb:DisplayName>ST_065500ea46124711b2237a3a9fbb2b8c</msb:DisplayName>
		<msb:ProjectId>{C8A952E6-277A-4655-8AE6-661FAAD948D7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_f2ac02d68cb64d6a8a93138bfe503550.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Settings.get_Default():ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Sett" +
    "ings")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_5a8f0c800bbc4d30a244fbdc266024b7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMMO4VYAAAAAAAAAAOAAAiELAQsAAA4AAAAIAAAAAAAA7i0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJQtAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
LQAAAAAAAEgAAAACAAUA0CEAAMQLAAABAAAAAAAAABghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwA2AAAAAgAAEQIoFgAACnMXAAAKCgYg6AMAAAZvGAAACm8ZAAAK
3goGLAYGbxoAAArcAigWAAAKFm8bAAAKKgAAARAAAAIADAATHwAKAAAAAB4CKBwAAAoqtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMADAAAjfgAALAQAAKwF
AAAjU3RyaW5ncwAAAADYCQAAdAAAACNVUwBMCgAAEAAAACNHVUlEAAAAXAoAAGgBAAAjQmxvYgAA
AAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAdAAAABQAAAAYAAAAJAAAAAQAAABwAAAACAAAA
DwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDI
AA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA
7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNvAwYABATxAwYAIQS6AAYAJgS6
AAYASgRwAgoAdgRgBAoAjwRgBAYApARvAw4AxgQUAQ4A6AQUARIAHQUCBQYARgW6AAAAAAABAAAA
AAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAAR
AAQACgARAH8BEwARAKwBFwARAPYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwBGwABAFgg
AAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAA
AAAAhhi8ARsAAgCnIAAAAACRGL8EiQACALwgAAAAAIYAGgIbAAIAECEAAAAAhhi8ARsAAgAAAAEA
NwI5ALwBWABBALwBWABJALwBWABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwBWACB
ALwBWACJALwBXQCRALwBGwCZALwBGwAJALwBGwChADgEYgChAFMEaQApALwBbgC5ALwBegDJALwB
GwARALwBGwDRALwBGwAZAPoEjQDhALwBmwDhACwFoQDhADwFpQDpAFIFGwDZAFoFXQAZALwBGwAI
ABQATgAIABgAUwApAJMAgAAuABsAIQEuACMAIQEuAGMARwEuAAsAsAAuABMA+AAuADMA+AAuACsA
IQEuADsAJwEuAEMAIQEuAFsAPgFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1AKsAAgABAAMAAwAA
AG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAABkX6TEAAAAA
AADNAwAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAA
AAoA9QAAAAAAAwAAAAAAAAAAAAAAkgACBQAAAAAAAAAAAQAAAGkFAAAFAAQAAAAAAAA8TW9kdWxl
PgBTVF81YThmMGM4MDBiYmM0ZDMwYTI0NGZiZGMyNjYwMjRiNy5kbGwAUmVzb3VyY2VzAFNUXzA2
NTUwMGVhNDYxMjQ3MTFiMjIzN2EzYTlmYmIyYjhjLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0
TWFpbgBTVF8wNjU1MDBlYTQ2MTI0NzExYjIyMzdhM2E5ZmJiMmI4YwBTY3JpcHRSZXN1bHRzAG1z
Y29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0A
U3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZs
ZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlW
ZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF81
YThmMGM4MDBiYmM0ZDMwYTI0NGZiZGMyNjYwMjRiNwBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0
T2JqZWN0TW9kZWwAZ2V0X0R0cwBEZWxvaXR0ZS5QaXBlbGluZUZyYW1ld29yawBEZWxvaXR0ZVNj
cmlwdABnZXRfUGFja2FnZU5hbWUAVXBkYXRlQXBpAElEaXNwb3NhYmxlAERpc3Bvc2UAc2V0X1Rh
c2tSZXN1bHQAU1RfMDY1NTAwZWE0NjEyNDcxMWIyMjM3YTNhOWZiYjJiOGMuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAABxUwBUAF8AMAA2ADUANQAwADAAZQBhADQANgAxADIANAA3ADEA
MQBiADIAMgAzADcAYQAzAGEAOQBmAGIAYgAyAGIAOABjAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAApVd47LWlJkq6FdhOV9/DmQAIt3pcVhk04IkIiYRdzYCAzJED
BhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYR
FAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAA
AAAAAwAAAQQgABJtCPkCOjYN6EsMBSABARJtAyAADgUgAgEIDgQHARJxRwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
KAEAI1NUXzA2NTUwMGVhNDYxMjQ3MTFiMjIzN2EzYTlmYmIyYjhjAAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAALwt
AAAAAAAAAAAAAN4tAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQLQAAAAAAAAAAAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEA6TEZFwAAAQDpMRkXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAw
ADAAMAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADAANgA1ADUAMAAwAGUAYQA0ADYAMQAyADQANwAxADEAYgAyADIAMwA3AGEAMwBhADkAZgBi
AGIAMgBiADgAYwAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADkA
MQAzAC4AMQAyADcANwA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADUAYQA4AGYAMABjADgAMAAwAGIAYgBjADQAZAAzADAAYQAyADQANABmAGIAZABjADIANgA2ADAA
MgA0AGIANwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYA
aQBsAGUAbgBhAG0AZQAAAFMAVABfADUAYQA4AGYAMABjADgAMAAwAGIAYgBjADQAZAAzADAAYQAy
ADQANABmAGIAZABjADIANgA2ADAAMgA0AGIANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMA
dABOAGEAbQBlAAAAAABTAFQAXwAwADYANQA1ADAAMABlAGEANAA2ADEAMgA0ADcAMQAxAGIAMgAy
ADMANwBhADMAYQA5AGYAYgBiADIAYgA4AGMAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADUAOQAxADMALgAxADIANwA3ADcAAAAAAEgADwABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOQAxADMALgAxADIANwA3ADcAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAA8D0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container 1"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{b2d99e06-2f4e-40cc-aad6-7420b6836f3b}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container 1">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container 1\NotifySsisApi"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{4db21ffe-2092-47cd-a724-ae807197475d}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="NotifySsisApi"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_aa0915f8b5024f92a62e64b2a983a49e"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::cfg_tpl_CMPlatformDB,User::cfg_tpl_jsonConfiguration,System::PackageName">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Settings.get_Default():ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Sett" +
    "ings")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Deloitte.PipelineFramework;
using System.Collections;
using System.Collections.Generic;
using Deloitte.PipelineFramework.PlatformConfig;
#endregion

namespace ST_065500ea46124711b2237a3a9fbb2b8c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            using (var deloitte = new DeloitteScript(Dts))
            {
                deloitte.UpdateApi(
                    code: (int)DeloitteScript.UpdateCodes.ComponentFinished,
                    message: deloitte.PackageName
                );
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_aa0915f8b5024f92a62e64b2a983a49e.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{CED7755E-802E-4832-8212-AE5EFAE0331F}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_065500ea46124711b2237a3a9fbb2b8c</RootNamespace><AssemblyName>ST_aa0915f8b5024f92a62e64b2a983a49e</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="Deloitte.PipelineFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=f9023a360de84b0c, processorArchitecture=MSIL"><SpecificVersion>False</SpecificVersion><HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\Deloitte.PipelineFramework\v4.0_3.0.0.0__f9023a360de84b0c\Deloitte.PipelineFramework.dll</HintPath></Reference><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_065500ea46124711b2237a3a9fbb2b8c</msb:CodeName>
		<msb:DisplayName>ST_065500ea46124711b2237a3a9fbb2b8c</msb:DisplayName>
		<msb:ProjectId>{C8A952E6-277A-4655-8AE6-661FAAD948D7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_aa0915f8b5024f92a62e64b2a983a49e.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_065500ea46124711b2237a3a9fbb2b8c")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_065500ea46124711b2237a3a9fbb2b8c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_065500ea46124711b2237a3a9fbb2b8c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_5a8f0c800bbc4d30a244fbdc266024b7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMMO4VYAAAAAAAAAAOAAAiELAQsAAA4AAAAIAAAAAAAA7i0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJQtAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
LQAAAAAAAEgAAAACAAUA0CEAAMQLAAABAAAAAAAAABghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwA2AAAAAgAAEQIoFgAACnMXAAAKCgYg6AMAAAZvGAAACm8ZAAAK
3goGLAYGbxoAAArcAigWAAAKFm8bAAAKKgAAARAAAAIADAATHwAKAAAAAB4CKBwAAAoqtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMADAAAjfgAALAQAAKwF
AAAjU3RyaW5ncwAAAADYCQAAdAAAACNVUwBMCgAAEAAAACNHVUlEAAAAXAoAAGgBAAAjQmxvYgAA
AAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAdAAAABQAAAAYAAAAJAAAAAQAAABwAAAACAAAA
DwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDI
AA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA
7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNvAwYABATxAwYAIQS6AAYAJgS6
AAYASgRwAgoAdgRgBAoAjwRgBAYApARvAw4AxgQUAQ4A6AQUARIAHQUCBQYARgW6AAAAAAABAAAA
AAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAAR
AAQACgARAH8BEwARAKwBFwARAPYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwBGwABAFgg
AAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAA
AAAAhhi8ARsAAgCnIAAAAACRGL8EiQACALwgAAAAAIYAGgIbAAIAECEAAAAAhhi8ARsAAgAAAAEA
NwI5ALwBWABBALwBWABJALwBWABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwBWACB
ALwBWACJALwBXQCRALwBGwCZALwBGwAJALwBGwChADgEYgChAFMEaQApALwBbgC5ALwBegDJALwB
GwARALwBGwDRALwBGwAZAPoEjQDhALwBmwDhACwFoQDhADwFpQDpAFIFGwDZAFoFXQAZALwBGwAI
ABQATgAIABgAUwApAJMAgAAuABsAIQEuACMAIQEuAGMARwEuAAsAsAAuABMA+AAuADMA+AAuACsA
IQEuADsAJwEuAEMAIQEuAFsAPgFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1AKsAAgABAAMAAwAA
AG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAABkX6TEAAAAA
AADNAwAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAA
AAoA9QAAAAAAAwAAAAAAAAAAAAAAkgACBQAAAAAAAAAAAQAAAGkFAAAFAAQAAAAAAAA8TW9kdWxl
PgBTVF81YThmMGM4MDBiYmM0ZDMwYTI0NGZiZGMyNjYwMjRiNy5kbGwAUmVzb3VyY2VzAFNUXzA2
NTUwMGVhNDYxMjQ3MTFiMjIzN2EzYTlmYmIyYjhjLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0
TWFpbgBTVF8wNjU1MDBlYTQ2MTI0NzExYjIyMzdhM2E5ZmJiMmI4YwBTY3JpcHRSZXN1bHRzAG1z
Y29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0A
U3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZs
ZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlW
ZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF81
YThmMGM4MDBiYmM0ZDMwYTI0NGZiZGMyNjYwMjRiNwBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0
T2JqZWN0TW9kZWwAZ2V0X0R0cwBEZWxvaXR0ZS5QaXBlbGluZUZyYW1ld29yawBEZWxvaXR0ZVNj
cmlwdABnZXRfUGFja2FnZU5hbWUAVXBkYXRlQXBpAElEaXNwb3NhYmxlAERpc3Bvc2UAc2V0X1Rh
c2tSZXN1bHQAU1RfMDY1NTAwZWE0NjEyNDcxMWIyMjM3YTNhOWZiYjJiOGMuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAABxUwBUAF8AMAA2ADUANQAwADAAZQBhADQANgAxADIANAA3ADEA
MQBiADIAMgAzADcAYQAzAGEAOQBmAGIAYgAyAGIAOABjAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAApVd47LWlJkq6FdhOV9/DmQAIt3pcVhk04IkIiYRdzYCAzJED
BhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYR
FAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAA
AAAAAwAAAQQgABJtCPkCOjYN6EsMBSABARJtAyAADgUgAgEIDgQHARJxRwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
KAEAI1NUXzA2NTUwMGVhNDYxMjQ3MTFiMjIzN2EzYTlmYmIyYjhjAAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAALwt
AAAAAAAAAAAAAN4tAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQLQAAAAAAAAAAAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEA6TEZFwAAAQDpMRkXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAw
ADAAMAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADAANgA1ADUAMAAwAGUAYQA0ADYAMQAyADQANwAxADEAYgAyADIAMwA3AGEAMwBhADkAZgBi
AGIAMgBiADgAYwAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADkA
MQAzAC4AMQAyADcANwA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADUAYQA4AGYAMABjADgAMAAwAGIAYgBjADQAZAAzADAAYQAyADQANABmAGIAZABjADIANgA2ADAA
MgA0AGIANwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYA
aQBsAGUAbgBhAG0AZQAAAFMAVABfADUAYQA4AGYAMABjADgAMAAwAGIAYgBjADQAZAAzADAAYQAy
ADQANABmAGIAZABjADIANgA2ADAAMgA0AGIANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMA
dABOAGEAbQBlAAAAAABTAFQAXwAwADYANQA1ADAAMABlAGEANAA2ADEAMgA0ADcAMQAxAGIAMgAy
ADMANwBhADMAYQA5AGYAYgBiADIAYgA4AGMAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADUAOQAxADMALgAxADIANwA3ADcAAAAAAEgADwABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOQAxADMALgAxADIANwA3ADcAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAA8D0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set initialized to True"
      DTS:CreationName="Microsoft.ExpressionTask"
      DTS:Description="Expression Task"
      DTS:DTSID="{9bf14005-2ba8-4538-8de1-822d26e01f10}"
      DTS:ExecutableType="Microsoft.ExpressionTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set initialized to True"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExpressionTask
          Expression="@[User::cfg_tpl_IsPackageSlaInitialized] = True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Timeout expired"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{560b7029-ddbc-4a62-99b0-99c0ebee4afc}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Timeout expired">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Timeout expired\Log - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{f9a17350-29e4-405d-992a-5a66621041bf}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::varRunId]  +  ": Timeout expired after " + (DT_WSTR, 16) @[User::cfg_sla_TimeOutAfter] + " seconds.'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_CompanyRetrieval',@source_type='PCK',@source_name='CompanyRetrieval.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run 0: Timeout expired after 0 seconds.'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Timeout expired.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{4574E511-311B-4268-8EB0-CAF78C4C7D88}"
          DTS:EventID="219070844"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{6126F19F-6B37-4DDB-A388-7CFAB5E9FA6C}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Timeout expired.EventHandlers[OnPostExecute]\Event - Fail executable"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{dad34aee-3a2a-4dea-9c3c-87146d583bb0}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Event - Fail executable"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='fail',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Critical'"</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
                  SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='fail',@source_id='', @level='Critical'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\WAIT FOR Dependencies"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{E7110B51-5D9A-4251-85AF-AF9FBBDC427D}"
      DTS:EvalExpression="(! @cfg_tpl_depenciesChecked) &amp;&amp; (DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &gt; GETDATE())"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="WAIT FOR Dependencies">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\WAIT FOR Dependencies\Check dependencies"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{9B36EF08-6B3C-4A78-82D9-E23428C0834D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check dependencies"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::sqlDependencies"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="depenciesChecked"
                SQLTask:DtsVariableName="User::cfg_tpl_depenciesChecked" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{399011CF-B01F-4CBA-8704-44744F13A5EF}"
      DTS:From="Package\Initialize - template"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Check PRE-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{6216095A-75EE-473B-A484-041B240CCCA5}"
      DTS:From="Package\Initialize - specific"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Check PRE-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{C2C5AF84-1F45-454F-AD78-3124A24F6A12}"
      DTS:From="Package\Initialize SLA configuration"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\Set initialized to True" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{30C6E2B2-E181-4CD7-8FA8-21B831869706}"
      DTS:From="Package\Set initialized to True"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\Initialize - specific" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{63354301-A7CC-44E7-B0EC-65FCD8244132}"
      DTS:From="Package\Set initialized to True"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\Initialize - template" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{8B00D6B2-1D9E-432C-B602-D761D35DAC27}"
      DTS:From="Package\Check PRE-conditions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\WAIT FOR Dependencies" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{8BA36487-227E-47CF-931B-C40CC5A9A6A6}"
      DTS:EvalOp="3"
      DTS:Expression="(DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &gt; GETDATE())"
      DTS:From="Package\WAIT FOR Dependencies"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Execute Feature" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{774BE2CC-03D5-4E3E-9BD0-3CF03E3EA893}"
      DTS:From="Package\Execute Feature"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Check POST-conditions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{4B234718-80EB-4016-B23C-3A05DDDC36E6}"
      DTS:EvalOp="3"
      DTS:Expression="(DATEADD(&quot;ss&quot;, @cfg_sla_TimeOutAfter, @[System::ContainerStartTime]) &lt;= GETDATE())"
      DTS:From="Package\WAIT FOR Dependencies"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Timeout expired" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{644B342B-8E8A-48F7-917D-321453DE2939}"
      DTS:From="Package\Check POST-conditions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Sequence Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{A55E93E5-4876-4C67-8E21-F45778A8947A}"
      DTS:From="Package\Timeout expired"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Sequence Container 1" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{239EF5E7-53E5-4683-B4C6-31DFEE96BD36}"
      DTS:EventID="218076652"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{6864BC01-5101-400F-A361-9FDC9D1F84B4}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Event - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{E2DB43C5-6303-4837-ABE2-4FF43B329DDB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Event - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.event_addEntry @log='" + @[User::cfg_tpl_EventLog] + "',@type='fail',@source_id='" + @[User::cfg_sla_ComponentID] + "', @level='Critical'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
              SQLTask:SqlStatementSource="EXEC nlh.event_addEntry @log='Application',@type='fail',@source_id='', @level='Critical'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Log - Fail executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{87ACB43E-CBAC-4656-B336-C11694DAB825}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Fail executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='ERROR', @message = 'Run " + (DT_WSTR, 16) @[User::cfg_sla_RunID]  +  ": Failed executable " +  @[System::SourceName] + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_CompanyRetrieval',@source_type='PCK',@source_name='CompanyRetrieval.dtsx', @source_id=null, @action='END', @status='ERROR', @message = 'Run -1: Failed executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{7544B3BB-D889-40DE-835D-744C26D3A443}"
      DTS:EventID="217598736"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{329EB172-66ED-419A-ACBC-4F3067DAFC57}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Log - End executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{290EDCF7-39C6-4C2C-8435-D765327271CC}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - End executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='END', @status='SUCCESS', @rowcount=" + (DT_WSTR, 16) @[User::varRowCount]  + ", @message = 'Run " + (DT_WSTR, 16) @[User::cfg_sla_RunID]  +  ": Completed executable " +  @[System::SourceName] + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_CompanyRetrieval',@source_type='PCK',@source_name='CompanyRetrieval.dtsx', @source_id=null, @action='END', @status='SUCCESS', @rowcount=0, @message = 'Run -1: Completed executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPreExecute]"
      DTS:CreationName="OnPreExecute"
      DTS:DTSID="{0E67B56E-32FE-47EB-8709-5872EBACD80D}"
      DTS:EventID="0"
      DTS:EventName="OnPreExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{692402B4-C400-47D8-B617-FC5280AC5037}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\Log - Start executable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{08D969C4-ABDB-47AA-B874-9F9C81A41CCB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log - Start executable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">! ( @[User::cfg_tpl_IsPackageSlaInitialized] )</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"EXEC nlh.log_addEntry @component='" + @[User::cfg_tpl_Pipeline] + "_" + @[User::cfg_tpl_Feature] + "',@source_type='PCK',@source_name='" + @[System::PackageName]  + ".dtsx', @source_id=" + (	( LEN(@[User::cfg_sla_ComponentID]) == 0 ) ? "null" : "'" + @[User::cfg_sla_ComponentID] + "'" ) + ", @action='START', @status='SUCCESS', @message = 'Run " + (DT_WSTR, 16) @[User::cfg_sla_RunID]  +  ": Starting executable " +  @[System::SourceName] + "'"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2A4FB482-553B-42E7-B741-0DD445452F1D}"
              SQLTask:SqlStatementSource="EXEC nlh.log_addEntry @component='Longlist_CompanyRetrieval',@source_type='PCK',@source_name='CompanyRetrieval.dtsx', @source_id=null, @action='START', @status='SUCCESS', @message = 'Run -1: Starting executable '" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="211,55"
          Size="211,98"
          Id="Package\Check POST-conditions"
          TopLeft="578.904761904762,1547.80952380953" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,55"
          Size="205,98"
          Id="Package\Check PRE-conditions"
          TopLeft="635.5,554.5" />
        <NodeLayout
          Size="159,42"
          Id="Package\Execute Feature\Delete duplicates"
          TopLeft="371.142857142857,403.571428571429" />
        <NodeLayout
          Size="143,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag of Words"
          TopLeft="409,219" />
        <NodeLayout
          Size="159,42"
          Id="Package\Execute Feature\Foreach Loop Container\Basic Constraints"
          TopLeft="729,217" />
        <NodeLayout
          Size="142,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company List"
          TopLeft="33,221" />
        <NodeLayout
          Size="155,42"
          Id="Package\Execute Feature\Foreach Loop Container\Expression Task"
          TopLeft="223,95" />
        <NodeLayout
          Size="169,42"
          Id="Package\Execute Feature\Foreach Loop Container\Patent Class Profile"
          TopLeft="214,218" />
        <NodeLayout
          Size="131,42"
          Id="Package\Execute Feature\Foreach Loop Container\Script Task"
          TopLeft="239,16" />
        <NodeLayout
          Size="134,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic Score"
          TopLeft="577,217" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="263.75,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-159.75,84"
              Start="0,0"
              End="-159.75,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.9471458773784" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.9471458773784"
                    Point2="0,28.9471458773784"
                    Point3="-4,28.9471458773784" />
                  <mssgle:LineSegment
                    End="-155.75,28.9471458773784" />
                  <mssgle:CubicBezierSegment
                    Point1="-155.75,28.9471458773784"
                    Point2="-159.75,28.9471458773784"
                    Point3="-159.75,32.9471458773784" />
                  <mssgle:LineSegment
                    End="-159.75,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-87.875,33.9471458773784,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="299.5,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,81"
              Start="0,0"
              End="0,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,28.75,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="337.25,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="143.25,82"
              Start="0,0"
              End="143.25,74.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.2579281183932" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.2579281183932"
                    Point2="0,28.2579281183932"
                    Point3="4,28.2579281183932" />
                  <mssgle:LineSegment
                    End="139.25,28.2579281183932" />
                  <mssgle:CubicBezierSegment
                    Point1="139.25,28.2579281183932"
                    Point2="143.25,28.2579281183932"
                    Point3="143.25,32.2579281183932" />
                  <mssgle:LineSegment
                    End="143.25,74.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="63.625,33.2579281183932,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="302.5,58">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="344.6,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="299.4,80"
              Start="0,0"
              End="299.4,72.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.0937781785392" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.0937781785392"
                    Point2="0,24.0937781785392"
                    Point3="4,24.0937781785392" />
                  <mssgle:LineSegment
                    End="295.4,24.0937781785392" />
                  <mssgle:CubicBezierSegment
                    Point1="295.4,24.0937781785392"
                    Point2="299.4,24.0937781785392"
                    Point3="299.4,28.0937781785392" />
                  <mssgle:LineSegment
                    End="299.4,72.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="141.7,29.0937781785392,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="349.5,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="459,80"
              Start="0,0"
              End="459,72.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5094339622642" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.5094339622642"
                    Point2="0,21.5094339622642"
                    Point3="4,21.5094339622642" />
                  <mssgle:LineSegment
                    End="455,21.5094339622642" />
                  <mssgle:CubicBezierSegment
                    Point1="455,21.5094339622642"
                    Point2="459,21.5094339622642"
                    Point3="459,25.5094339622642" />
                  <mssgle:LineSegment
                    End="459,72.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="221.5,26.5094339622642,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="893,305"
          Size="893,348"
          Id="Package\Execute Feature\Foreach Loop Container"
          TopLeft="9.66666666666669,22.6666666666667" />
        <EdgeLayout
          Id="Package\Execute Feature.PrecedenceConstraints[Constraint]"
          TopLeft="453.404761904762,370.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.9047619047623"
              Start="0,0"
              End="0,25.4047619047623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.4047619047623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="920,541"
          Size="920,584"
          Id="Package\Execute Feature"
          TopLeft="406.333333333333,914" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="244,198"
          Size="244,241"
          Id="Package\Initialize - specific"
          TopLeft="838,233.571428571429" />
        <NodeLayout
          Size="192,42"
          Id="Package\Initialize - template\Get server configuration"
          TopLeft="51,13" />
        <NodeLayout
          Size="225,42"
          Id="Package\Initialize - template\Initialize package configuration"
          TopLeft="40,202" />
        <NodeLayout
          Size="192,58"
          Id="Package\Initialize - template\Set configuration through Invocation Handler"
          TopLeft="54,94" />
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint]"
          TopLeft="148.5,55">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialize - template.PrecedenceConstraints[Constraint 1]"
          TopLeft="151.25,152">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="293,294"
          Size="293,337"
          Id="Package\Initialize - template"
          TopLeft="370,212.642857142857" />
        <NodeLayout
          Size="204,42"
          Id="Package\Initialize SLA configuration"
          TopLeft="627,1" />
        <NodeLayout
          Size="139,42"
          Id="Package\Sequence Container\NotifySsisApi"
          TopLeft="36,24" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,121"
          Size="205,164"
          Id="Package\Sequence Container"
          TopLeft="576.190476190476,1690.09523809524" />
        <NodeLayout
          Size="139,42"
          Id="Package\Sequence Container 1\NotifySsisApi"
          TopLeft="36,24" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,121"
          Size="205,164"
          Id="Package\Sequence Container 1"
          TopLeft="1342.33333333333,694.095238095241" />
        <NodeLayout
          Size="179,42"
          Id="Package\Set initialized to True"
          TopLeft="643,117" />
        <NodeLayout
          Size="176,42"
          Id="Package\Timeout expired\Log - Fail executable"
          TopLeft="35,35" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="241,131"
          Size="241,174"
          Id="Package\Timeout expired"
          TopLeft="997.333333333333,693.66666666667" />
        <NodeLayout
          Size="163,42"
          Id="Package\WAIT FOR Dependencies\Check dependencies"
          TopLeft="49.5714285714286,29.8571428571428" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="270,116"
          Size="270,159"
          Id="Package\WAIT FOR Dependencies"
          TopLeft="610.928571428572,695.535714285714" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="663,381.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="42.1666666666666,173.357142857143"
              Start="0,0"
              End="42.1666666666666,165.857142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="38.1666666666666,0" />
                  <mssgle:CubicBezierSegment
                    Point1="38.1666666666666,0"
                    Point2="42.1666666666666,0"
                    Point3="42.1666666666666,4" />
                  <mssgle:LineSegment
                    End="42.1666666666666,165.857142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="960,474.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-189.166666666667,79.928571428571"
              Start="0,0"
              End="-189.166666666667,72.428571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5857419444057" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.5857419444057"
                    Point2="0,47.5857419444057"
                    Point3="-4,47.5857419444057" />
                  <mssgle:LineSegment
                    End="-185.166666666667,47.5857419444057" />
                  <mssgle:CubicBezierSegment
                    Point1="-185.166666666667,47.5857419444057"
                    Point2="-189.166666666667,47.5857419444057"
                    Point3="-189.166666666667,51.5857419444057" />
                  <mssgle:LineSegment
                    End="-189.166666666667,72.428571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="730.75,43">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74"
              Start="0,0"
              End="0,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="732.5,159">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="266.833333333333,74.571428571429"
              Start="0,0"
              End="266.833333333333,67.071428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.4513727315033" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.4513727315033"
                    Point2="0,44.4513727315033"
                    Point3="4,44.4513727315033" />
                  <mssgle:LineSegment
                    End="262.833333333333,44.4513727315033" />
                  <mssgle:CubicBezierSegment
                    Point1="262.833333333333,44.4513727315033"
                    Point2="266.833333333333,44.4513727315033"
                    Point3="266.833333333333,48.4513727315033" />
                  <mssgle:LineSegment
                    End="266.833333333333,67.071428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="704,159">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-140,53.642857142857"
              Start="0,0"
              End="-140,46.142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.9359663346149" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.9359663346149"
                    Point2="0,26.9359663346149"
                    Point3="-4,26.9359663346149" />
                  <mssgle:LineSegment
                    End="-136,26.9359663346149" />
                  <mssgle:CubicBezierSegment
                    Point1="-136,26.9359663346149"
                    Point2="-140,26.9359663346149"
                    Point3="-140,30.9359663346149" />
                  <mssgle:LineSegment
                    End="-140,46.142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="741.964285714286,652.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.0357142857141"
              Start="0,0"
              End="0,35.5357142857141">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5357142857141" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="745.928571428572,854.535714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120.404761904761,59.464285714286"
              Start="0,0"
              End="120.404761904761,51.964285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.732142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.732142857143"
                    Point2="0,29.732142857143"
                    Point3="4,29.732142857143" />
                  <mssgle:LineSegment
                    End="116.404761904761,29.732142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="116.404761904761,29.732142857143"
                    Point2="120.404761904761,29.732142857143"
                    Point3="120.404761904761,33.732142857143" />
                  <mssgle:LineSegment
                    End="120.404761904761,51.964285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="52.2023809523805,34.732142857143,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="866.333333333333,1498">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-181.928571428571,49.80952380953"
              Start="0,0"
              End="-181.928571428571,42.30952380953">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.904761904765" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.904761904765"
                    Point2="0,24.904761904765"
                    Point3="-4,24.904761904765" />
                  <mssgle:LineSegment
                    End="-177.928571428571,24.904761904765" />
                  <mssgle:CubicBezierSegment
                    Point1="-177.928571428571,24.904761904765"
                    Point2="-181.928571428571,24.904761904765"
                    Point3="-181.928571428571,28.904761904765" />
                  <mssgle:LineSegment
                    End="-181.928571428571,42.30952380953" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="880.928571428572,777.851190476192">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="116.404761904761,0"
              Start="0,0"
              End="108.904761904761,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="108.904761904761,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="46.4523809523805,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="681.547619047619,1645.80952380953">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.2857142857147"
              Start="0,0"
              End="0,36.7857142857147">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.7857142857147" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="1238.33333333333,778.380952380956">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="104,0"
              Start="0,0"
              End="96.4999999999998,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="96.4999999999998,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Event - Fail executable"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Log - Fail executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\Log - End executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPreExecute]\Log - Start executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Check POST-conditions.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Check POST-conditions.EventHandlers[OnPostExecute]\Event - End executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Check PRE-conditions.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Check PRE-conditions.EventHandlers[OnPostExecute]\Event - Start executable"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Bag of Words">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="113,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup"
          TopLeft="398,398" />
        <NodeLayout
          Size="163,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag of Words\Script Component"
          TopLeft="378,160" />
        <NodeLayout
          Size="199,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist"
          TopLeft="356,481" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag of Words\Row Count"
          TopLeft="388,331" />
        <NodeLayout
          Size="218,42"
          Id="Package\Execute Feature\Foreach Loop Container\Bag of Words\Add retrieval key as a column"
          TopLeft="348,254" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag of Words.Paths[Derived Column Output]"
          TopLeft="455,296">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag of Words.Paths[Row Count Output 1]"
          TopLeft="453.75,373">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag of Words.Paths[Output 0]"
          TopLeft="458.25,202">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Bag of Words.Paths[Lookup No Match Output]"
          TopLeft="455,440">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,10.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Bag of Words\Write to company longlist">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Bag of Words\Lookup">
    <Properties>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q2:string">[dbo].[company_long_list]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q3:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q4:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Basic Constraints">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="159,42"
          Id="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Basic Constraints"
          TopLeft="371,155" />
        <NodeLayout
          Size="113,42"
          Id="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Lookup"
          TopLeft="398,398" />
        <NodeLayout
          Size="199,42"
          Id="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist"
          TopLeft="356,481" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Row Count"
          TopLeft="388,331" />
        <NodeLayout
          Size="218,42"
          Id="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Add retrieval key as a column"
          TopLeft="348,254" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Basic Constraints.Paths[Derived Column Output]"
          TopLeft="455,296">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Basic Constraints.Paths[Row Count Output 1]"
          TopLeft="453.75,373">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Basic Constraints.Paths[Output 0]"
          TopLeft="453.75,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Basic Constraints.Paths[Lookup No Match Output]"
          TopLeft="455,440">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,10.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Basic Constraints\Write to company longlist">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Company List">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist"
          TopLeft="377,275" />
        <NodeLayout
          Size="199,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist"
          TopLeft="362,418" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company List\Row Count"
          TopLeft="400,346" />
        <NodeLayout
          Size="359,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic"
          TopLeft="284,79" />
        <NodeLayout
          Size="158,42"
          Id="Package\Execute Feature\Foreach Loop Container\Company List\Add retrieval key"
          TopLeft="385,208" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Company List.Paths[OLE DB Source Output]"
          TopLeft="463.75,121">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,87"
              Start="0,0"
              End="0,79.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Company List.Paths[Lookup No Match Output]"
          TopLeft="462.25,317">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,4.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Company List.Paths[Derived Column Output]"
          TopLeft="461.75,250">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Company List.Paths[Row Count Output 1]"
          TopLeft="463.25,388">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Company List\Get companies from input string and lookup names in Basic">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Company List\Check if they exist">
    <Properties>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q2:string">[dbo].[company_long_list]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q3:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q4:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Company List\Write to company longlist">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Patent Class Profile">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="113,42"
          Id="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup"
          TopLeft="404,334" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Row Count"
          TopLeft="401,415" />
        <NodeLayout
          Size="199,42"
          Id="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist"
          TopLeft="370,486" />
        <NodeLayout
          Size="205,42"
          Id="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Patent Class Profile Source"
          TopLeft="365,111" />
        <NodeLayout
          Size="218,42"
          Id="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Add retrieval key as a column"
          TopLeft="358,266" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Patent Class Profile.Paths[Row Count Output 1]"
          TopLeft="467.75,457">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Patent Class Profile.Paths[Output 0]"
          TopLeft="467.25,153">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,113"
              Start="0,0"
              End="0,105.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,105.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Patent Class Profile.Paths[Lookup No Match Output]"
          TopLeft="463.25,376">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,9.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Patent Class Profile.Paths[Derived Column Output]"
          TopLeft="463.75,308">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Write to company longlist">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Patent Class Profile\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[company_long_list]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Execute Feature\Foreach Loop Container\Topic Score">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="113,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup"
          TopLeft="398,398" />
        <NodeLayout
          Size="178,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic Score\Topic Score Retrieval"
          TopLeft="372,170" />
        <NodeLayout
          Size="199,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist"
          TopLeft="356,481" />
        <NodeLayout
          Size="130,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic Score\Row Count"
          TopLeft="388,331" />
        <NodeLayout
          Size="218,42"
          Id="Package\Execute Feature\Foreach Loop Container\Topic Score\Add retrieval key as a column"
          TopLeft="348,254" />
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Topic Score.Paths[Derived Column Output]"
          TopLeft="455,296">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Topic Score.Paths[Row Count Output 1]"
          TopLeft="453.75,373">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Topic Score.Paths[Output 0]"
          TopLeft="459,212">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Execute Feature\Foreach Loop Container\Topic Score.Paths[Lookup No Match Output]"
          TopLeft="455,440">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,10.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Topic Score\Write to company longlist">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Execute Feature\Foreach Loop Container\Topic Score\Lookup">
    <Properties>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q2:string">[dbo].[company_long_list]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q3:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q4:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="160,42"
          Id="Package\Initialize SLA configuration.EventHandlers[OnPostExecute]\Log SLA property"
          TopLeft="29,20" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Timeout expired.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Timeout expired.EventHandlers[OnPostExecute]\Event - Fail executable"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>